* Basecamp
:PROPERTIES:
:ID:       22fe951d-84ef-4031-a4a0-1833237bf4bf
:RESET_CHECK_BOXES: t
:END:
** [[id:76a6e083-f569-42a9-b551-4b9ccc770834][Basecamp conda environment]]
** [[id:89576FD2-F863-4220-BAD7-D4E179AEA644][Bash and shell]]
** [[id:a49abc44-8e71-4a1a-bd35-a77849427c94][Emacs]]
** [[id:cd560390-aa1e-4c9e-8317-08610e5de42a][Linux]]
** [[id:88337952-4c36-402e-882f-6ccd6c7ff6a1][Org-mode and Emacs cookbook]]
** [[id:28ed3017-eedb-4a6c-94e5-f477353170c8][Public emacs configuration]]
** [[id:CA21AAC9-F147-4086-A24C-64451EE349F3][Python]]
** [[id:F9ACCF3D-896B-4FC4-92FD-31A2D6E977DD][R Statistical Computing]]
** [[id:00656e3d-e62c-4ace-a27c-252b56010fe0][Scientific Project Template]]
** [[id:9E19E626-9D6C-4296-BEDB-80033A846CF4][Software]]
** README
:PROPERTIES:
:export_file_name: ./README.md
:ID:       8ef18403-e54c-4b4c-b38f-8d59e914c997
:END:
*** Readme orgmode repo text                                         :ignore:
:PROPERTIES:
:ID:       fb93d43a-f6ad-490f-8262-01f6b8ff10d0
:CUSTOM_ID:       fb93d43a-f6ad-490f-8262-01f6b8ff10d0
:END:
Code files in this repository are managed through [[ https://orgmode.org/manual/Extracting-Source-Code.html][extracting ("tangling") code]] within source code blocks of Emacs Org-mode text files. Tangling overwrites existing target files.
** Documentation
:properties:
:export_date:
:export_file_name: ./docs/basecamp-documentation.pdf
:export_latex_class: empty
:export_latex_header+: \usepackage{/home/jeszyman/repos/latex/sty/documentation}
:export_title: Basecamp
:export_options: toc:t num:t \n:t
:ID:       c364a0c0-10c3-4476-ad24-60dd5def3ff4
:CUSTOM_ID:       c364a0c0-10c3-4476-ad24-60dd5def3ff4
:end:

:noexport:
 [[elisp:(run-latex-at-point)][compile]] using [[id:3975a173-ac71-4c02-b032-ef215329ca59][_run-latex-at-point]]_
:end:
*** LaTeX Reference                                                :noexport:
- [[file:basecamp-documentation.tex][TeX]]
- [[file:basecamp-documentation.pdf][pdf]]
- [[id:f453bd37-55e8-46ee-9cf5-c499d7e7c5d9][Documentation style]]
*** Preamble                                                         :ignore:

#+include: "./latex/latex.org::#dd9bb77e-6ff7-44e0-9026-c371bdaf9603" :only-contents t
#+latex: % [[file:~/repos/latex/latex.org::#dd9bb77e-6ff7-44e0-9026-c371bdaf9603][Last compiled]]


*** Setup and Configuration
**** General Information and Good Practice for Base Computing Setup
***** Bash Configuration
[[file:~/.bashrc][.bashrc]] is used for interactive shell customizations and [[file:~/.profile][.profile]] is used for setting up environment variables and system-wide settings needed during the login process.
****** Bashrc
- The default bashrc lives at /etc/skel/.bashrc.
- Other programs such as singularity or conda may write directly to bashrc.
- Otherwise, bashrc is not altered automatically, as through Org-mode tangling. Instead, additional code is sourced though a simple if else statement. I source my basecamp shell libraries as follows:

  #+begin_src bash

for file in "${HOME}"/repos/basecamp/lib/*.sh; do
    if [ -f "$file" ]; then
        source "$file"
    fi
done

#+end_src

- Use functions instead of aliases. Functions are more flexible, and can be debugged.
**** An opinionated and incomplete base computing configuration
***** Base operating system

My base operating system is linux Ubuntu using a long-term support (LTS) version.

***** Bash
***** Git repositories
Git repos live in ${HOME}/repos.

Git repos are modular using the git submodule structure.

Git repos are pushed to GitHub.

Git version control follows a simple trunk-based development strategy, with a single active branch: master. Major changes can be spun out into separate branches, but should be quickly merged back to master after changes are validated. Stable, validated versions are occasionally saved as git tags.

****** Repositories where I am the main or sole author

Repository code is tangled from a single Org-mode file. Updates from others are through pull requests as tangling would overwrite any direct commits.

***** Core directory structure
-- /
   |---|
   |---|
   |---|
   |---|
   |---|
   |---|
***** Data governance
****** Security
****** Architecture
****** Lifecycle
****** Management
******* Backup
***** Core applications
core components (incomplete)
- installed via apt
  - syncthing
  - i3
  - emacs
  - texlive
  - texlive
  - rclone
  - okular
  - libreoffice
  - minor
    - tree
- R
****** R
- [ ] convert python and R to argparse https://www.google.com/search?q=r+argparse+optparse&oq=r+argparse+optparse&gs_lcrp=EgZjaHJvbWUyBggAEEUYOdIBCDg2MDFqMGo0qAIAsAIA&sourceid=chrome-mobile&ie=UTF-8
****** Python
:PROPERTIES:
:ID:       6d4098eb-b91f-46b5-84af-c39442c0c5c9
:END:
- [ ] convert python and R to argparse https://www.google.com/search?q=r+argparse+optparse&oq=r+argparse+optparse&gs_lcrp=EgZjaHJvbWUyBggAEEUYOdIBCDg2MDFqMGo0qAIAsAIA&sourceid=chrome-mobile&ie=UTF-8

****** Emacs
******* Initialization

When my Emacs loads, several configuration files and directories are references by symbolic link from git repositories to the default ~/.emacs.d directory:

- init.el
- public_emacs_config.el
- private_emacs_config.el
- public_yasnippets
- private_yasnippets

These are loaded as optional files and if not found, they will throw a warning on initialization. These files are generated by Org-mode tangle.

The init.el file is compiled from the Org-mode header a simple wrapper for other Elisp files.

My public customized Emacs initialization is compiled from the Org-mode header [[id:28ed3017-eedb-4a6c-94e5-f477353170c8][basecamp.org::Public configuration]] and tangles to [[file:config/public_emacs_config.el][./config/public_emacs_config.el]].

******** Style and good practice

Use-package is my preferred package management system. By default, use-package loads are structured as:

(use-package package2
  :ensure t
  :init
  :config
)

Each use-package keyword will expect a list or needs to be removed. Other keywords exist (see [[https://www.gnu.org/software/emacs/manual/html_node/use-package/index.html#SEC_Contents][documentation]]).

- :ensure t will install any missing package
- :init is evaluated before package loading
- :config is evaluated after package loading

******* Org-mode
******** Policy, style, and good practice
********* Block structures, source code, and tangling

Lowercase is preferred for all block notation, /e.g./

#+begin_src emacs-lisp
#+end_src

instead of

#+BEGIN_SRC
#+END_SRC

At the file level, tangled code should reference it's location in orgmode files.
tangle defaults to ./
******* Templating with YASnippets
My public YASnippets are compiled from source code blocks across my Org-mode agenda files. These tangle into appropriate subdirectories of [[file:emacs/public_yasnippets/][./emacs/public_yasnippets]]. Private snippets are tangled into appropriate subdirectories of [[file:~/repos/org/emacs/private_yasnippets][org/emacs/private_yasnippets]].
*** Pan-computing Good Practive and General Style Guide
- Directory names should be in hyphen-case, using only lowercase letters (a-z), digits (0-9), and hyphens (-) as separators. Use as few words as possible
  - Can use more human-friendly title case and spaces with symlinks and shortcuts
- Prefer single-word file and directory names
- For multi-word file and directory names, prefer a dash (-) separator (/e.g./ a-longer-file-name.txt)
*** Conda

For repositories and projects with heavy use of Python and R, software should be managed through the Conda package manager.
**** My Basecamp Conda Environment

A basecamp conda environment is stored in this repository at basecamp_env.yaml.
*** Emacs
**** Setup, configuration, and customization

My setup assumes normal emacs initialization and package structure at ~/.emacs.d. The ~/.emacs.d/init.el ensures package management and then conditionally loads other lisp files, if they exist, in the following order:

1) ~/.emacs.d/load-early.el
2) ~/.emacs.d/config/
3) ~/.emacs.d/load-late.el

The ~/.emacs.d/config directory can contain symlinked lisp files from other locations. There is no assumed order within that directory.

All files mentioned here can be found in the [[id:7b58510f-fe81-4f0f-beaf-e3b369d06b9a][Lisp Files]] appendix below.

load-path is a list of directories that Emacs searches when you use functions like require, load, or when Emacs needs to find a library or package. When you add a directory to load-path, you're telling Emacs where to look for Emacs Lisp files when they need to be loaded. My load path is simply the default package location ~/.emacs.d/elpa and also all files anywhere within ~/.emacs.d/lisp

- File backup
  - Local
    - Backup on save to ~/.emacs.d/backup-save-list
    - Emacs auto-saves on default settings to ~/.emacs.d/auto-save-list [[id:33c98414-ab56-4854-9823-1b8b4ef13fd6][Save and Backup]]
**** Simple Emacs Lisp Tutorial
Alist



alist: association list, stores key-value pairs
#+begin_src emacs-lisp :results value code replace
(setq my-alist '((key1 . value1)
                 (key2 . value2)
                 (key3 . value3)))

(assoc 'key2 my-alist)  ;; Returns (key2 . value2)
(cdr (assoc 'key2 my-alist))  ;; Returns value2

(setq my-alist (cons '(key4 . value5) my-alist))  ;; Adds (key4 . value4) to the front of the alist
(setq my-alist (assoc-delete-all 'key2 my-alist))  ;; Removes the element with key 'key2'

#+end_src

#+RESULTS[a49590b1fdd87671219287b990cb2633b8d11d53]:
#+begin_src emacs-lisp
((key4 . value5)
 (key1 . value1)
 (key3 . value3))
#+end_src

#+begin_src emacs-lisp :results output replace
(setq my-alist '((key1 . value1)
                 (key2 . value2)
                 (key3 . value3)))

(prin1 (assoc 'key2 my-alist))  ;; Display (key2 . value2)
(princ "\n")  ;; Add a newline for readability
(prin1 (cdr (assoc 'key2 my-alist)))  ;; Display value2
(princ "\n")  ;; Add a newline for readability

(setq my-alist (cons '(key4 . value4) my-alist))  ;; Adds (key4 . value4) to the front of the alist
(prin1 my-alist)  ;; Display the updated alist
(princ "\n")  ;; Add a newline for readability

(setq my-alist (assoc-delete-all 'key2 my-alist))  ;; Removes the element with key 'key2'
(prin1 my-alist)  ;; Display the final alist
#+end_src

#+RESULTS[272d07425f15eecf938925144c3bcfbe62dcf8ce]:
: (key2 . value2)
: value2
: ((key4 . value4) (key1 . value1) (key2 . value2) (key3 . value3))
: ((key4 . value4) (key1 . value1) (key3 . value3))




progn: special form to evaluate sequence of expressions
#+begin_src emacs-lisp :results output
(progn
  (message "First")
  (message "Second"))

#+end_src

#+RESULTS[016fa4d1113146028616d5a37fedf60a4275ed16]:
: Second
**** Org-mode

If you place an asterisk at the beginning of your search, Org-mode will search only headlines (and not entry text). E.g., to find all entries with "emacs" in the headline, you could type:

#+begin_src emacs-lisp
C-c a s
[+-]Word/{Regexp} ...: *+emacs

#+end_src
**** Literate Programming with Emacs Org-mode

Generally comments should reside within the Org-mode structure and outside of code blocks. Tangling with a header argument :comments org will include both the header text and text between the header and code block. For example:

(property drawers are excluded from tangling with custom-org-remove-properties-drawer)
***** For example:
****** This header will be a comment
:properties:
:header-args:bash: :tangle /tmp/test.sh :comments org
:end:

This text in org and below the header will be a comment

#+begin_src bash

# This text within the code block will be a comment

ls

#+end_src

This comment will not appear in the tangled code

******* Child headers are not comments unless they contain more code blocks
****** Result:

# This header will be a comment

# This text in org and below the header will be a comment


# This text within the code block will be a comment

ls

**** YASnippets Style Guide and Good Practice
  -
    - snippets are associated with a specific major mode, use of bash mode is discouraged
    - As snippets are associated with major modes, single word keywords are encouraged (e.g. function instead of bash.function)
    - snippets expand on tab
    - for modes with extensive snippet libraries, prefixes followed by a single period are preferred (e.g. mod.meeting)
    - prefixed snippets keywords are not likely to be confused with non-snippet terms, and they should expand without trigger
    - Snippet creation and storage
      - Snippets are created in org mode bash source code blocks with formatting as in the [[yas.block]] snippet
	- Each snippet resides under it's own terminal org mode header. The header consists of only the snippet keyword and tags including the :yas: tag (i.e. * <SNIPPET KEYWORD> :yas: )
	- The :yas: tag is reserved exclusively for yas block headers and does not have tag inheritance.
      - Snippets are stored in the main org repository under the directory./snippets which is symlinked to .emacs.d. Snippets are therefore under org version control.
**** Notes
See also Emacs and Org-mode use in my LaTeX repository ([[https://github.com/jeszyman/latex][GitHub]], [[plain:7F54F016-934E-45AA-BABF-B640464BDEF1][local buffer]]).
*** Appendices
**** Lisp Files
:PROPERTIES:
:ID:       7b58510f-fe81-4f0f-beaf-e3b369d06b9a
:END:
***** Initialization
#+begin_export latex
\inputminted{emacs-lisp}{../emacs/init.el}
#+end_export
***** Load First
#+begin_export latex
\inputminted{emacs-lisp}{../emacs/init.el}
#+end_export
***** Public configuration
#+begin_export latex
\inputminted{emacs-lisp}{../emacs/public_config.el}
#+end_export
***** Load Last
#+begin_export latex
\inputminted{emacs-lisp}{../emacs/load-last.el}
#+end_export
** Configuration files
#+begin_src yaml :tangle ./config/config.yaml
#########1#########1#########1#########1#########1#########1#########1#########1
apt_packages:
  - ansible                   # Provisioning automation tool
  - brave-browser             # Web browser
  - curl                      # Command-line tool for HTTP requests
  - fonts-firacode            # Monospaced font with ligatures
  - git                       # Version control system
  - htop                      # Interactive process viewer
  - hunspell                  # Spell checker library
  - hunspell-en-us            # English dictionary for Hunspell
  - jq                        # JSON processor
  - okular                    # Universal document viewer (PDF, ePub, etc.)
  - pandoc                    # Document converter (Markdown, LaTeX, etc.)
  - syncthing                 # Continuous file synchronization
  - texlive-full              # Complete LaTeX distribution
  - tree                      # Directory structure viewer
  - ttf-mscorefonts-installer # Microsoft TrueType fonts
  - vim                       # Advanced text editor
  
directory_structure:
  - "${HOME}/repos"
  
public_symlinks:
  - src: "${HOME}/repos/basecamp/emacs/init.el"
    dest: "${HOME}/.emacs.d/init.el"
  - src: "${HOME}/repos/basecamp/emacs/load-first.el"
    dest: "${HOME}/.emacs.d/load-first.el"
  - src: "${HOME}/repos/basecamp/emacs/load-last.el"
    dest: "${HOME}/.emacs.d/load-last.el"
  - src: "${HOME}/repos/basecamp/emacs/public_yasnippets"
    dest: "${HOME}/.emacs.d/public_yasnippets"
  - src: "${HOME}/repos/basecamp/lib/lisp_functions.el"
    dest: "${HOME}/.emacs.d/lisp/lisp_functions.el"
  - src: "${HOME}/repos/basecamp/emacs/public_config.el"
    dest: "${HOME}/.emacs.d/config/public_config.el"
  - src: "${HOME}/repos/basecamp/emacs/essh.el"
    dest: "${HOME}/.emacs.d/lisp/essh.el"

wget_downloads:
  - src: https://www.emacswiki.org/emacs/download/essh.el
    dest: "${HOME}/repos/basecamp/emacs/essh.el"
#+end_src
** Ansible
- See [[id:1169cb65-4a18-43d3-9643-67ac3e85f0d1][general ansible reference]]
*** Public common playbook :ansipb:
:PROPERTIES:
:ID:       42a1c7e4-9b67-41b6-8336-83e061da7154
:header-args:yaml: :tangle ./ansible/playbooks/public-common-playbook.yaml :mkdirp yes
:END:
[[file:ansible/playbooks/public-common-playbook.yaml]]
**** Preamble
#+begin_src yaml
---
- name: Common Public Playbook
  hosts: all
  gather_facts: true

  tasks:
#+end_src
**** [[id:537315c8-951a-42bc-99af-c3977c19e812][Debugging info]]
#+begin_src yaml
<#~/repos/basecamp/basecamp.org:ansible-debugging-info()#>
#+end_src
**** Include variables from the basecamp repo config file
#+begin_src yaml
    - name: Include config yaml
      include_vars:
        file: "{{ ansible_env.HOME }}/repos/basecamp/config/config.yaml"
#+end_src
**** Make directory structure
#+begin_src yaml
    - name: Ensure directories are created without changing existing permissions
      file:
        path: "{{ item | expanduser }}"
        state: directory
      loop: "{{ directory_structure }}"
      vars:
        directory_structure: "{{ directory_structure | default([]) }}"
    
#+end_src
**** Download from urls
#+begin_src yaml
    - name: Ensure destination directory exists
      file:
        path: "{{ item.dest | dirname }}"
        state: directory
        mode: '0755'
      loop: "{{ wget_downloads }}"

    - name: Download file only if changed
      get_url:
        url: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: '0644'
        force: no  # Ensures re-download only if file is missing or modified
      loop: "{{ wget_downloads }}"
#+end_src

**** Make symlinks
#+begin_src yaml
    - name: Check symlink sources
      ansible.builtin.stat:
        path: "{{ item.src }}"
      register: symlink_sources
      loop: "{{ public_symlinks }}"
      no_log: true

    - name: Output missing symlink sources
      debug:
        msg: "Missing source: {{ item.item.src }}"
      loop: "{{ symlink_sources.results | selectattr('stat.exists', 'equalto', false) | list }}"

    - name: Make public symlinks for existing sources
      ansible.builtin.file:
        src: "{{ item.item.src }}"
        dest: "{{ item.item.dest }}"
        state: link
        force: yes
        follow: false
      loop: "{{ symlink_sources.results }}"
      when: item.stat.exists
      no_log: true
      
#+end_src
**** Install software
***** ATP installs
#+begin_src yaml
    - name: Ensure APT packages are installed
      apt:
        name: "{{ apt_packages }}"
        state: latest 
        update_cache: yes
      become: true  
#+end_src
***** Non-ATP Installs
****** yq
#+begin_src yaml
    - name: Download yq binary
      become: true
      ansible.builtin.get_url:
        url: https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        dest: /usr/local/bin/yq
        mode: '0755'
        force: no

    - name: Verify yq installation
      become: true
      ansible.builtin.command: yq --version
      register: yq_version
      failed_when: "'version' not in yq_version.stdout.lower()"

    - name: Debug yq version
      ansible.builtin.debug:
        msg: "yq successfully installed: {{ yq_version.stdout }}"
#+end_src

****** Python 
****** Nerd fonts
#+begin_src yaml
    - name: Ensure fonts directory exists
      file:
        path: "{{ ansible_env.HOME }}/.local/share/fonts"
        state: directory
        mode: '0755'

    - name: Download and extract Nerd Fonts
      shell: |
        cd {{ ansible_env.HOME }}/.local/share/fonts
        curl -LO https://github.com/ryanoasis/nerd-fonts/releases/latest/download/FiraCode.zip
        unzip -o FiraCode.zip
        rm FiraCode.zip
      args:
        creates: "{{ ansible_env.HOME }}/.local/share/fonts/FiraCode-Regular.ttf"

    - name: Refresh font cache
      command: fc-cache -fv

    - name: Display output
      debug:
        msg: "{{ fc_cache.stdout_lines }}"      
      
#+end_src

****** R
*** Emacs29 :ansipb:
CLOSED: [2024-11-27 Wed 11:20]
:LOGBOOK:
- State "RAN_IDEMPOTENT" from "RAN_INITIAL" [2024-11-27 Wed 11:20]
- State "RAN_INITIAL" from "DRAFT"      [2024-11-27 Wed 11:20]
- State "DRAFT"      from              [2024-11-27 Wed 11:20]
:END:
#+begin_src yaml :tangle ./ansible/playbooks/emacs29-playbook.yaml
---
- name: Install Emacs 29.4
  hosts: localhost
  become: yes
  tasks:
    - name: Ensure required dependencies are installed
      apt:
        name:
          - libwebp-dev
          - xaw3dg
          - libxpm4
          - libpng16-16
          - zlib1g
          - libjpeg8
          - libtiff-dev
          - libgif7
          - libgif-dev
          - texinfo
          - libgnutls28-dev
          - libncurses-dev
          - librsvg2-2
          - librsvg2-dev
          - libsqlite3-dev
          - liblcms2-dev
          - imagemagick
          - libmagickwand-dev
          - pkg-config
          - libxaw7-dev
          - libgpm-dev
          - libm17n-dev
          - libotf-dev
          - libxft-dev
          - libsystemd-dev
          - libjansson-dev
          - libtree-sitter-dev
          - libgtk-3-dev
          - libwebkit2gtk-4.1-dev
          - libacl1-dev
        state: present
        update_cache: yes

    - name: Check if Emacs 29.4 source archive already exists
      stat:
        path: /tmp/emacs-29.4.tar.xz
      register: stat_result

    - name: Download Emacs 29.4 source archive
      get_url:
        url: https://mirrors.ocf.berkeley.edu/gnu/emacs/emacs-29.4.tar.xz
        dest: /tmp/emacs-29.4.tar.xz
        mode: '0644'
      when: not stat_result.stat.exists

    - name: Extract Emacs 29.4 source archive
      ansible.builtin.unarchive:
        src: /tmp/emacs-29.4.tar.xz
        dest: /tmp
        remote_src: yes
      args:
        creates: /tmp/emacs-29.4

    - name: Configure Emacs build
      shell: ./configure --prefix=/usr/local --with-xwidgets --with-imagemagick
      args:
        chdir: /tmp/emacs-29.4
        creates: /tmp/emacs-29.4/Makefile

    - name: Build Emacs
      shell: make
      args:
        chdir: /tmp/emacs-29.4
        creates: /tmp/emacs-29.4/src/emacs

    - name: Install Emacs
      shell: make install
      args:
        chdir: /tmp/emacs-29.4
        creates: /usr/local/bin/emacs

    - name: Verify Emacs installation
      command: emacs --version
      register: emacs_version
      changed_when: false

    - name: Display installed Emacs version
      debug:
        msg: "Installed Emacs version: {{ emacs_version.stdout }}"

#+end_src
** Install and setup
#+begin_src bash :results replace
pip install 'python-lsp-server[all]'
pip install flake8
#+end_src

#+begin_src R
install.packages("languageserver")
#+end_src
*** Common Debian startup script
apt install gh
#+begin_src bash
# Setup $HOME
mkdir -p "${HOME}/repos"
#+end_src


apt-get install xauth

** lib
:PROPERTIES:
:ID:       861fb855-7bac-4601-87b9-a5bb7a6db293
:END:
*** Shell
https://chatgpt.com/c/66f5b550-66f0-8005-b5a1-733d20a01aed
**** Ideas
kill -9 $(pgrep brave)
open "$(find /tmp -type f -printf '%T@ %p\n' 2>/dev/null | sort -n | tail -1 | cut -d' ' -f2-)"

**** General shell functions
:PROPERTIES:
:header-args: :tangle ./lib/basecamp_function.sh :comments org :padline no
:ID:       cb3c499d-ed2f-4ee3-9965-ca3e1af81178
:END:

Each function has it's own Org-mode header.

***** INPROCESS Move  [[file:lib/basecamp_function.sh]]
***** [[file:lib/basecamp_function.sh]]
***** Preamble
#+begin_src bash :comments no
# Basecamp General Shell Functions
#+end_src
***** connect_scrcpy
#+begin_src bash
# Function: connect_scrcpy
# Usage: connect_scrcpy [-i DEVICE_IP] [-p DEVICE_PORT]

connect_scrcpy() {
    # Default device IP and port
    local DEVICE_IP="192.168.1.9"
    local DEVICE_PORT="5555"

    # Function to display usage information
    local usage
    usage() {
        echo "Usage: connect_scrcpy [-i DEVICE_IP] [-p DEVICE_PORT]"
        return 1
    }

    # Reset OPTIND in case getopts has been used previously in the shell
    OPTIND=1

    # Parse command-line options
    while getopts ":i:p:" opt; do
      case ${opt} in
        i )
          DEVICE_IP=$OPTARG
          ;;
        p )
          DEVICE_PORT=$OPTARG
          ;;
        \? )
          usage
          return 1
          ;;
      esac
    done
    shift $((OPTIND -1))

    # Check if adb is installed
    if ! command -v adb &> /dev/null; then
        echo "Error: 'adb' is not installed. Please install it and try again."
        return 1
    fi

    # Check if scrcpy is installed
    if ! command -v scrcpy &> /dev/null; then
        echo "Error: 'scrcpy' is not installed. Please install it and try again."
        return 1
    fi

    # Attempt to connect to the device
    echo "Connecting to device at ${DEVICE_IP}:${DEVICE_PORT}..."
    adb connect "${DEVICE_IP}:${DEVICE_PORT}" &> /dev/null

    if [ $? -ne 0 ]; then
        echo "Error: Failed to connect to the device at ${DEVICE_IP}:${DEVICE_PORT}."
        return 1
    fi

    # Start scrcpy in the background
    echo "Starting scrcpy..."
    scrcpy &

    if [ $? -ne 0 ]; then
        echo "Error: Failed to start scrcpy."
        return 1
    fi

    echo "Successfully connected and started scrcpy."
    return 0
}

#+end_src
https://chatgpt.com/c/672b7ba8-bac0-8005-8fe3-d0878ce29f5f
***** Simple alias-like functions as program launchers
#+begin_src bash
launch() {
    (nohup "$@" >/dev/null 2>&1 &)
    exit
}

brave() { launch /usr/bin/brave-browser; }
chrome() { launch /usr/bin/brave-browser; }
inkscape() { launch /usr/bin/inkscape; }
okular() { launch /usr/bin/okular; }



emacs() {
    exec /usr/local/bin/emacsclient -c --no-wait &
    disown
    exit
}

#+end_src
***** Volume control with amixer
#+begin_src bash
#+end_src
****** mute() Mute computer speakers and microphone
:PROPERTIES:
:ID:       318be8d0-cfce-495f-90cd-93942c04f3b6
:END:
#+begin_src bash
mute(){
    amixer set Master mute
    amixer set Capture nocap
}
#+end_src
****** unmute()
#+begin_src bash
unmute () {
    amixer set Master unmute
    amixer set Master 30% unmute
    amixer set Speaker 30% unmute  # If 'Master' doesn't work
    amixer set Capture cap
}
#+end_src
****** volume-up()
#+begin_src bash
volume-up() {
    # Check if speakers are muted
    mute_status=$(amixer -D pulse get Master | grep -o '\[off\]')

    if [[ -n "$mute_status" ]]; then
        echo "WARNING: Speakers are currently muted. Unmute them to hear audio."
    else
	amixer -D pulse sset Master 5%+
    fi
}
#+end_src
****** volume-down
#+begin_src bash
volume-down() {
    # Check if speakers are muted
    mute_status=$(amixer -D pulse get Master | grep -o '\[off\]')

    if [[ -n "$mute_status" ]]; then
        echo "WARNING: Speakers are currently muted. Unmute them to hear audio."
    else
	amixer -D pulse sset Master 5%-
    fi
}
#+end_src
***** Emacs and emacs daemon
****** emacs-start()
#+begin_src bash
emacs-start() {
    print_usage(){
    cat <<- EOF

 Usage: emacs-start

 Invokes the emacsclient systemd daemon if not already running.

 Options:
   -h, --help    Show this help message and exit

 Arguements: This function takes no arguements.

 Example:
   emacs-start

EOF
}

    # Return usage if any arguments are provided
    if [[ $# -gt 0 ]]; then
        print_usage
        return 0
    fi

        # Check if emacsclient is running
    if pgrep -x "emacs" > /dev/null
    then
        echo "Emacs daemon is already running."
    else
        echo "Emacs daemon is not running. Starting it now..."
        systemctl start --user emacs
        if [ $? -eq 0 ]; then
            echo "Emacs daemon started successfully."
        else
            echo "Failed to start Emacs daemon. Please check your systemd configuration."
            return 1
        fi
    fi

}
#+end_src
****** emacs-stop()
#+begin_src bash
emacs-stop() {
    print_usage(){
    cat <<- EOF

 Usage: emacs-stop

 Terminates the emacsclient systemd daemon if running.

 Options:
   -h, --help    Show this help message and exit

 Arguements: This function takes no arguements.

 Example:
   emacs-stop

EOF
}

    # Return usage if any arguments are provided
    if [[ $# -gt 0 ]]; then
        print_usage
        return 0
    fi

        # Check if emacsclient is running
    if pgrep -x "emacs" > /dev/null
    then
	systemctl stop --user emacs
    else
        echo "Emacs daemon is not running. Nothing to do."
    fi

}
#+end_src
****** emacs-save()
***** ubuntu-settings()
#+begin_src bash
ubuntu-settings(){
    env XDG_CURRENT_DESKTOP=GNOME gnome-control-center sound & exit
}
#+end_src

***** check_mnt() Check if mount is active
:PROPERTIES:
:ID:       c98f8d3a-bdf1-4c91-8ca2-7d4743dace59
:END:
#+begin_src bash

check_mnt(){
  [[ "$1" =~ (-h|--help) || -z "$1" ]] && {
    cat <<EOF
Usage: check_mnt <DIRECTORY>
Checks if directory is a mount point (must be top directory of mtn).
EOF
    return
  }
    local directory="${1}"
    if mountpoint -q "$directory"; then
        echo "The directory $directory is a mountpoint."
    else
        echo "The directory $directory is not a mountpoint."
    fi
}

#+end_src
***** pomo() Pomodoro
:PROPERTIES:
:ID:       422747c3-9054-4022-bcc3-e67d0f6fb9aa
:END:
#+begin_src bash
function pomo() {
    arg1=$1
    shift
    args="$*"

    min=${arg1:?Example: pomo 15 Take a break}
    sec=$((min * 60))
    msg="${args:?Example: pomo 15 Take a break}"

    while true; do
        date '+%H:%M' && sleep "${sec:?}" && notify-send -u critical -t 0 -a pomo "${msg:?}"
    done
}
#+end_src

***** convert_pdf_to_png()
:PROPERTIES:
:ID:       61cef427-947e-4d91-9dfe-8758ccbe3512
:END:
#+begin_src bash
convert_pdf_to_png() {
    print_usage() {
        cat <<- EOF

$(tput setaf 12)Usage: convert_pdf_to_png$(tput sgr0) $(tput setaf 11)<INPUT_FILE.pdf>$(tput sgr0)

Converts a PDF to a PNG with a white background.

Example: convert_pdf_to_png $(tput setaf 11)input.pdf$(tput sgr0)

Notes:
- /etc/ImageMagick-6/policy.xml policy change allows work with PDF
- allows file overwrite
- works from /tmp
- set to 600 dpi
EOF
    }

    local input_file="$1"

    if [ -z "$input_file" ]; then
        print_usage
        return
    fi

    local output_file=$(echo "$input_file" | sed 's/\.pdf$/.png/')
    convert -density 600 -background white -flatten "$input_file" "$output_file"

    echo "Conversion complete. Output saved to $output_file"

}

#+end_src
***** convert_pdf_to_svg()
:PROPERTIES:
:ID:       98421984-2ff6-4ad8-bd7d-4b9f4810f1b1
:END:
#+begin_src bash

convert_pdf_to_svg() {
    print_usage() {
        cat <<- EOF
Usage: convert_pdf_to_svg <input-file.pdf>

Converts a PDF to an SVG with a white background.

Example: convert_pdf_to_svg input.pdf

Notes:
- Uses pdf2svg for conversion
- Allows file overwrite
- Works from /tmp
EOF
}
    local input_file="$1"

    if [ -z "$input_file" ]; then
	print_usage
        return
    fi

    local output_file=$(echo "$input_file" | sed 's/\.pdf$/.svg/')
    pdf2svg "$input_file" "$output_file"

    # Add a white background rectangle at the beginning of the SVG content
    sed -i '/<svg/a <rect width="100%" height="100%" fill="white"/>' "$output_file"

    echo "Conversion complete. Output saved to $output_file with a white background."
}

#+end_src
***** cpout()
:PROPERTIES:
:ID:       4548b630-06a9-4480-8e11-6e690d05eabc
:END:
#+begin_src bash
cpout() {
    if [[ "$@" =~ (-h|--help) || -z "$1" ]]; then
        cat <<EOF

Usage: cpout <COMMAND>

Copies command stdout and stderr to clipboad using xclip.

EOF
        return
    fi
    "$@" 2>&1 | tee >(xclip -selection clipboard)
}
#+end_src

BLAH
***** docx_to_pdf()
:PROPERTIES:
:ID:       8240dc4a-a77f-438e-93a4-ed63d5828f7e
:END:
#+begin_src bash
docx_to_pdf() {
    local in_docx="$1"

    if [ -z "$in_docx" ]; then
	cat <<- EOF
	usage: docx_to_pdf <INPUT DOCX FILE>

	Converts a docx file to a pdf

	example: docx_to_pdf /tmp/test.docx
EOF
	return 1
    fi

    local out_pdf=$(echo "$in_docx" | sed 's/\.docx$/.pdf/')
    libreoffice --headless --convert-to pdf:writer_pdf_Export "$in_docx" --outdir $(dirname "$in_docx")

    echo "Conversion complete"
}
#+end_src

***** emacs-latex()
:PROPERTIES:
:ID:       ca04cfb0-6ddf-4d33-9e64-81b2f16def79
:END:
#+begin_src bash
emacs-latex() {
    print_usage() {
	cat <<- EOF

    Usage: emacs-latex <ORG FILE> <ORG HEADER ID>

    Uses Emacs --batch export to compile LaTeX from a specific Org-mode header

    Example: emacs-latex ~/test.org cb3c499d-ed2f-4ee3-9965-ca3e1af81178

EOF
    }

    if [[ "$1" =~ ^(-h|--help)$ ]]; then
        print_usage
        return 0
    fi

    if [[ -z "$1" ]]; then
        print_usage
        return 1
    fi

    local file="$1"
    local id="$2"

    /usr/local/bin/emacs --batch -l "${HOME}/repos/basecamp/emacs/latex_init.el" --eval "(progn
                        (require 'org)
                        (require 'org-id)
                        (setq org-confirm-babel-evaluate nil)
                        (find-file \"$file\")
                        (org-id-goto \"$id\")
                        (org-latex-export-to-pdf nil t)
                        (kill-emacs))"

}
#+end_src

***** emacs-save()
:PROPERTIES:
:ID:       a79a1266-7168-49da-861a-d06a497a44c8
:END:
#+begin_src bash

emacs-save(){
    [[ "$1" =~ (-h|--help) ]] && {
    cat <<EOF
Usage: emacs-save
Invokes emacsclient --eval '(save-some-buffers t)' to save all open buffers.
EOF
    return
      }
    emacsclient --eval '(save-some-buffers t)'
}

#+end_src
***** find_in_files()
:PROPERTIES:
:ID:       bbe30f0b-9836-4459-bf8f-39dca3b38907
:END:
#+begin_src bash
find_in_files(){
    print_usage(){
        cat <<- EOF

usage: find_in_files <TERM> [<DIRECTORY>]

Use grep to search a term throughout text files of a directory. Searches current directory by default or specify.

examples:
find_in_files test
find_in_files test /path/to/dir

EOF
    }

    if [[ "$@" =~ (-h|--help) || -z "$1" ]]; then
        print_usage
        return
    fi

    local term="$1"
    local dir="${2:-.}" # Default to current directory if not provided

    grep -rnw "${dir}" -e "${term}"
}

#+end_src
***** screenshot()
:PROPERTIES:
:ID:       f829815e-41cc-4180-b91e-07e00395f473
:END:
#+begin_src bash
screenshot(){
    print_usage(){
	cat <<- EOF

 Usage: screenshot

      Takes interactive screenshot with the scrot program and saves it to
      clipboard with xclip. The screenshot is also saved as a png file at
      /tmp/screenshot.png. NOTE the /tmp/screenshot.png file is overwritten for
      each use.

      Example: screenshot

EOF
    }

    if [[ "$*" =~ (-h|--help)  ]]; then
	print_usage
	return
    fi

    scrot -s -f --overwrite /tmp/screenshot.png && xclip -selection clipboard -t image/png -i /tmp/screenshot.png

}
#+end_src

***** debug()
:PROPERTIES:
:ID:       8b0b016c-cdc5-4583-87d2-9b25a0b5fac4
:END:
#+begin_src bash
debug(){
    print_usage(){
	cat <<- EOF

 Usage: debug <FUNCTION NAME>

      Systematic debugging script for a bash function.
      NOTE: INCOMPLETE, work in progress.

      Example: debug screenshot

EOF
    }

    if [[ "$@" =~ (-h|--help) ]]; then
        print_usage
        return
    fi

    fun_name="$1"

    if [[ -z "$fun_name" ]]; then
	print_usage
	return
    fi

    alias | grep $fun_name

    # Check if the function exists and get its location
    function_info=$(declare -F "$fun_name")
    if [[ -n "$function_info" ]]; then
        function_location=$(echo "$function_info" | awk '{print $3}')
        echo "Function '$fun_name' is defined at: $function_location"
        read -p "Do you want to display the function? (y/n): " choice
        if [[ "$choice" =~ ^[Yy]$ ]]; then
            type "$fun_name"
        fi
    else
        echo "Function '$fun_name' not found."
    fi
}
#+end_src
***** git_search_all()
:PROPERTIES:
:ID:       91c9ca9e-73ab-4a14-8087-96441b2fe0fc
:END:
#+begin_src bash
git_search_all(){
    print_usage(){
        cat <<- EOF

    Usage: git_search_all [options] <REGEXP> [<OPTIONAL OPERANDS>]

    Git search all content, all commits

    Performs a regular expression search through the text of all text files and
    all commits in a git repository.

    Example: git_search_all gc5mb

EOF
    }

    if [[ "$@" =~ (-h|--help) || -z "$1" ]]; then
        print_usage
        return
    fi

    local regexp="${1}"

    git grep $regexp $(git rev-list --all)
}
#+end_src
***** ppt-to-pdf()


#+begin_src bash
pptx-to-pdf() {
    print_usage(){
    cat <<- EOF

 Usage: pptx-to-pdf PPTX

 Converts a Powerpoint ppt file to PDF using unoconv. The PDF file will be
 written to the same location as the pptx, but with a .pdf extension.

 Options:
   -h, --help    Show this help message and exit

 Arguements:
     PPTX

 Example:
   pptx-to-pdf test.pptx

EOF
}

    # Return usage if number of arguments != 1
    if [ $# -ne 1 ]; then
        print_usage
        return 1
    fi

    # Return usage if the argument is a help flag
    if [[ "$1" == "-h" || "$1" == "--help" ]]; then
        print_usage
        return 0
    fi

  unoconv -f pdf $1

}
#+end_src
***** logout
#+begin_src bash
logout() {
    print_usage(){
        cat <<- EOF

 Usage: logout

 Logs out of i3 using i3lock. If emacsclient is running, will save all buffers prior to
 logout.

 Options:
   -h, --help    Show this help message and exit

 Arguements: This function takes no arguements.

 Example:
   logout

EOF
    }

    # Return usage if any arguments are provided
    if [[ $# -gt 0 ]]; then
        print_usage
        return 0
    fi

    pgrep emacsclient && emacs-save && i3lock -c 000000 || i3lock -c 000000

}
#+end_src
***** ls-size()
#+begin_src bash
ls-size(){
    print_usage(){
        cat <<- EOF

 Usage: ls-size

 Lists files in the current directory, sorted by size in descending order, with file
 size in megabases.

 This function takes no arguments.

 Options:
   -h, --help    Show this help message and exit

 Example:
   ls-size
EOF
    }

    # Return usage if any arguments are provided
    if [[ $# -gt 0 ]]; then
        print_usage
        return 0
    fi

    ls -lrS1 --block-size=M
}
#+end_src
***** ls_recursive()
:PROPERTIES:
:ID:       af1385b3-6baf-4e86-80e7-6a178f7623c1
:END:


#+begin_src bash
ls_recursive() {
    print_usage() {
        cat <<- EOF

    Usage: ls_recursive <REGEXP> [LEVEL]

    options:
        -h, --help   Show this help message

    Recursive ls for a specific regexp in file names

    Example: ls_recursive file
             ls_recursive file 3

EOF
    }

    if [[ "$1" =~ ^(-h|--help)$ ]]; then
        print_usage
        return 0
    fi

    if [[ -z "$1" ]]; then
        print_usage
        return 1
    fi

    local regex="$1"
    local level="${2:-4}"  # Default level is 4 if not specified

    if ! [[ "$level" =~ ^[0-9]+$ ]]; then
        echo "Error: LEVEL must be a number"
        return 1
    fi

    find . -maxdepth "$level" -name "*${regex}*"
}

#+end_src

***** git_wkflow_up()
:PROPERTIES:
:ID:       656832e2-e6e1-47ee-a1ec-97345e915648
:END:
#+begin_src bash
git_wkflow_up(){
    print_usage(){
          cat <<- EOF

 Usage: git_wkflow_up ["COMMIT MESSAGE"]

      Wrapper for the git add, commit, and push workflow. Operates on the
      current directory.

      Examples: git_wkflow_up "Message"
                git_wkflow_up

EOF
    }

    if [[ "$@" =~ (-h|--help) ]]; then
        print_usage
        return
    fi

    if ! git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
        echo "Error: Not inside a Git repository."
        return 1  # Exit the function with a non-zero status
    fi

    commit_msg="$1"
 # Add all changes
    git add -A

    # Check if there are changes to commit
    if git diff-index --quiet HEAD --; then
        echo "No changes to commit."
        return 0
    fi

    # Commit and push
    if [ -z "$commit_msg" ]; then
        git commit -m. && git push
    else
        git commit -m "$commit_msg" && git push
    fi
}

#+end_src
***** open()
:PROPERTIES:
:ID:       2b4acddd-ca9f-488f-aaf1-ecf4f86afdb9
:END:
#+begin_src bash
open(){
    print_usage(){
	cat <<- EOF

usage: open <FILE>

Open files with specific applications based on file extension. Defaults to xdg-open. Runs open in background using &.

example: test.pdf

EOF
    }

    if [[ "$@" =~ (-h|--help) || -z "$1" ]]; then
        print_usage
        return
    fi

    case "${1##*.}" in
	pdf)   nohup okular "$1" >/dev/null 2>&1 & ;;
	docx)  nohup libreoffice "$1" >/dev/null 2>&1 & ;;
	,*)     nohup xdg-open "$1" >/dev/null 2>&1 & ;;
    esac

}

#+end_src
***** run_with_nohup()
:PROPERTIES:
:ID:       4736e63d-4661-432c-b4d7-79cf7f4684ae
:END:
#+begin_src bash
run_with_nohup() {

    print_usage() {
        cat <<- EOF
Usage: run_with_nohup <FUNCTION> <FUNCTION'S OPERANDS>

Wrapper to export a function and run it with nohup.

Example: run_with_nohup smk_run ./workflow/analysis1.smk
EOF
    }

    main() {
        # Check for help or no arguments
        if [[ " $* " =~ " -h " ]] || [[ " $* " =~ " --help " ]] || [[ -z "$1" ]]; then
            print_usage
            return
        fi

        local func="$1"
        shift
        local args="$@"

        # Export the function
        export -f "$func"

        # Run the function with nohup
        nohup bash -c "$func $args" &> nohup.out &
        disown
        tail -f nohup.out
    }

    main "$@" & disown
}

#+end_src
***** dir_size
#+begin_src bash
dir_size() {
    if [[ "$1" == "-h" || "$1" == "--help" || $# -ne 1 ]]; then
        cat <<EOF

 Usage: ${FUNCNAME[0]} <path_to_directory>

 Prints the size of the specified directory, switching between MB and GB as appropriate.

 Example:
   dir_size /tmp
EOF
        return
    fi

    # Calculate size, suppressing errors
    size=$(du -s -B1 -L "$1" 2>/dev/null | cut -f1)

    # If size is greater than or equal to 1 GB, show in GB, otherwise in MB
    if [ "$size" -ge $((1024**3)) ]; then
        du -sh --block-size=GB -L "$1"
    else
        du -sh --block-size=MB -L "$1"
    fi
}
#+end_src

***** file_size()
:PROPERTIES:
:ID:       0ba47641-2a7f-4ec3-b6f9-e3abbdb49864
:END:
#+begin_src bash
file_sizes() {

    print_usage() {
    cat <<- EOF
Usage: file_sizes [<DIRECTORY>]

Displays file sizes in Mb.

Examples:
file_sizes
file_sizes /path/to/dir
EOF
    }

    main() {
        # Check for help or no arguments and provide usage information
        if [[ " $* " =~ " -h " ]] || [[ " $* " =~ " --help " ]]; then
            print_usage
            return
        fi

        # Default to the current directory if no argument is given
        local dir="${1:-.}"

        ls -tr1l --block-size=M "$dir"
    }

    main "$@"
}

#+end_src

***** [[id:a9f97cde-27bc-4777-bb12-164ac4cb421d][Shell functions in basecamp-private]]
:PROPERTIES:
:ID:       30cab805-e2ac-40fe-bb0a-6335b5c9d509
:END:
***** tangle() Invoke emacs batch to tangle a file
:PROPERTIES:
:ID:       0af857f2-01b1-44f5-8063-cfcaa0414745
:END:
#+begin_src bash
tangle() {
  [[ "$1" =~ (-h|--help) || -z "$1" ]] && {
    cat <<EOF
Usage: tangle <ORG FILE>
Tangle's org-mode file code using a non-interactive emacs batch instance
EOF
    return
  }
    local org_file="$1"
    /usr/bin/emacs --batch -l ~/.emacs.d/tangle.el -l org -eval "(org-babel-tangle-file \"$org_file\")"
}
#+end_src
***** Ideas                                                           :ideas:
:PROPERTIES:
:header-args: :tangle no
:END:
alias disksize="du -sh -- * | sort -h"
**** Conda functions
:PROPERTIES:
:header-args:bash: :tangle ./lib/conda_functions.sh
:ID:       fb5f258b-cf75-46d1-9196-adc80d1ff6ff
:END:
***** [[id:b16d0202-8d35-472b-b538-87a7d6a6cef7][Conda and Miniconda]]
***** conda_update()
:PROPERTIES:
:ID:       22cd3dad-af6a-42d8-8d82-4c1da9d7a7b9
:END:
#+begin_src bash

function conda_update() {
    if [[ "$1" =~ ^(-h|--help)$ ]] || [[ -z "$1" ]]; then
        cat <<EOF
Usage: conda_update <ENV YAML>
Updates a conda environment yaml file using mamba
EOF
        return
    fi
    local file="$1"
    source /opt/miniconda3/etc/profile.d/conda.sh
    conda activate base || { echo "Failed to activate base conda environment."; return; }
    if command -v mamba >/dev/null 2>&1; then
        mamba env update --file "$file" && echo "Environment updated successfully with $file!"
    else
        echo "Mamba is not installed. Install mamba or use conda instead."
    fi
}

function conda_update() {
    if [[ "$1" =~ ^(-h|--help)$ ]] || [[ -z "$1" ]]; then
        cat <<EOF
Usage: conda_update <ENV YAML> [ENV NAME]
Updates a conda environment yaml file using mamba. Optionally updates a specific named environment.
EOF
        return
    fi
    local file="$1"
    local env_name="${2:-}" # If $2 is not provided, env_name will be empty
    source /opt/miniconda3/etc/profile.d/conda.sh
    conda activate base || { echo "Failed to activate base conda environment."; return; }
    if command -v mamba >/dev/null 2>&1; then
        if [[ -n "$env_name" ]]; then
            mamba env update -n "$env_name" --file "$file" && echo "Environment '$env_name' updated successfully with $file!"
        else
            mamba env update --file "$file" && echo "Environment updated successfully with $file!"
        fi
    else
        echo "Mamba is not installed. Install mamba or use conda instead."
    fi
    conda deactivate
}

#+end_src
**** Snakemake
:PROPERTIES:
:header-args: :tangle ./lib/snakemake_funtions.sh :tangle-mode (identity #o555) :mkdirp yes :noweb yes :comments org
:ID:       ac9b5205-f878-484b-b079-71fd58b8424f
:END:
***** [[id:a8b27140-4b9e-40c5-86ab-ee5afeae723f][snakemake]]
***** [[id:4736e63d-4661-432c-b4d7-79cf7f4684ae][run_with_nohup()]]
:PROPERTIES:
:ID:       d4888c58-8a30-403a-9e7c-f0c1188d9e74
:END:
***** smk_unlock() Unlock a snakemake repo
:PROPERTIES:
:ID:       a5d747b8-a0d8-4622-95b0-cbdb8360920f
:END:
#+begin_src bash
smk_unlock() {
    [[ "$1" =~ (-h|--help) || -z "$1" ]] && {
	cat <<- EOF

Usage: smk_unlock <SNAKEFILE> [CONFIGFILE]

Wrapper for snakemake --unlock. --configfile defaults to ./config/${HOSTNAME}.yaml if no second argument is provided.

Example: smk_unlock ./workflow/analysis1.smk
        smk_unlock ./workflow/analysis1.smk ./config/custom_config.yaml

EOF
	return
    }

    local snakefile="${1}"
    local configfile="${2:-./config/${HOSTNAME}.yaml}"

    # Check if variables exist
    if [[ ! -f "$snakefile" ]]; then
	echo "Error: Snakefile '$snakefile' does not exist."
	return 1
    fi

    if [[ ! -f "$configfile" ]]; then
	echo "Error: Config file '$configfile' does not exist."
	return 1
    fi

  # Run
  snakemake --configfile "$configfile" \
    --cores 1 \
    --snakefile "$snakefile" \
    --unlock

  # Check exit code and provide error message
  if [ $? -ne 0 ]; then
    echo "Error: Snakemake run failed."
  fi
}

#+end_src

***** smk_draw() Draw a rulegraph
:PROPERTIES:
:ID:       04b1ca54-c0d8-4bf6-bc58-ea066b8f5216
:END:
#+begin_src bash
smk_draw(){
  [[ "$1" =~ (-h|--help) || -z "$1" ]] && {
    cat <<EOF
Usage: smk_draw <CONFIG FILE> <SNAKEFILE>
Implements snakemake's rulegraph to make a DAG. DAG is saved in ./resources/<SNAKEFILE BASENAME>.pdf and .png
EOF
    return
  }
    local snakefile="${1}"
    local snakefile_basename="$(basename "$snakefile")"
    local out_pdf="./resources/${snakefile_basename%.*}_smk.pdf"
    local out_png="${out_pdf%.*}.png"
    snakemake --configfile ./config/${HOSTNAME}.yaml \
              --snakefile "$snakefile" \
              --cores 1 \
              --rerun-incomplete \
              --dry-run \
              --quiet \
              --rulegraph | tee >(dot -Tpdf > "$out_pdf") | dot -Tpng > "$out_png"
}


#+end_src
#+begin_src bash
smk_draw(){
  [[ "$1" =~ (-h|--help) || -z "$1" ]] && {
    cat <<EOF
Usage: smk_draw <CONFIG FILE> <SNAKEFILE>
Implements snakemake's rulegraph to make a DAG. DAG is saved in ./resources/<SNAKEFILE BASENAME>.pdf and .png
EOF
    return
  }
  local snakefile="${1}"
  local snakefile_basename="$(basename "$snakefile")"
  local out_pdf="./resources/${snakefile_basename%.*}_smk.pdf"
  local out_png="${out_pdf%.*}.png"
  snakemake --configfile ./config/${HOSTNAME}.yaml \
            --snakefile "$snakefile" \
            --cores 1 \
            --rerun-incomplete \
            --dry-run \
            --quiet \
            --rulegraph | tee >(dot -Tpdf -Gsize=11,8.5 > "$out_pdf") | dot -Tpng > "$out_png"
}

#+end_src

***** smk_dry() Dry run
:PROPERTIES:
:ID:       93e3fd9b-cbee-4a5d-8da5-8b54774e2890
:END:
#+begin_src bash
smk_dry(){
  [[ "$1" =~ (-h|--help) || -z "$1" ]] && {
    cat <<EOF

Usage: smk_dry <SNAKEFILE> [CONFIGFILE]

Wrapper for snakemake --dry-run. --configfile defaults to ./config/${HOSTNAME}.yaml if no second argument is provided.

Example: smk_dry ./workflow/analysis1.smk
         smk_dry ./workflow/analysis1.smk ./config/custom_config.yaml

EOF
	return
    }

  local snakefile="${1}"
  local configfile="${2:-./config/${HOSTNAME}.yaml}"

  # Check if variables exist
  if [[ ! -f "$snakefile" ]]; then
      echo "Error: Snakefile '$snakefile' does not exist."
      return 1
  fi

  if [[ ! -f "$configfile" ]]; then
      echo "Error: Config file '$configfile' does not exist."
      return 1
  fi

  # Run
  snakemake \
      --configfile ./config/${HOSTNAME}.yaml \
      --cores 4 \
      --dry-run \
      --rerun-incomplete \
      --snakefile $snakefile

  # Check exit code and provide error message
  if [ $? -ne 0 ]; then
      echo "Error: Snakemake run failed."
  fi
}

#+end_src

***** smk_forced() Forced run
:PROPERTIES:
:ID:       6b970126-99f6-426b-bcf9-f76d5fea5149
:END:
#+begin_src bash
smk_forced(){
  [[ "$1" =~ (-h|--help) || -z "$1" ]] && {
    cat <<EOF

Usage: smk_forced <SNAKEFILE> [CONFIGFILE]

Wrapper for a forced snakemake run. --configfile defaults to ./config/${HOSTNAME}.yaml if no second argument is provided. Runs all available cores.

Example: smk_forced ./workflow/analysis1.smk
         smk_forced ./workflow/analysis1.smk ./config/custom_config.yaml

EOF
    return
  }

  local snakefile="${1}"
  local configfile="${2:-./config/${HOSTNAME}.yaml}"
  local cores=$(nproc)

  # Check if variables exist
  if [[ ! -f "$snakefile" ]]; then
      echo "Error: Snakefile '$snakefile' does not exist."
      return 1
  fi

  if [[ ! -f "$configfile" ]]; then
      echo "Error: Config file '$configfile' does not exist."
      return 1
  fi

  # Run
  snakemake \
      --configfile "$configfile" \
      --cores "$cores" \
      --forceall \
      --rerun-incomplete \
      --snakefile "$snakefile"

  # Check exit code and provide error message
  if [ $? -ne 0 ]; then
      echo "Error: Snakemake run failed."
  fi
}
#+end_src

***** smk_run() Normal run
:PROPERTIES:
:ID:       9e31b37b-0ecc-4157-8705-d9e4d3481607
:END:
#+begin_src bash

smk_run(){
  [[ "$1" =~ (-h|--help) || -z "$1" ]] && {
    cat <<EOF

Usage: smk_dry <SNAKEFILE> [CONFIGFILE]

Wrapper for normal snakemake. --configfile defaults to ./config/${HOSTNAME}.yaml if no second argument is provided. Runs all available cores.

Example: smk_run ./workflow/analysis1.smk
         smk_run ./workflow/analysis1.smk ./config/custom_config.yaml

EOF
    return
  }

  local snakefile="${1}"
  local configfile="${2:-./config/${HOSTNAME}.yaml}"
  local cores=$(nproc)

  # Check if variables exist
  if [[ ! -f "$snakefile" ]]; then
      echo "Error: Snakefile '$snakefile' does not exist."
      return 1
  fi

  if [[ ! -f "$configfile" ]]; then
      echo "Error: Config file '$configfile' does not exist."
      return 1
  fi

  # Run
  snakemake \
      --configfile "$configfile" \
      --cores "$cores" \
      --keep-going \
      --rerun-incomplete \
      --snakefile "$snakefile"

  # Check exit code and provide error message
  if [ $? -ne 0 ]; then
      echo "Error: Snakemake run failed."
  fi
}

#+end_src

**** [[id:a9f97cde-27bc-4777-bb12-164ac4cb421d][Shell functions in basecamp-private]] more_bashrc
*** Lisp functions
:PROPERTIES:
:header-args: :tangle ./lib/lisp_functions.el :tangle-mode (identity #o555) :mkdirp yes :noweb yes :comments org
:ID:       2fc1a6f1-093c-4250-a905-1bf42b7b9eee
:END:
[[file:lib/lisp_functions.el]]
- Emacs
  - Custom functions with names that would clash with existing function names from base emacs or packages shall be prefixed with "custom-"
  - Referencing external variables https://chatgpt.com/c/c9789fc7-81f8-4af4-96a2-82ffd94db68c
**** defun org-execute-named-block-anywhere
:PROPERTIES:
:ID:       5ace2dd4-9dfb-41b9-a7ec-5ca32aaf94ae
:END:
https://claude.ai/chat/c12f61f1-0d93-4658-8d52-be64f45a12e0
#+begin_src emacs-lisp
(defun org-execute-named-block-anywhere (file block-name)
  "Execute a named source block from specified org file.
FILE is the path to the org file containing the block.
BLOCK-NAME is the name of the block to execute."
  (interactive "fFile: \nsBlock name: ")
  (let* ((original-buffer (current-buffer))
         (target-buffer (or (get-file-buffer file)
                           (find-file-noselect file)))
         info)
    (with-current-buffer target-buffer
      (save-excursion
        (goto-char (point-min))
        (if (re-search-forward (concat "^[ \t]*#\\+name:[ \t]*" 
                                      (regexp-quote block-name) "[ \t]*$") nil t)
            (progn
              (setq info (org-babel-get-src-block-info t))
              (org-babel-execute-src-block nil info))
          (error "Named block %s not found" block-name))))
    (when (and (not (eq target-buffer original-buffer))
               (not (buffer-modified-p target-buffer))
               (not (get-file-buffer file)))
      (kill-buffer target-buffer))))
#+end_src

**** find-duplicate-lines

#+begin_src emacs-lisp
(defun find-duplicate-lines ()
  "Find and list all duplicate lines in the current buffer."
  (interactive)
  (let ((lines (make-hash-table :test 'equal))
        duplicates)
    (save-excursion
      (goto-char (point-min))
      (while (not (eobp))
        (let ((line (buffer-substring-no-properties
                     (line-beginning-position) (line-end-position))))
          (if (gethash line lines)
              (push line duplicates)
            (puthash line t lines)))
        (forward-line 1)))
    (if duplicates
        (progn
          (with-output-to-temp-buffer "*Duplicate Lines*"
            (dolist (line (delete-dups duplicates))
              (princ line)
              (terpri)))
          (message "Duplicate lines found and listed in *Duplicate Lines* buffer."))
      (message "No duplicate lines found."))))

#+end_src

**** run-latex-at-point
:PROPERTIES:
:ID:       3975a173-ac71-4c02-b032-ef215329ca59
:END:
- https://chatgpt.com/c/66f5c68c-8c4c-8005-b7c6-14665eadb848
- https://chatgpt.com/c/66f95df4-0dfc-8005-9e7b-c3f15c1ca924
- [[id:9fa465f4-68f7-45c5-966e-80084e2c8a05][emacs_export_header_to_latex.py]]
#+begin_src emacs-lisp
(defun run-latex-at-point ()
  "Extract the ID from the Org properties and run emacs-save and emacs-latex for the current file."
  (interactive)
  (let* ((id (org-entry-get (point) "ID"))
         (current-file (buffer-file-name))
         (output-buffer "*Latex Output*"))
    (if (not id)
        (message "No ID property found!")
      (with-current-buffer (get-buffer-create output-buffer)
        (erase-buffer))
      (let ((command (concat "source ~/repos/basecamp/lib/basecamp_function.sh && emacs-save && /usr/bin/python3 ~/repos/latex/scripts/emacs_export_header_to_latex.py --org_file \""
                             current-file "\" --node_id \"" id "\"")))
        ;; Start the process without a process name
        (start-process-shell-command "latex-process" output-buffer command)
        ;; Display the output buffer
        (pop-to-buffer output-buffer)))))

#+end_src

**** export-org-table-by-name-to-csv
#+begin_src emacs-lisp
(defun export-org-table-by-name-to-csv (org-file table-name csv-file)
  "Export an org table with TABLE-NAME in ORG-FILE to CSV-FILE."
  (with-current-buffer (find-file-noselect org-file)
    (goto-char (point-min))
    (when (re-search-forward (concat "^#\\+NAME: " (regexp-quote table-name)) nil t)
      (forward-line)
      (org-table-export csv-file "orgtbl-to-csv"))))
#+end_src
*** Ideas                                                             :ideas:
:PROPERTIES:
:ID:       9c34cb75-23a9-44bf-be39-c878d7221bb8
:END:
**** smk_touch() Mark target files as complete
:PROPERTIES:
:ID:       5cebf73d-509c-406a-b2fa-e7eae70446e2
:END:
hard to get the touch to work here
https://chat.openai.com/c/22b1d5c5-5d9b-4ced-98cf-860f7eb493c8
** Processes
*** Flat
**** Free drawing
- https://excalidraw.com/

**** Use phone on computer
[[https://chatgpt.com/c/67192b0b-18b4-8005-97aa-e1f960b69a42][chatgtp]]
scrcpy process
adb connect 192.168.1.12:5555

*** [[id:608c6f89-a4da-483c-bb4d-818c54a37675][Computer processes]]
** Information Science / Data Science                      :career:hierarchy:
:PROPERTIES:
:ID:       39F11977-BE11-47CF-98B1-14CE6D9B97C4
:END:
https://www.reddit.com/r/programming/comments/1fl9c3f/why_csv_is_still_king/
https://www.reddit.com/r/datascience/comments/1ex40hv/how_would_you_update_the_2012_article/
https://www.reddit.com/r/datascience/comments/1es5zjh/what_new_exciting_things_are_out_there/
https://www.reddit.com/r/datascience/comments/18nxz71/what_are_some_of_the_most_confidently_incorrect/
https://www.reddit.com/r/datascience/comments/17zshma/what_do_you_do_with_highly_correlated_features/
https://rosalind.info/problems/locations/
https://www.reddit.com/r/datascience/comments/17t04cn/chatgpt_becomes_a_serious_contender_for/
https://www.reddit.com/r/datascience/comments/1385fge/sigmoid_academy_leetcode_for_data_science/
https://old.reddit.com/r/datascience/comments/rap2m2/9_distance_measures_in_data_science/
https://github.com/WHOexcessc19/Codebase
*** Digital data repositories
:PROPERTIES:
:ID:       d043f43d-77cb-4afa-a798-4d5afb0692f5
:END:
- TRUST Principles for digital repositories [[cite:&lin2020]]
*** Bibliometrics
:PROPERTIES:
:ID:       0d6e551d-4ff2-4d36-9006-fe7685c097a8
:END:
- http://www.nature.com/news/fewer-numbers-better-science-1.20858
*** [[id:F80F3FAF-1D79-40F5-934B-F74D19143DBD][Probability and Statistics]]
:PROPERTIES:
:ID:       0230b189-6a0d-4e6c-80c9-2328f155f7a7
:END:
*** Data science project management
:PROPERTIES:
:ID:       0b4dfeac-fc55-47b1-956c-38fb19eba7ff
:END:
:LOGBOOK:
CLOCK: [2022-01-24 Mon 08:05]--[2022-01-24 Mon 08:33] =>  0:28
:END:
https://github.com/grailbio-publications/Jamshidi_CCGA1LOD_2022/blob/main/Rmd/make_output.Rmd
- https://www.kdnuggets.com/2019/03/best-tips-agile-data-science-research.html
- https://en.wikipedia.org/wiki/Zenodo
- https://www.reddit.com/r/datascience/comments/wy89ow/how_do_you_keep_track_of_a_data_science_project/

- https://nceas.github.io/sasap-training/materials/reproducible_research_in_r_fairbanks/
- Create local repository, init, and basic structure
  #+begin_src bash
#########1#########2#########3#########4#########5#########6#########7#########8
# Create repository
if [ -d /home/jeszyman/repos ]; then
    mkdir -p /home/jeszyman/repos/cardradbio-atac; fi

# Initialize
cd /home/jeszyman/repos/cardradbio-atac/
git init

# Create repository structure
repo=/home/jeszyman/repos/cardradbio-atac
mkdir -p "${repo}/config"
mkdir -p "${repo}/resources"
mkdir -p "${repo}/results/csv"
mkdir -p "${repo}/results/imgs"
mkdir -p "${repo}/results/reports"
mkdir -p "${repo}/src"
mkdir -p "${repo}/workflow/scripts"
#+end_src
- cite:sarkar2014 Chapter 2
  - Integration
    - Transformation
    - Understanding source data
      - Identify the purpose of each table
      - Understand constraints and checks
    - Data model- a subset of the union of diverse data
    - Logical and physical integration
      - In physical, data is constructed in the global model instead of referred to
  - Metadata
    - Ontology is metadata with technical and descriptive components
    - Technical
      - Constraints and rules in syntax of interpreted language
      -
      - Source documentation
        - Columns of each table
        - Inter-table relationships
        - Enumerations (permissible values)
- Project structures and management packages
  - http://pep.databio.org/en/latest/
  - https://github.com/dslp/dslp
    - https://github.com/dslp/dslp-repo-template
  - https://docs.microsoft.com/en-us/azure/architecture/data-science-process/overview
  - https://kedro.readthedocs.io/en/stable/
  - https://github.com/ploomber/ploomber
  - https://drivendata.github.io/cookiecutter-data-science/#directory-structure
- Management packages
- General reference
  - https://www.reddit.com/r/datascience/comments/fzweaf/my_giant_data_quality_checklist/
  - https://www.reddit.com/r/datascience/comments/mrwzkq/what_is_the_best_structured_ds_project_you_have/
  - https://www.reddit.com/r/datascience/comments/brwlkx/data_science_production_process_bestpractices/
  - http://www.thinkingondata.com/5-papers-about-data-science-project-management/
  - https://www.reddit.com/r/datascience/comments/mrwzkq/what_is_the_best_structured_ds_project_you_have/
  - data derivation graph https://harvardforest.fas.harvard.edu/blog/cooking-laptop#:~:text=A%20DDG%2C%20or%20Data%20Derivation,pink%20and%20purple%20data%20nodes.
- Data dictionary
  - [[id:10075da5-5535-4426-95d0-c0c53a2d1aae][Data dictionary mod]]
  - https://www.reddit.com/r/statistics/comments/b5sg97/what_makes_a_good_data_dictionary/
  - cite:pedsnet
- [[id:d4c65ebf-8abd-4876-8b79-08ae9fcc50c2][Software engineering]]
- Examples
  - cite:waagmeester2020
  - https://www.reddit.com/r/datascience/comments/8haezl/python_google_sheets_api_tableau_public_full/
- Data science workflow
  - [[https://cacm.acm.org/blogs/blog-cacm/169199-data-science-workflow-overview-and-challenges/fulltext][Association for computing machinery: Data science workflow overview]]
  - Data preprocessing
    - https://www.cdc.gov/globalhealth/healthprotection/fetp/training_modules/10/managing-data_pw_final_09252013.pdf
    - http://www.comp.dit.ie/btierney/BSI/Han%20Book%20Ch3%20DataExploration.pdf
    - cite:kotsiantis2006
- https://www.reddit.com/r/datascience/comments/am2cep/guidelines_for_writing_data_analysis_reports/
- [[id:1DA3ABC0-79B0-4CED-B926-22B37840379D][Data Visualization]]
- [[id:20b10d38-1d24-4a0e-b9b8-d6f2b1394efe][Data pre-processing / data wrangling]]
*** Data structures
:PROPERTIES:
:ID:       A4A0EABF-3161-47AA-BDA4-E75DCB509201
:END:
:LOGBOOK:
CLOCK: [2022-01-24 Mon 08:33]--[2022-01-24 Mon 08:49] =>  0:16
:END:
- [[https://docs.qgis.org/3.16/en/docs/][QGIS documentation]]
- http://labs.rd.ciencias.ulisboa.pt/book/
- CSV
  - https://www.reddit.com/r/datascience/comments/q9xejd/csv_alternative_with_type_information/-
- [[id:0b4dfeac-fc55-47b1-956c-38fb19eba7ff][Data science project management]]
**** Databases and database management systems
:PROPERTIES:
:ID:       41e37bc1-c5b2-4f66-b382-de10c9c58a9d
:END:
- Database documentation
  - [[https://stackoverflow.com/questions/22673352/colorize-table-name-in-graphviz-entity-relationship-diagram][entity - relationship diagrams with graphviz]]
  - [[https://stackoverflow.com/questions/369266/how-to-document-a-database][stack: how to document a database]]
- Relational Database Management System (RDBMS)
  - postgreSQL
    - on work linux
      - create db- sudo -u postgres -i https://stackoverflow.com/questions/11919391/postgresql-error-fatal-role-username-does-not-exist,
    - [[https://www.postgresql.org/docs/9.1/index.html][documentation]]
    - [ ] get on command line q/ psql
    - pgadmin
      - ctrl-e runs querys!
      - [[https://www.pgadmin.org/docs/pgadmin3/1.22/index.html][pgAdmin III documentation]]
    - PostGreSQL with Python
      - psycopg2
      - juypter
      - https://wiki.postgresql.org/wiki/Psycopg2_Tutorial
  - [ ] create db https://stackoverflow.com/questions/8200917/postgresql-create-a-new-db-through-pgadmin-ui
  - also dbi, montedb, msosql, mysql, sql mode...
  - https://orgmode.org/worg/org-contrib/babel/languages/ob-doc-sql.html
- Schema: structure of a database
- Relational database (RDB)
  - Performance features
    - Indexes
      - B-tree
      - hash-table
      - join
      - bitmap
    - Pre-compute aggregates
    - Caching
    - Query optimization
  - Schema specified by sql
  - Normalization: minimal duplication across tables
- Hadoop: open-source toolset that fractions data and computation
  - opposed to enterprise approach with single, powerful computer
  - Architecture
    - MapReduce
    - HDFS file system
  - hadoop
    - https://www.google.com/search?q=mapreduce&oq=mapreduce&aqs=chrome..69i57j0l5.1682j0j7&sourceid=chrome&ie=UTF-8
***** <<<Structured Query Language>>> (<<<SQL>>>)                    :career:
:PROPERTIES:
:ID:       5B25B211-1888-49DB-8857-A05137D1FF92
:END:
:LOGBOOK:
CLOCK: [2021-09-13 Mon 14:51]--[2021-09-13 Mon 16:02] =>  1:11
CLOCK: [2018-12-12 Wed 16:31]--[2018-12-12 Wed 16:32] =>  0:01
CLOCK: [2018-12-12 Wed 15:47]--[2018-12-12 Wed 16:29] =>  0:42
:END:
https://www.freecodecamp.org/news/learn-sql-full-course/
https://bitspook.in/blog/using-org-mode-as-an-sql-playground/
****** Sqlite in org-mode
:PROPERTIES:
:ID:       4cc925c0-28b0-4234-9f97-3e18dd52a871
:END:
- Processes
  - Import
    - From org-table
      ;;#+begin_src sqlite :db /tmp/test :var orgtable=materials :colnames yes :results replace
  drop table if exists materials;
  create table materials(material_id character, location_id charcter);
  .mode csv materials
  .import $orgtable materials
  SELECT material_id, COUNT(*) c FROM materials GROUP BY material_id HAVING c > 1;
  ;;#+end_src
    - From File
      #+begin_src sqlite :db /tmp/test :results replace
drop table if exists materials;
.mode csv
.import /home/jeszyman/repos/org/data/materials.csv materials
#+end_src

#+RESULTS[39608d0f26d4059cdc3b7b1b5de837c25aed6539]:

  - Write to csv
  - Merge
  - Find duplicates
    #+begin_src sqlite :db /tmp/test :results replace
SELECT material_id from materials
SELECT DataId, COUNT(*) c FROM DataTab GROUP BY DataId HAVING c > 1;
#+end_src
  - Write to table
****** Processes
:PROPERTIES:
:ID:       8e173015-aa21-4844-ab0b-90fbf7153e49
:END:
- https://stackoverflow.com/questions/1777257/how-do-you-create-a-yes-no-boolean-field-in-sql-server
- https://www.google.com/search?q=sql+field+with+long+text+string

****** Platforms and interfaces
:PROPERTIES:
:ID:       04487e7f-7cb0-4e29-8911-9f0c40540ccf
:END:
- http://www.eliacom.com/mysql-gui-index.php
- http://www.sequelpro.com/
- mysql
  - commands
    | admin login test | mysqladmin -u root -p version |
  - operations
    - [[https://stackoverflow.com/questions/1720244/create-new-user-in-mysql-and-give-it-full-access-to-one-database][Create new user in MySQL and give it full access to one database]]
  - mysql - R - google sheets !https://www.quora.com/Is-there-a-method-to-convert-data-in-Google-sheets-to-MySQL
  - install https://gist.github.com/nrollr/3f57fc15ded7dddddcc4e82fe137b58e
  - temp password is K%2SwkF3VsiF
  - reset with https://stackoverflow.com/questions/4359131/brew-install-mysql-on-mac-os/33924648#33924648
  - [[https://stackoverflow.com/questions/15450091/for-a-newbie-error-2002-hy000-cant-connect-to-local-mysql-server-through-so][ERROR 2002]]
****** General reference
:PROPERTIES:
:ID:       4a93af22-b67c-4c3b-964b-dd8279bd50e2
:END:
- https://www.freecodecamp.org/news/learn-to-use-the-mysql-database/
- https://bofh.org.uk/2019/02/25/baking-with-emacs/
- guides
  - http://www.sqlstyle.guide/
- tutorials
  - https://www.dataquest.io/blog/sql-intermediate/
- resume postgres tutorial on worklinux https://www.postgresql.org/docs/9.1/tutorial-populate.html
******* DONE Udmey SQL Bootcamp                                      :career:
CLOSED: [2017-06-23 Fri 18:56]
:PROPERTIES:
:ID:       9DCE5192-210C-42BF-B94C-C85C80C72A5D
:END:
:LOGBOOK:
- State "DONE"       from "TODO"       [2017-06-22 Thu 16:41]
CLOCK: [2017-06-22 Thu 15:42]--[2017-06-22 Thu 16:41] =>  0:59
- State "DONE"       from "TODO"       [2017-06-21 Wed 14:06]
CLOCK: [2017-06-21 Wed 13:10]--[2017-06-21 Wed 14:06] =>  0:56
- State "DONE"       from "TODO"       [2017-06-20 Tue 11:22]
CLOCK: [2017-06-20 Tue 10:46]--[2017-06-20 Tue 11:22] =>  0:36
CLOCK: [2017-06-20 Tue 10:35]--[2017-06-20 Tue 10:45] =>  0:10
CLOCK: [2017-06-20 Tue 10:13]--[2017-06-20 Tue 10:31] =>  0:18
- State "DONE"       from "TODO"       [2017-06-19 Mon 15:29]
CLOCK: [2017-06-19 Mon 14:48]--[2017-06-19 Mon 15:29] =>  0:41
CLOCK: [2017-06-19 Mon 14:11]--[2017-06-19 Mon 14:38] =>  0:27
- State "DONE"       from "TODO"       [2017-06-15 Thu 16:45]
CLOCK: [2017-06-15 Thu 15:55]--[2017-06-15 Thu 16:45] =>  0:50
CLOCK: [2017-06-13 Tue 14:42]--[2017-06-13 Tue 14:53] =>  0:11
- State "DONE"       from "TODO"       [2017-06-12 Mon 20:44]
CLOCK: [2017-06-12 Mon 20:06]--[2017-06-12 Mon 20:44] =>  0:38
CLOCK: [2017-06-02 Fri 13:40]--[2017-06-02 Fri 14:01] =>  0:21
- State "DONE"       from "TODO"       [2017-05-31 Wed 14:54]
CLOCK: [2017-05-31 Wed 14:16]--[2017-05-31 Wed 14:54] =>  0:38
CLOCK: [2017-05-31 Wed 13:40]--[2017-05-31 Wed 14:12] =>  0:32
- State "DONE"       from "TODO"       [2017-05-24 Wed 12:42]
CLOCK: [2017-05-24 Wed 12:26]--[2017-05-24 Wed 12:42] =>  0:16
CLOCK: [2017-05-24 Wed 11:29]--[2017-05-24 Wed 12:15] =>  0:46
- State "DONE"       from "TODO"       [2017-05-22 Mon 17:35]
CLOCK: [2017-05-22 Mon 17:19]--[2017-05-22 Mon 17:35] =>  0:16
CLOCK: [2017-05-22 Mon 16:35]--[2017-05-22 Mon 17:15] =>  0:40
CLOCK: [2017-05-22 Mon 14:49]--[2017-05-22 Mon 14:56] =>  0:07
- State "DONE"       from "TODO"       [2017-05-18 Thu 11:52]
CLOCK: [2017-05-18 Thu 10:44]--[2017-05-18 Thu 11:51] =>  1:07
:END:
- https://www.datacamp.com/courses/intro-to-sql-for-data-science
- [[file:~/Box%20Sync/org/career.org::*Udemy%20SQL%20Bootcamp][Udemy SQL Bootcamp]]
- http://www.sql-join.com/
- http://stackoverflow.com/questions/6613802/question-about-setting-up-inventory-database
- [[file:~/Box%20Sync/career/SQLNotes.pdf][Course notes]]
- [[file:~/Box%20Sync/career/sql%20cheat%20sheet.png][sql cheat sheet]]
- how are the data tables actually stored?
- Intro
  - pgAdmin and _?_ install
    - pgAdmin is the GUI
- Databases and Tables
  - Table schema: everything e/c data
- SWL statement bashs
  - sql is case insensitive
  - SELECT column_1,column_2 FROM table_name;
    - SELECT DISTINCT column_1,column_2 FROM table_name;
      - column may have duplicate rows
    - SELECT and WHERE- just rows matching particular condition: SELECT column_1, column_2, ... column_n FROM table_name WHERE conditions;
      - where operators: =,>,<,>=,<=,!=,AND, OR
      - can select single columns- e.g. SELECT email FROM customer WHERE first_name = 'Jared'; returns just emails
  - COUNT
    - SELECT COUNT(*) FROM table;
    - SELECT COUNT(column) FROM table;
    - SELSEC COUNT (DISTINCT column) FROM table
      - e.g. SELECT COUNT (DISTINCT (amount)) FROM payment;
  - LIMIT limit returned rows
    - e.g. SELECT * FROM customer LIMIT 5;
  - ORDER BY sorts results
    - SELECT column_1, column_2 FROM table_name ORDER BY column_1 ASC
    - ASC is the default,alternative is DESC
  - WHERE and HAVING
    - BETWEEN
      - value BETWEEN low AND high
      - value NOT BETWEEN low AND high
      - e.g. SELECT amount,payment_date FROM payment WHERE payment_date BETWEEN '2007-02-07' AND '2007-02-15';
    - IN
      - value IN (SELECT value FROM tbl_name)
      - e.g. SELECT customer_id,rental_id,return_date FROM rental WHERE customer_id IN (1,2) ORDER BY return_date DESC;
    - LIKE
      - SELECT columns FROM tbl WHERE colmn1 LIKE 'pattern%';
      - e.g. SELECT first_name,last_name FROM customer WHERE first_name LIKE 'Jen%';
      - wildcards
        - % any sequence of char
        - _ any single char
      - ILIKE ignores case
    - HAVING
      - filter group rows that do not satisfy a condition
      - SELECT column_1, aggregate_function(column_2) FROM table GROUP BY column_1 HAVING condition
      - conditions
        - HAVING sets conditions AFTER grouping
        - WHERE  sets conditions BEFORE grouping
- subquery:
- GROUP BY statements
  - Aggreagte functions- MIN MAX AVG SUM
    - e.g. SELECT ROUND(AVG(amount),2) FROM payment;
  - SELECT column_1, aggregate_function(column_2) FROM table GROUP BY column_1;
  - SELECT customer_id, SUM(amount) FROM payment GROUP BY customer_id;
  - SELECT staff_id, COUNT(*) FROM payment GROUP BY staff_id;
- AS
  - SELECT column AS new_returned_name FROM table;
  - SELECT column, SUM(amount) AS new_sum_name FROM table;
- JOINS
  - each table has primary key (pka)
  - foreign key? (fka)- matches the pka of the other table
  - inner join
    - syntax: SELECT A.pka, A.c1, B.pkb,B.c2 FROM A INNER JOIN B on A.pka = B.fka
      - A/B are the table names
      - .column_name
      - postgresql will scan for B rows that match the A key
    - returns results that exist in both tables (overlap of the venn)
    - SELECT customer.customer_id, first_name, last_name, email, amount, payment_date FROM customer INNER JOIN payment ON payment.customer_id = customer.customer_id;
    - reduced command: SELECT film.title,lan.name FROM film JOIN language lan ON lan.language_id = film.language_id;
      - abbreviating table name
      - remove AS
      - remove INNER
  - other JOINs
    - [[file:career.org_imgs/20170612_203746_66395j6p.png]]
    - outer
      - SELECT film.film_id,film.title,inventory_id FROM film LEFT OUTER JOIN inventory ON inventory.film_id = film.film_id;
    - right
  - UNION
    - SELECT column_1,column_2 FROM tbl_1 UNION SELECT column_1,column_2 FROM tbl_2
    - same # of columns from each table with compatible data types
    - removes duplicates unless UNION ALL is used
- Advanced SQL Commands
  - Math functions
    - [[https://www.postgresql.org/docs/9.1/static/functions.html][Documentation]]
    - operators: e.g. SELECT customer_id + payment_id AS new_id FROM payment;
    - functions
  - Timestamps and extract
    - [[https://www.postgresql.org/docs/9.1/static/datatype-datetime.html][PostgreSQL day/time documentation]]
    - e.g. SELECT SUM(amount),extract(month from payment_date) AS month FROM payment GROUP BY month;
  - Strings
    - [[https://www.postgresql.org/docs/9.1/static/functions.html][Documentation]]
    - e.g. SELECT first_name || ' ' || last_name AS full_name FROM customer;
  - SubQuery
    - multiple SELECT statements as brackets in the WHERE clause
    - e.g. rental rate higher than average rental rate: SELECT film_id,title,rental_rate FROM film WHERE rental_rate > (SELECT AVG(rental_rate) FROM film);
    - e.g. SELECT inventory.film_id FROM rental INNER JOIN inventory ON inventory.inventory_id = rental.inventory_id WHERE return_date BETWEEN '2005-05-29' AND '2005-05-30';
  - Self-Join
    - merge two columns with the AS statement
    - e.g. SELECT a.first_name,a.last_name,b.first_name,b.last_name,a.customer_id,b.customer_id FROM customer AS a, customer AS b WHERE a.first_name = b.last_name;
- Assessment 2
  - SELECT * FROM cd.facilities;
  - SELECT name,membercost FROM cd.facilities;
  - SELECT name,membercost FROM cd.facilities WHERE cd.facilities.membercost >0;
  - SELECT name,membercost,monthlymaintenance FROM cd.facilities WHERE cd.facilities.membercost >0 AND membercost < (monthlymaintenance/50);
  - SELECT name FROM cd.facilities WHERE name LIKE '%Tennis%';
  - SELECT * FROM cd.facilities WHERE facid = 1 OR facid = 5;
  - SELECT memid,surname,firstname,joindate FROM cd.members WHERE joindate > '2012-09-01';
  - SELECT DISTINCT(surname) FROM cd.members ORDER BY surname LIMIT 10;
  - SELECT joindate FROM cd.members ORDER BY joindate DESC LIMIT 1;
  - SELECT COUNT(guestcost) FROM cd.facilities WHERE guestcost >=10;
  - SELECT facid,SUM(slots) FROM cd.bookings WHERE starttime >'2012-08-31' AND starttime <'2012-10-01' GROUP BY facid ORDER BY SUM(slots);
  - SELECT facid,SUM(slots) FROM cd.bookings GROUP BY facid HAVING SUM(slots) >1000 ORDER BY facid;
  - SELECT cd.bookings.facid,cd.bookings.starttime,cd.facilities.facid,cd.facilities.name FROM cd.bookings INNER JOIN cd.facilities on cd.bookings.facid=cd.facilities.facid WHERE starttime > '2012-09-20' AND starttime < '2012-09-22' AND name LIKE '%Tennis Court%' ORDER BY starttime;
  - SELECT starttime FROM cd.bookings WHERE memid=(SELECT memid FROM cd.members WHERE surname = 'Farrell' AND firstname='David');
- Creating Content
  - Creating Databases and Tables
    - specify data types
      - character types
        - char single
        - char(n) fixed-length
        - varchar variable-length
      - integers
        - smallint
        - int
        - serial- auto-increment
      - floats
        - float(n)
        - real
        - numeric
      - temporal
        - date
        - time
        - timestamp
        - interval
        - timestamptz
    - Keys
      - Primary- column for unique row id
        - primary key constraints-
        - one per table
      - Foreign
        - the primary key of another table (child / referencing table)
        - defined by foreign key constraint
  - Create Table
    - i.e.: CREATE TABLE table_name (column_name TYPE column_constraint, table_constraint) INHERITS existing_table_name;
      - e.g.: CREATE TABLE table_name (column_name data_type PRIMARY KEY, column_name data_type, ...);
      - column constraints
        - NOT NULL
        - UNIQUE
        - PRIMARY KEY = NOT NULL + UNIQUE
          - a multiple-column primary key can be made at table constraints
        - CHECK
        - REFERENCES- constrains to value of another table
      - table constraints = column constraints
      - e.g.: CREATE TABLE account(user_id serial PRIMARY KEY,username VARCHAR(50) UNIQUE NOT NULL,password VARCHAR(50) NOT NULL, email VARCHAR(335) UNIQUE NOT NULL, created_on TIMESTAMP NOT NULL, last_login TIMESTAMP);
      - copy table structure- e.g.: CREATE TABLE link_copy (LIKE link);
    - INSERT
      - create table defines schema, not rows
      - ie.: INSERT INTO table(column1,column2,...) VALUES (value1,value2,...),(value1,value2,...);
      - e.g.: INSERT INTO link(url,name) VALUES ('www.google.com','Google');
      - from another table: INSERT INTO table SELECT column1,column2,... FROM another_table WHERE condition;
        - e.g.: INSERT INTO link_copy SELECT * FROM linkWHERE name LIKE ('%Bing%');
  - UPDATE
    - i.e. UPDATE table SET column1 = value1, column2 = value2,... WHERE condition;
    - e.g. UPDATE link SET description = 'Name starts with an A' WHERE name LIKE 'A%';
    - see returned results- e.g.: UPDATE link SET description = 'New Description' WHERE id = 1  RETURNING id,url,name,description;
  - DELETE
    - for rows
      - i.e.: DELETE FROM table WHERE condition RETURNING column1,...;
      - returns # of rows deleted
      - e.g.: SELECT * FROM link; DELETE FROM link WHERE name LIKE 'B%';
  - ALTER TABLE
    - i.e.: ALERT TABLE table action;
      - actions (many)
        - ADD COLUMN
        - DROP COLUMN
    - e.g.: ALTER TABLE link RENAME COLUMN title TO new_title_name;
    - e.g.: ALTER TABLE link ADD COLUMN active boolean;
  - DROP TABLE i.e. DROP TABLE IF EXISTS table_name;
  - Constraints
    - CHECK
      - e.g.:CREATE TABLE new_users(id serial PRIMARY KEY,first_name VARCHAR(50),birth_date DATE CHECK (birth_date > '1900-01-01'));
    - NOT NULL- row must have a value for this column
    - UNIQUE
- Assessment 3
- [ ] Create a new database called "School"
  - constraints
    - must have a phone number
    - must have ids as the primary key of the tables
    - Phone numbers and emails must be unique to the individual.
  - tables:
    - teachers
      - teacher_id, first_name, last_name,homeroom_number, department, email, and phone.
    - students
      - columns student_id, first_name,last_name, homeroom_number, phone,email, and graduation year.
- [ ] Once you've made the tables, insert a student named Mark Watney (student_id=1) who has a phone number of 777-555-1234 and doesn't have an email. He graduates in 2035 and has 5 as a homeroom number.
- [ ] Then insert a teacher names Jonas Salk (teacher_id = 1) who as a homeroom number of 5 and is from the Biology department. His contact info is: jsalk@school.org and a phone number of 777-555-4321.
- View = stored query
  - e.g.: CREATE VIEW customer_info AS SELECT first_name,last_name,email,address,phone FROM customer JOIN address ON customer.address_id=address.address_id;
  - not creating new data, just saving the query
  - ALERT VIEW
  - DROP VIEW

****** Ideas
:PROPERTIES:
:ID:       31F5C06A-6F4B-4FE0-842E-481BA241AB8E
:END:

- [[https://www.google.com/search?q=data+entry+website+to+sql&rlz=1CDGOYI_enUS715US716&oq=data+entry+website+to+sql&aqs=chrome..69i57.8665j0j9&hl=en-US&sourceid=chrome-mobile&ie=UTF-8][Google: data entry website to sql]]
- [[https://www.google.com/search?safe=off&rlz=1CDGOYI_enUS715US716&hl=en-US&ei=HW5JWcPsPMHOjwSXsZTQAg&q=Make+a+glossary+with+sql&oq=Make+a+glossary+with+sql&gs_l=mobile-gws-serp.3..33i160k1.609342.621121.0.621950.15.15.0.0.0.0.900.4489.0j9j4-1j2j2.14.0....0...1.1.64.mobile-gws-serp..4.11.2269...0j0i67k1j0i7i30k1j0i7i10i30k1j0i22i30k1j33i22i29i30k1.LBD7UzJYOMM][Make a glossary with sql]]
- SQL in Org Mode
*** Data pre-processing / data wrangling
:PROPERTIES:
:ID:       20b10d38-1d24-4a0e-b9b8-d6f2b1394efe
:END:
- [[id:c7d8dd07-098e-4bc4-b008-5da0abcabb0d][The Missing Semester of Your CS Education]]
- https://www.reddit.com/r/datascience/comments/fzweaf/my_giant_data_quality_checklist/
- https://github.com/ben519/DataWrangling
- cite:pedsnet
- cite:press2016
- https://en.wikipedia.org/wiki/OpenRefine
- https://www.reddit.com/r/datascience/comments/fzweaf/my_giant_data_quality_checklist/
- missing data imputation http://factominer.free.fr/missMDA/appendix_These_Audigier.pdf
*** [[id:F80F3FAF-1D79-40F5-934B-F74D19143DBD][LINK TO Probability and Statistics]]
:PROPERTIES:
:ID:       e2b15a0d-bc6d-48d6-9ea2-d7f6be07af31
:END:
*** [[id:7d5cda01-172e-49ee-8030-754402f3aa7d][LINK TO Data science in R]]
:PROPERTIES:
:ID:       532fe01c-7768-4e6d-b405-aea381eb0692
:END:
*** [[id:CFACF7AD-30FC-4200-92FE-3710B5DC5E9E][Machine Learning]]
:PROPERTIES:
:ID:       eca4f279-86ee-40ea-a78b-3cddb00b6c67
:END:
*** Data Visualization
:PROPERTIES:
:ID:       1DA3ABC0-79B0-4CED-B926-22B37840379D
:END:
https://clauswilke.com/dataviz/index.html
http://www.sthda.com/english/wiki/the-elements-of-choosing-colors-for-great-data-visualization-in-r#complementary-color-scheme
https://rstudio-pubs-static.s3.amazonaws.com/1691_3c8dee811cf2497385cde81bd97f8e15.html
**** Elements
:PROPERTIES:
:ID:       c9c4cf07-c4db-400a-96bc-1ec05db710e6
:END:
***** Color
:PROPERTIES:
:ID:       00c182a1-e027-43b9-bae8-21cefaad1fd8
:END:
- https://cran.r-project.org/web/packages/ggsci/vignettes/ggsci.html
- [[id:e511cc41-3ef4-4f84-845d-0c28e87157e1][Color in visualizations]]
- https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1008259
- [[https://vega.github.io/vega/docs/schemes/][dark2 scheme]]
    - nice color scheme https://stackoverflow.com/questions/9563711/r-color-palettes-for-many-data-classes
- [[id:31d52adc-0c06-4d7f-a41e-e1c965aa76c9][Color - value associations]]
***** Style
:PROPERTIES:
:ID:       b8acbcc7-291b-4638-8952-74e63420d071
:END:
- cite:wilke2019
- https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1003833
- https://www.datarevelations.com/resources/bans/
- http://www.npr.org/2013/01/18/169708761/edward-tufte-wants-you-to-see-better
- https://www.reddit.com/r/datascience/comments/diufp0/are_there_other_thinkers_with_different_ideas_in/
- cite:rougier2014
**** Platforms
:PROPERTIES:
:ID:       ac1dc15a-57dd-41ae-a117-14585efbe426
:END:
- [[id:0bc9f268-11b2-4925-ba51-40809ebccf11][D3]]
- [[id:19d01dcc-8fef-4c07-952a-da918b3dc775][ggplot]]

- Python
  - https://github.com/rougier/scientific-visualization-book
- Tableau
  - [[https://www.tableau.com/learn/training][Training videos]]
    -
**** Examples
:PROPERTIES:
:ID:       41542d73-75ac-4095-a841-987d426b8c1b
:END:
- https://www.reddit.com/r/lifehacks/comments/bcc14q/ill_leave_this_here_for_anyone_else_writing/
- https://www.reddit.com/r/dataisbeautiful/comments/16v95ae/oc_percent_of_recipes_including/
- https://www.reddit.com/r/coolguides/comments/h8pzmp/real_proportions_of_all_land_masses_revealing/
- https://jku-vds-lab.at/
- https://www.reddit.com/r/datascience/comments/8haezl/python_google_sheets_api_tableau_public_full/
- https://www.reddit.com/r/dataisbeautiful/comments/8a4gbr/the_office_characters_most_distinguishing_words_oc/dwvr99n/?st=jfpn0x1j&sh=b083f7c5
- https://www.reddit.com/r/bioinformatics/comments/jd3k0x/what_is_the_most_aesthetically_pleasing_figure/
- https://setosa.io/#/
- https://www.reddit.com/r/dataisbeautiful/comments/aa92ex/seeing_theory/
- https://ourworldindata.org/
- https://www.theverge.com/platform/amp/2018/10/28/18022986/data-visualization-information-is-beautiful-2018
- matlab example- - https://www.reddit.com/r/dataisbeautiful/comments/7ve4i8/comparison_between_two_quadruple_pendulums_with/
- https://www.reddit.com/r/dataisbeautiful/comments/8nadwr/every_road_in_the_continental_us_oc/
- https://observablehq.com/@petulla/statistical-power-explorable
  - - http://www.shorttails.io/interactive-map-of-reddit-and-subreddit-similarity-calculator/
- https://www.reddit.com/r/dataisbeautiful/comments/7b7aa0/visualizing_the_depthfirst_search_recursive/dpfr49n/
- https://beno.org.uk/metromapcreator/
- http://www.besthealthdegrees.com/health-risks/
- https://github.com/USGS-VIZLAB/hurricane-irma
- http://www.visualcapitalist.com/wp-content/uploads/2017/09/cognitive-bias-infographic.html
- [[http://flowingdata.com/2017/01/24/one-dataset-visualized-25-ways/][One Dataset, Visualized 25 Ways]]
- [[https://www.reddit.com/r/dataisbeautiful/comments/6m0wo7/peak_time_for_sports_and_leisure_oc/][Peak time for sports and leisure {OC}]]
- https://pudding.cool/2017/03/film-dialogue/index.html
- https://pudding.cool/2017/05/song-repetition/
- [[http://students.brown.edu/seeing-theory/][brown.edu Seeing theory]]
- [[http://setosa.io/ev/principal-component-analysis/][setosa Principal Component Analysis Explained Visually]]
- [[https://trends.google.com/trends/explore][Google trends]]
- [[https://www.reddit.com/r/educationalgifs/comments/6iv0kk/how_herd_immunity_works/dj9a5e3/][gif simulation]]
- http://www.informationisbeautiful.net/visualizations/snake-oil-supplements/
- https://www.bloomberg.com/graphics/2015-whats-warming-the-world/
- [[https://www.reddit.com/r/dataisbeautiful/comments/6qnkg0/google_search_interest_follows_the_path_of_the/][reddit: Google search interest follows the path of the August 21, 2017 solar eclipse]]
- https://vizhub.healthdata.org/gbd-compare/
- https://www.gapminder.org/
  - https://www.gapminder.org/tools/#_state_time_delay:100;&marker_axis/_x_scaleType=linear;;;&data_/_lastModified:1521499532636;&chart-type=bubbles
  - https://github.com/Gapminder
- https://www.reddit.com/r/coolguides/comments/9l83yl/a_guide_4000_years_of_history/
**** Choosing
:PROPERTIES:
:ID:       f3bb1dae-fbf1-4c94-861f-8ca256ee2320
:END:
- https://datavizproject.com/function/part-to-whole/
- https://datavizcatalogue.com/
**** General
:PROPERTIES:
:ID:       f9288c30-9336-4297-8b42-231de3fb4f16
:END:
- cite:wilke2019
- cite:liu2014
**** Specific types
:PROPERTIES:
:ID:       c50d8bb6-f9ee-4b5f-a613-92494f04e82b
:END:
***** Infographics
:PROPERTIES:
:ID:       376f99f7-992e-4bc6-8eed-8b82be081e98
:END:
- [[https://www.reddit.com/r/IWantToLearn/comments/62ns0p/how_do_i_create_infographic_videos/][reddit: IWTL how to make infographic videos]]
***** tSNE
:PROPERTIES:
:ID:       0a43507b-670b-44ac-a49a-c3f546e95206
:END:
https://distill.pub/2016/misread-tsne/
https://github.com/jkrijthe/Rtsne
https://www.jmlr.org/papers/volume9/vandermaaten08a/vandermaaten08a.pdf
***** Sankey
:PROPERTIES:
:ID:       76b24ebe-43d7-4562-ad0d-aa3e6dfc9eb2
:END:
https://www.reddit.com/r/dataisbeautiful/comments/vy38rz/oc_apple_income_statement_breakdown/
***** Clustering
:PROPERTIES:
:ID:       d04e51cd-0c6a-412e-9564-d01a506ee9dd
:END:
- https://github.com/jokergoo/InteractiveComplexHeatmap
- http://compbio.ucsd.edu/making-heat-maps-r/
- https://biit.cs.ut.ee/clustvis/
***** Simulations
:PROPERTIES:
:ID:       7fffb5cd-2c9d-4e2a-ab2a-0830b25eef15
:END:
- https://www.reddit.com/r/dataisbeautiful/comments/b1ao5h/estimating_pi_using_monte_carlo_simulation_oc/
- https://github.com/paulvangentcom/python_corona_simulation?files=1
***** Dashboards
:PROPERTIES:
:ID:       3dbcbd8b-b888-48fc-82dd-8659784fe428
:END:
https://streamlit.io/
- https://gisanddata.maps.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6

***** Dynamics
:PROPERTIES:
:ID:       8dffcfcf-33d3-42da-b75a-d8c42230e1e7
:END:
- https://www.reddit.com/r/dataisbeautiful/comments/8uo1q9/popcorn_analytics_oc/
- https://www.reddit.com/r/dataisbeautiful/comments/jkqbtk/oc_presidential_election_forecast_current/
- https://towardsdatascience.com/recreating-gapminder-animation-in-2-lines-of-python-with-plotly-express-2060c73bedec
- https://www.reddit.com/r/dataisbeautiful/comments/b2fybb/animation_the_10_biggest_cities_in_the_world/
- https://pbs.twimg.com/media/C0NSXNuXAAIpUgN.jpg:large
- [[https://www.shipmap.org/]]
***** Networks and graphs
:PROPERTIES:
:ID:       6cd2214c-a469-46af-8ec7-11063cf3022c
:END:
- https://www.reddit.com/r/datascience/comments/17212yf/why_are_there_no_good_graph_visualisation_programs/
- https://www.reddit.com/r/dataisbeautiful/comments/9yg8w9/googles_autocomplete_visualized_like_a_graph_link/
- https://www.reddit.com/r/dataisbeautiful/comments/9kg9ym/oc_recent_philosophy_visualized/
- http://www.hiveplot.com/
- https://gephi.org/
***** Miscellaneous
:PROPERTIES:
:ID:       1706bb63-62bd-475e-95ce-2226dcf50f18
:END:
- decision trees https://towardsdatascience.com/a-better-way-to-visualize-decision-trees-with-the-dtreeviz-library-758994cdf05e
- https://www.reddit.com/r/dataisbeautiful/comments/8yrevu/oc_street_orientation_of_dutch_cities/-
https://www.reddit.com/r/learnjavascript/comments/vnbpxt/any_clue_how_can_i_go_about_creating_a_chart_like/
- radar graphs for antibiogram
**** Flat
:PROPERTIES:
:ID:       fdc5dbe3-c2e1-4398-9bce-2e6c154f2a6e
:END:
***** Color - value associations
:PROPERTIES:
:ID:       31d52adc-0c06-4d7f-a41e-e1c965aa76c9
:END:
https://stats.stackexchange.com/questions/51792/how-to-find-a-suitable-association-of-color-with-data-value-in-a-visualization
*** Ontologies
:PROPERTIES:
:ID:       9240c334-e533-4a72-b2a8-26da6fa453ec
:END:
- https://www.kdnuggets.com/2019/01/ontology-data-science.html
- https://en.wikipedia.org/wiki/Ontology_engineering
- https://en.wikipedia.org/wiki/Process_ontology
- https://en.wikipedia.org/wiki/Ontology_(information_science)#Components
- ontology creation in org-mode
  - https://pypi.org/project/Owlready2/
  - https://en.m.wikipedia.org/wiki/Ontology_components
  - https://github.com/caiorss/org-wiki
  - https://journals.tdl.org/jodi/index.php/jodi/article/view/131/129
- https://protege.stanford.edu/conference/2006/submissions/slides/OWLTutorial_Part1.pdf
- Protege
  - http://mowl-power.cs.man.ac.uk/protegeowltutorial/resources/ProtegeOWLTutorialP4_v1_2.pdf
  - https://media.readthedocs.org/pdf/go-protege-tutorial/latest/go-protege-tutorial.pdf
  - https://protege.stanford.edu/conference/2006/submissions/slides/AppDevelopmentTutorial_Part1.pdf
- https://pypi.python.org/pypi/Owlready2
- https://www.w3.org/OWL/
- http://obofoundry.org/
- http://www.cs.man.ac.uk/~stevensr/menupages/background.php
- http://www.obofoundry.org/
- https://protegewiki.stanford.edu/wiki/Main_Page
- http://protege.stanford.edu/community.php
- https://www.youtube.com/watch?v=8Nf2xf5akoM
- https://www.ncbi.nlm.nih.gov/pubmed/27239556
*** Data sources, data sets
:PROPERTIES:
:ID:       9b13fa97-526c-41eb-abdc-3a2627c54c64
:END:
- https://www.reddit.com/r/datascience/comments/ceucnb/ibm_launches_the_data_asset_exchange_dax_an_an/
- https://www.blog.google/technology/research/open-source-and-open-data/amp/
- https://github.com/CSSEGISandData/COVID-19
- https://zenodo.org/
- https://www.wikidata.org/wiki/Wikidata:Main_Page
- https://toolbox.google.com/datasetsearch
- https://gwu-libraries.github.io/sfm-ui/posts/2017-09-14-twitter-data
- https://meta.wikimedia.org/wiki/Research:Wikipedia_clickstream
- https://github.com/fivethirtyeight/data
- http://data.stackexchange.com/
- https://www.reddit.com/r/datasets/comments/akb4mr/what_is_a_dataset_that_you_cant_believe_is/
- https://www.wikidata.org/wiki/Wikidata:Main_Page
*** High dimension data transformation
:PROPERTIES:
:ID:       588f6536-9db9-4279-9e67-800890c2de23
:END:
- cite:buschmann2016 pg 6010
- log transformation for skew
- rlog
- vst
*** Exploratory Data Analysis (EDA)
:PROPERTIES:
:ID:       A6C156F3-9442-4D8F-97F1-446729EC6193
:CREATED:  [2019-04-22 Mon 15:23]
:END:
https://towardsdatascience.com/discovering-the-treasures-of-22-r-exploratory-analysis-packages-9bb1c5b4e6f8
- DataExplorer::create_report()
- univariate
  - describe()
- multivariate

*** Artificial Intelligence
:PROPERTIES:
:ID:       A6C156F3-9442-4D8F-97F1-446729EC6006
:END:

- https://github.com/norvig/paip-lisp
- http://aima.cs.berkeley.edu/
- [[https://www.reddit.com/r/science/comments/65gf8q/selftaught_artificial_intelligence_beats_doctors/][reddit- ai beats docs]]
- cite:russell2010
- cite:sankar2014
- https://www.edx.org/course/artificial-intelligence-ai-columbiax-csmm-101x
- [[https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-034-artificial-intelligence-fall-2010/][MIT Artificial intelligence 2010]]
- http://simplystatistics.org/2017/01/19/what-is-artificial-intelligence/

**** Natural Language Processing (NLP)
:PROPERTIES:
:ID:       3B071811-9ADD-40AA-9D5F-0D9B73520BCE
:END:
:LOGBOOK:
CLOCK: [2019-02-19 Tue 09:57]--[2019-02-19 Tue 10:24] =>  0:27
CLOCK: [2017-05-02 Tue 11:09]--[2017-05-02 Tue 11:45] =>  0:36
CLOCK: [2017-05-02 Tue 10:35]--[2017-05-02 Tue 11:09] =>  0:34
:END:
- [[id:E6900F8A-2302-4076-8B27-7963B3EC4CC0][Semantic and natural language processing lab]]
- [[id:CA21AAC9-F147-4086-A24C-64451EE349F3][Python NLTK]]
- applications
  - [[https://www.reddit.com/r/dataisbeautiful/comments/8m9ha6/i_created_a_tool_to_automatically_extract_the/][summarization]]
  - nl processing bot
    - https://www.reddit.com/r/autotldr/comments/31bfht/theory_autotldr_concept/?st=j29fxbql&sh=b124ddb9
    - https://www.reddit.com/r/autotldr/comments/31b9fm/faq_autotldr_bot/?st=j29fxbbd&sh=2c5a4683
  - crawl a website for nl
    - http://www.httrack.com/
    - https://superuser.com/questions/14403/how-can-i-download-an-entire-website
    - https://www.crummy.com/software/BeautifulSoup/bs4/doc/
  - healthcare
    - [[http://clamp.uth.edu/][CLAMP Clinical Language Annotation, Modeling, and Processing Toolkit]]
      - cite:soysal2017
    - [[https://metamap.nlm.nih.gov/][metamap]]
    - https://github.com/ncbi-nlp
    - Linguamatics at WashU
      - [[id:DCCB84AB-69B7-4DCC-9BB3-B1DC3BDEE190][Payne Linguamatics]]
      - [[id:C717DCDF-F41C-491C-97E3-CB001912EF16][<2017-04-19 10:24> Jackups Payne Cicerelli Linguamatics]]

**** Columbia CSMM.101x Artificial Intelligence (AI)
:PROPERTIES:
:ID:       576B5CCD-28AF-43B2-B6A3-EF29AF391251
:END:
:LOGBOOK:
CLOCK: [2017-02-15 Wed 14:06]--[2017-02-15 Wed 14:55] =>  0:49
CLOCK: [2017-02-13 Mon 18:45]--[2017-02-13 Mon 19:53] =>  1:08
:END:

- [[http://aima.cs.berkeley.edu/code.html][textbook code repo]]
same text, but previously using Undacity Stanford Artificial Intelligence
https://courses.edx.org/courses/course-v1:ColumbiaX+CSMM.101x+1T2017/courseware/72ad68365307491198cfcadeeb17baad/adbd7b28184343a1ab8532fbdadd7de4/

***** Week 1: Introduction to AI
:PROPERTIES:
:ID:       674E10A4-77DB-4745-B98D-3CE96DD32D98
:END:

***** Week 2: Intelligent Agents and Uninformed Search
:PROPERTIES:
:ID:       D211037A-EB0C-4009-8265-18393AACDA9C
:END:

***** Week 3: Heuristic Search
:PROPERTIES:
:ID:       5E6688C5-3577-4831-B7C5-139402A7224E
:END:

***** Week 4: Advanced Search and Games
:PROPERTIES:
:ID:       302F3E5D-F45E-4456-9C65-8499A3E5CE29
:END:

***** Week 5: Machine Learning 1
:PROPERTIES:
:ID:       288686AD-0258-4B1D-A414-F0B73C0D3396
:END:

***** coursea notes
:PROPERTIES:
:ID:       7BB8A6D9-E527-44C2-A3FD-AB7C65A41D20
:END:

****** 1. Welcome to AI
:PROPERTIES:
:ID:       27F2848A-ADB4-45E2-BBC5-8F91C2A0EDEE
:END:

- Intelligent agent, perception-action cycle: [[file:org.org_imgs/20170206_122258_95886o5b.png]]

- AI- a solution to uncertainty
- environment classifications
  - Fully vs. partially observable environment
  - Deterministic vs. Stochastic
    - chess- deterministic
    - dice- stochastic ~ random
  - discrete vs. continuous
  - benign vs. adversarial
- Examples

****** 2. Problem Solving
:PROPERTIES:
:ID:       1F2B2E06-5707-49E6-9078-B3D39A0ABFEF
:END:

problem
- inital state
- action
- result (input state and action, output is new state)
- goal test
- path cost

tree function is a loop that adds paths. paths are collections of actions/results

uniform cost search (cheapest)

algorithm properties
- completeness
- A* search if f + h where f is path function from start to location and h is length from location to destination, stops when shortest path is found
  - if h(s) is < true cost, then A* finds lowest cost path
- state space
  - number of states
- problem solving algorithms require
  - fully observable
  - discrete
  - deterministic
  - static

*** General reference and miscellaneous
:PROPERTIES:
:ID:       08762066-018f-4d6f-bb42-03b37b526814
:END:
- https://data36.com/
- Standards
  - Date and time
    - https://en.wikipedia.org/wiki/ISO_8601
- Data management
  -
  - Data lineage
  - https://www.scnsoft.com/blog/guide-to-data-quality-management
- cite:janssens2021
- General education https://www.rscreencasts.com/?ref=reddit
- Best practices
  - https://www.reddit.com/r/datascience/comments/wcsx2n/data_science_best_practices/
- Principles
  -
- Reading suggestions
  - https://www.reddit.com/r/datascience/comments/so7l3n/must_reads/
  - https://www.reddit.com/r/datascience/comments/v6sv06/what_is_the_bible_of_data_science/
- FAIR principles for scientific data management ans stewardship cite:wilkinson2016
- https://cmap.ihmc.us/
- https://github.com/UW-Madison-DataScience
- Argdown and argumentation notation
  - http://aifdb.org/argview/4
  - http://aifdb.org/argview/4
  - https://argdown.org/sandbox/map
- https://github.com/UW-Madison-DataScience
- https://www.freecodecamp.org/news/teach-yourself-data-analytics-in-30-days/
- https://www.classcentral.com/report/best-data-science-curriculum/
- https://www.reddit.com/r/datascience/comments/qore0i/what_is_something_you_took_the_time_to_learn_that/
- https://www.dataquest.io/
- https://www.reddit.com/r/datascience/comments/bo2p99/is_java_c_or_c_necessary/
- http://www.datasciencecourse.org/lectures/
- https://www.reddit.com/r/datascience/comments/c66buk/top_github_data_science_project/
- http://openmetric.org/
- https://bookriot.com/2019/09/20/data-science-books/amp/
- https://www.reddit.com/r/datascience/comments/lrkob9/interview_question_i_generally_ask_applicants/
- https://old.reddit.com/r/datascience/comments/libpdr/any_fun_easy_to_read_scientific_papers_youd/
- https://www.reddit.com/r/datascience/comments/m6lssy/what_are_the_best_intro_classes_to_python_r_and/
- repositories - https://zenodo.org/
- https://www.reddit.com/r/datascience/comments/ae4fc3/best_data_science_talk_one_can_watch/
- https://www.reddit.com/r/datascience/comments/aczhjc/what_is_something_in_ds_that_has_blown_your_mind/
- https://towardsdatascience.com/a-long-term-data-science-roadmap-which-wont-help-you-become-an-expert-in-only-several-months-4436733e63ff
- [[https://slu-dss.github.io/news/][SLU DATA SCIENCE SEMINAR]]
- Quantity has a quality all its own
- Business rules engines- drools https://www.drools.org/
- Online Educational Resources
  - https://www.kaggle.com/
  - [[https://www.edx.org/course/statistical-thinking-data-science-columbiax-ds101x-0?utm_medium=paid-social&utm_source=facebook&utm_campaign=fb-us-pc-cs-msft-dsc-stats-verla-feed&utm_content=fb-us-pc-cs-msft-dsc-stats-solidtextlogo][self-paced Columbia stat thinking for data science]]
  - [[https://www.youtube.com/c/thesemicolon?app=desktop][youtube: the semicolon data science]]
  - [[https://www.datacamp.com/home][data camp]]
  - https://www.kaggle.com/learn/overview
  - http://www.inference.phy.cam.ac.uk/itprnn_lectures/
  - http://mlwhiz.com/blog/2017/03/26/top_data_science_resources_on_the_internet_right_now/
- http://www.datacarpentry.org/
- http://courses.csail.mit.edu/18.337/2015/docs/50YearsDataScience.pdf
** Graph theory tools
:PROPERTIES:
:ID:       4a5444c9-918d-4651-9def-bbcc26f9016e
:END:
- [[f6f303fe-70ba-4e15-99e5-5f881b3b0a45][f6f303fe-70ba-4e15-99e5-5f881b3b0a45]]
- [[http://vlado.fmf.uni-lj.si/pub/networks/pajek/][Pajek]]
** Machine Learning
:PROPERTIES:
:ID:       c013714a-c4f5-4c3b-9eac-94bfc3ded1ab
:END:
:career:informatics:study:
:PROPERTIES:
:ID:       CFACF7AD-30FC-4200-92FE-3710B5DC5E9E
:END:
https://www.reddit.com/r/MachineLearning/comments/17p42te/r_very_detailed_mathematical_introduction_to_deep/
https://www.reddit.com/r/datascience/comments/150dyrf/xgboost_to_learn_insights_in_data/
https://distill.pub/
- cite:james2021
-
https://www.reddit.com/r/MachineLearning/comments/t55lbw/d_whats_your_favorite_unpopularforgotten_machine/
https://github.com/edwardleardi/mle-ds-swe-cheat-sheets
https://christophm.github.io/interpretable-ml-book/
https://www.reddit.com/r/MachineLearning/comments/uwibp8/d_calculating_shannon_information_of_data/
https://stats.stackexchange.com/questions/471822/are-there-any-power-calculation-formulas-for-ml-methods-beyond-logistic-regressi
https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0224365
https://www.reddit.com/r/statistics/comments/t3ok40/q_is_there_any_difference_between_latent_profile/
https://torchstudio.ai/
https://www.reddit.com/r/datascience/comments/sxtppd/stop_resampling_data_in_classification_problems/
https://www.reddit.com/r/datascience/comments/so7l3n/must_reads/
https://www.reddit.com/r/datascience/comments/sm96f5/machine_learning_simplified_book/
https://github.com/aaronwangy/Data-Science-Cheatsheet/blob/main/Data_Science_Cheatsheet.pdf
https://www.sciencedirect.com/science/article/pii/S2666389921002348
https://www.nature.com/articles/s41587-021-01070-8#Sec2
https://www.reddit.com/r/datascience/comments/ps1ysk/1st_attempt_algorithm_selection_flowchart/
https://www.3blue1brown.com/
- https://meta.stackoverflow.com/questions/404799/lets-gift-wrap-our-good-machine-learning-theory-questions-for-cross-validated?noredirect=1#comment822113_404799
- https://www.google.com/search?q=machine+learning+train+validate+test+split+sizes
- https://distill.pub/
- https://www.nature.com/articles/s41598-018-24783-4#Sec6
https://www.statlearning.com/
https://www.deeplearningbook.org/
- Error-Correcting Output Codes
- cite:ma2018
https://web.stanford.edu/class/stats202/intro.html
cite:yala2021
https://github.com/qarchli
https://www.sciencedirect.com/science/article/pii/S1874939919302500
https://old.reddit.com/r/dataisbeautiful/comments/jkadd0/oc_distribution_of_emotions_during_the/
- Data mining
  - cite:fayyad1996
- support vectors
  - https://stats.stackexchange.com/questions/13194/support-vector-machines-and-regression
*** Large language models LLMs
https://www.reddit.com/r/ChatGPT/comments/1hzmg1s/professor_stuart_russell_highlights_the/
*** PCA for ML feature input
:PROPERTIES:
:ID:       41eb5607-7d2f-4dc4-9c3c-42af7223b1c0
:END:
- https://stats.stackexchange.com/questions/27300/using-principal-component-analysis-pca-for-feature-selection
- https://builtin.com/data-science/step-step-explanation-principal-component-analysis
*** Processes
:PROPERTIES:
:ID:       a07f9a2e-ff18-4560-9450-617bfb764fc2
:END:
**** Compare classifier accuracy
:PROPERTIES:
:ID:       7a39e53c-1fce-428e-a9dd-f00a5f0499e9
:END:
https://stats.stackexchange.com/questions/26271/comparing-two-classifier-accuracy-results-for-statistical-significance-with-t-te
*** Dimensionality reduction
:PROPERTIES:
:ID:       48e06b9b-c3ba-4d84-bfd4-ba64e482be70
:END:
https://www.reddit.com/r/statistics/comments/14n7inh/pca_tsne_and_umap_terminology_q/
- https://stats.stackexchange.com/questions/238538/are-there-cases-where-pca-is-more-suitable-than-t-sne
- https://stats.stackexchange.com/questions/14002/whats-the-difference-between-principal-component-analysis-and-multidimensional#:~:text=PCA%20is%20just%20a%20method,MDS%20is%20only%20a%20mapping.&text=One%20definition%20is%20that%20CMDS%20is%20a%20synonym%20of%20Torgerson's%20metric%20MDS

https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-019-3310-7
[[id:4165A14F-6BDE-4D8C-B556-A349A3F5B720][Principal Component Analysis]]
*** [[Statistical Computing][LINK TO Statistical computing]]
:PROPERTIES:
:ID:       4b9459e9-4192-4e8c-afe9-f449dbdc73f9
:END:
*** general education and guides
:PROPERTIES:
:ID:       cb149912-d14b-4934-a0cc-9b4f0e10d9bd
:END:
  - https://developers.google.com/machine-learning/crash-course
    - https://developers.google.com/machine-learning/data-prep/?utm_source=mlcc&utm_campaign=mlcc-next-steps&utm_medium=referral&utm_content=data-prep-ss
  - https://old.reddit.com/r/datascience/comments/ia8gc6/amazons_machine_learning_university_is_making_its/
  - https://www.reddit.com/r/MachineLearning/comments/fks2xv/d_what_machine_learning_concepts_would_you_like/
  - https://www.reddit.com/r/datascience/comments/exk6ub/courses_as_good_as_andrew_ngs_ml_from_recent_years/
   https://www.ibm.com/blogs/research/2019/07/ai-tools-for-cancer-research/
  - https://towardsdatascience.com/top-7-data-science-course-repositories-on-github-11a47e4b8dc2
  - https://pypi.org/project/aix360/
  - https://chemicalstatistician.wordpress.com/2014/01/24/machine-learning-lesson-of-the-day-the-no-free-lunch-theorem/
  - Overview
    - http://www.cs.princeton.edu/courses/archive/spr08/cos511/scribe_notes/0204.pdf
    - No free lunch
    - <<<Overfitting>>>: model that performs better on a training set but worse on unseen data
    - http://ethen8181.github.io/machine-learning/
    - https://startupsventurecapital.com/essential-cheat-sheets-for-machine-learning-and-deep-learning-researchers-efb6a8ebd2e5
  - Learning resources
    - Tutorials and Examples
      - Kaggle
        - [[Kaggle titanic tutorial with R]]
        - [[https://www.kaggle.com/c/house-prices-advanced-regression-techniques][House Prices: Advanced Regression Techniques]]
      - [[https://spark.apache.org/docs/2.1.0/ml-classification-regression.html][Apache Spark Classification and regression]]
      - [[https://developers.google.com/machine-learning/crash-course/][Google machine learning crash course]]
      - Worked examples
        - [[https://blog.insightdatascience.com/separating-overlapping-chromosomes-with-deep-learning-based-image-segmentation-22f97afd3283][Separating Overlapping Chromosomes with Deep Learning]]
        - [[http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0174944][Can machine-learning improve cardiovascular risk prediction using routine clinical data?]]
    - Full courses and texts
      - [[https://www.r-bloggers.com/in-depth-introduction-to-machine-learning-in-15-hours-of-expert-videos/][r-bloggers machine learning intro videos]]
      - http://web.stanford.edu/~hastie/sldm.html
      - [[http://online.stanford.edu/course/machine-learning-su-2014][Stanford Machine learning 2014]]
      - [[https://www.udemy.com/data-science-and-machine-learning-with-python-hands-on/learn/v4/overview][Data science and machine learning with Python]]
      - [[https://www.datacamp.com/courses/machine-learning-toolbox?utm_source=fb_paid&utm_medium=fb_desktop&utm_campaign=dc_visitors][DataCamp machine learning toolbox]]
      - [[https://www.datacamp.com/community/open-courses/kaggle-tutorial-on-machine-learing-the-sinking-of-the-titanic?utm_source=fb_paid&utm_medium=fb_desktop&utm_campaign=fb_ppa#gs.LVTutww][Kaggle R Tutorial on Machine Learning]]
    - Books
      - cite:hastie2009
      - cite:james2013a
      - cite:cleophas2015
    - Data
      - [[https://gengo.ai/articles/the-50-best-free-datasets-for-machine-learning/][The 50 Best Free Datasets for Machine Learning]]
      - [[http://archive.ics.uci.edu/ml/index.php][UCI Machine Learning Repository]]
      - https://www.kaggle.com/datasets
    - [[https://jermwatt.github.io/mlrefined/][Blog for Machine learning refined book]]
    - [[https://ai.google/education][Google AI education]]
    - [[http://deeplearning.net/reading-list/][deeplearning.net reading list]]
    - [[https://developers.google.com/machine-learning/crash-course/ml-intro][Google Machine Learning Crash Course]]
    - [[https://github.com/stevebottos/stevebottos.github.io/blob/master/_downloads/HMM_Tutorial.pdf][hidden markov model tutorial]]
  - [[https://www.zdnet.com/google-amp/article/google-ponders-the-shortcomings-of-machine-learning/][Google ponders the shortcomings of machine learning]]
**** Udemy Python for Data Science and Machine Learning
:PROPERTIES:
:ID:       421B4E74-174E-4F42-8024-31EC23EEF602
:END:
:LOGBOOK:
CLOCK: [2017-08-15 Tue 08:14]--[2017-08-15 Tue 09:21] =>  1:07
CLOCK: [2017-08-11 Fri 10:05]--[2017-08-11 Fri 10:19] =>  0:14
CLOCK: [2017-08-11 Fri 09:21]--[2017-08-11 Fri 10:05] =>  0:44
CLOCK: [2017-08-09 Wed 07:59]--[2017-08-09 Wed 08:53] =>  0:54
CLOCK: [2017-08-02 Wed 15:15]--[2017-08-02 Wed 15:36] =>  0:21
CLOCK: [2017-08-02 Wed 14:37]--[2017-08-02 Wed 15:14] =>  0:37
CLOCK: [2017-07-31 Mon 08:35]--[2017-07-31 Mon 09:11] =>  0:36
CLOCK: [2017-07-31 Mon 07:42]--[2017-07-31 Mon 08:27] =>  0:45
CLOCK: [2017-07-07 Fri 08:24]--[2017-07-07 Fri 08:58] =>  0:34
CLOCK: [2017-07-07 Fri 08:15]--[2017-07-07 Fri 08:22] =>  0:07
CLOCK: [2017-06-30 Fri 08:21]--[2017-06-30 Fri 09:03] =>  0:42
CLOCK: [2017-06-30 Fri 08:02]--[2017-06-30 Fri 08:10] =>  0:08
:END:
- [[https://www.udemy.com/python-for-data-science-and-machine-learning-bootcamp/learn/v4/overview][Course link]]
- Jupyter
- Notation
  - Functions
    - Function name- descriptor / : definition
      - i.e.:
      - e.g.:
- Python Crash Course
  - Part 1
    - Numbers
      - either integer or float
      - Exponent is e.g. 2 ** 4 = 16
      - Mod % is remainder of division
    - Variables
      - separate_words_with_underscore
      - can't start w/
        - numbers
        - special symbols
    - Strings
      - create with quotes
      - print strings, e.g.: print('My number is {one} and my name is {two}' .format(one=num,two=name))
      - indexing strings
        - starts at zero!
        - i.e. "slice" notation
    - Lists
      - append- e.g.: my_list = ['a','b','c'] <RETURN> my_list.append('d')
      - edit
      - nest
    - dictionary- e.g. d = {'key1':'value','key2':'value2'}
    - boolean
    - tuples
      - e.g. t = (1,2,3)
      - unlike lists, tuples are immutable (cannot re-assign element)
    - set
      - list defined by only unique elements
      - e.g.: new_set=set([1,2,3,1,2,3,2,4,5,6,2])
        - {1, 2, 3, 4, 5, 6}
      - add elements with <SET_NAME>.add(#), e.g: new_set.add(12)
    - comparison operators- compare elements with boolean
      - e.g.: 1 > 2
    - logic operators
      - and
      - or
    - if, if/else, elif
      - elif is for stacked if/else statements
        - only executes first true condition
    - python uses space where other languages would include a bracket
  - Part 3
    - for loops- e.g.: for item in seq: print (item)
    - while- e.g.: while i <5: print('i is: {}'.format(i)) i=1+1
    - to stop an infinite loop, click Kernel->Restart
    - range- e.g.: for x in range(0,5):print(x)
    - list comprehension
      - reduce typing with for loop lists
      - e.g.: [num**2 for num in x] rather than for num in x: out.append(num**2)
    - functions
      - create- e.g.: def my_fun(param1):print(param1)
      - returning values- e.g.: def square(num): return num**2
      - documentation
        - within triple quotes
        - expand in jupyter with <SHIFT><TAB>
  - Part 4
    - map function
      - apply function to list
      - e.g.: list(map(times2,seq))
    - lambda
      - an annonymous function
      - e.g.: list(map(lambda num: num*3,seq))
    - filter
      - filter out elements from a sequence
    - string functions
      - call with <STRING>.<FUNCTION>
      - common
        - split
        - upper
        - lower
    - dictionary functions
      - .keys
      - .items
    - list functions
      - .pop - 'pop' last item off of a list
      - .append
    - tuple unpacking
      - tuple- e.g.: x=[(1,2),(3,4),(5,6)]
      - unpacking- e.g.: for (a,b) in x: print(b)
  - [X] Exercises
- NumPy
  - Introduction to NumPy- linear algebra library
  - NumPy Arrays
    - import numpy as np
    - np.array(<LIST>)
    - np.arange(<START>,<STOP>,<STEP SIZE>)
    - np.#s
      - np.zeros
        - e.g.: np.zeros(3)
        - np.zeros((5,5)) # this is a tuple
      - np.ones
    - np.linspace(<START>,<STOP>,<NUMBER OF POINTS>)- equally spaced points
    - np.eye- identity matrix
      - i.e.: np.eye(<DIMENSION>)
    - randoms
      - np.random.rand(<DIM1>,<DIM2>...) uniform from zero to 1
      - np.random.randn(<DIM1>,<DIM2>...) normal distribution around zero
      - np.random.randint(<LOW>,<HIGH>,<SIZE>)
    - shape, reshape
      - <ARRAY>.shape
      - reshape(<DIM1>,<DIM2>)
    - max and min
      - max/min values
        - <ARRAY>.max()
        - <ARRAY>.min()
      - max/min positions
        - <ARRAY>.argmax()
        - <ARRAU>.argmin()
    - data type: <ARRAY>.dtype
    - import functions to avoid calling np.
      - e.g.: from numpy.random import randint
  - NumPy Indexing and Selection
    - Select from an array
    - Single element: <ARRAY>[<INDEX POS>]
    - Slice notation: <ARRAY>[<INDEX POS1>:<INDEX POS2>]
      - Everything up to POS: <ARRAY>[:<POS>]
      - If calling slice of array an object, change affect original array
        - or <ARRAY>.copy() to avoid
    - 2-D arrays
      - <ARRAY>brackbrack
    - Booloean- e.g: <ARRAY> > 5
    - Conditional selection- i.e.: <ARRAY>[<ARRAY> <CONDITIONAL>]
      - e.g.: arr[arr<3]
  - NumPy Opertations
    - Array with array- per element arithmatic
    - Array with scalars
    - Universal array functions (np. functions)
      - note np.max(arr) = arr.max()
    - NumPy exercises overview
- Pandas
  - Introduction to Pandas- Like dataframe for R
  - Series
    - numpy array with axis labels
    - pd.Series(data, labels)
  - DataFrames- just series which share an index
    -
  - Missing Data
    - dropna
      - <DF>.dropna()
      - columns with axis=1
      - thresh- NON-na values to retain
      - .fillna
        - e.g.: df['A'].fillna(value=df['A'].mean())
  - Groupby
    - 2 Steps- e.g.:
      - by_comp = df.groupby("Company")
      - by_comp.mean()
    - result is a df that can be passed to other functions
  - Merging, joining, and concatenating
    - e.g.:
      - pd.concat([df1,df2,df3])
      - pd.merge(left,right,how='inner',on='key')
      -
  - Operations
    - e.g.:
      - unique and unique counts
        - df['col2'].unique()
        - df['col2'].value_counts()
      - conditional selection- df[df['col1']>2]
      - apply
        - df['col1'].apply(times2)
        - df['col2'].apply(lambda x: x*2)
      - drop-
      - index- df.columns
      - sorting- df.sort_values('col2')
      - booleans- df.isnull()
      - pivot (multi-index)
  - Data input and output
    - i.e.:
      - pd.read_excel('<FILE>',sheetname='<SHEET>')
      - df=pd.read_csv('<FILE>')
      - df.to_csv('<FILE>',index=False)
      - html
    - for html- e.g.:
      - data = pd.read_html('https://www.fdic.gov/bank/individual/failed/banklist.html')
      - then get the first html element
    - sql
*** platforms
:PROPERTIES:
:ID:       d5710651-ae8d-41b6-b71c-314f98484daf
:END:
  - https://realpython.com/podcasts/rpp/8/
  - tensor flow
    - https://www.reddit.com/r/MachineLearning/comments/fsphh0/p_simple_tensorflow_2x_collection_of_easytouse/
    - https://github.com/microsoft/tensorwatch
  - Tensor Flow
    - cite:yu2018
    - [[http://bcomposes.com/2015/11/26/simple-end-to-end-tensorflow-examples/][Simple end-to-end TensorFlow examples]]
      - https://github.com/jasonbaldridge/try-tf
  - Weka
    - cite:frank2004
    - [[http://www.cs.waikato.ac.nz/ml/weka/][Weka 3: Data Mining Software in Java]]
    - [[http://machinelearningmastery.com/binary-classification-tutorial-weka/][How To Work Through a Binary Classification Project in Weka Step-By-Step]]
  - Python
    - [[https://github.com/rhiever/Data-Analysis-and-Machine-Learning-Projects/blob/master/example-data-science-notebook/Example%2520Machine%2520Learning%2520Notebook.ipynb][example machine learning notebook]]
    - Pandas
    - [[http://scikit-learn.org/stable/tutorial/machine_learning_map/][scikit-learn algorithm cheat sheet]]
    - [[https://github.com/rushter/MLAlgorithms][github: Minimal and clean examples of machine learning algorithms]]
  - R
    - [[https://amunategui.github.io/binary-outcome-modeling/][Modeling 101 - Predicting Binary Outcomes with R, gbm, glmnet, and {caret}]]
    - cite:james2013a
  - [[https://prodi.gy/][prodigy ML tool focused on annotation]]
  - [[https://towardsdatascience.com/python-for-data-science-from-scratch-part-i-390f01d91748][python data science from scratch]]
  - https://www.reddit.com/r/datascience/comments/9cwddt/from_pandas_to_scikitlearn_a_new_exciting_workflow/
*** datasets
:PROPERTIES:
:ID:       e0185c4b-df81-45a3-8f50-e2537f562e01
:END:
  - https://gengo.ai/datasets/18-free-life-sciences-medical-datasets-for-machine-learning/
  - https://www.english-corpora.org/coca/
*** design
:PROPERTIES:
:ID:       4481b858-3c85-4f49-8768-cf43758ef874
:END:
- [[http://www.fharrell.com/post/stat-ml/][Road Map for Choosing Between Statistical Modeling and Machine Learning]]
- Data pre-processing
  - Normalization
    - Tree-based methods are scale-invariant
    - http://sebastianraschka.com/Articles/2014_about_feature_scaling.html
    - [[https://machinelearningmastery.com/normalize-standardize-time-series-data-python/][How to Normalize and Standardize Time Series Data in
Validation
- <<<Out-of-bag>>> error estimate (<<<OOB>>>)
  - For random forest,
- Conventional validation by subsetting data
  - Training
  - Test
- Confusion matrix
  - https://en.wikipedia.org/wiki/Confusion_matrix
- Validation approaches
  - Validation set (e.g. randomly split dataset in two)
  - Cross-validation- generalizes to new, smaller datasets
    - http://www.milanor.net/blog/cross-validation-for-predictive-analytics-using-r/
    - K-fold
      - SD of each test/train set
      - Error rates over rounds
    - LOO
    - Repeat random sub-sampling
*** machine learning methods and models
:PROPERTIES:
:ID:       40A2D1C9-E730-43E8-9726-DEECB3EE1641
:END:
**** naive bayes classifier
:PROPERTIES:
:ID:       c4753ee7-7fed-4ec0-9f8e-950436a54b16
:END:
  - https://www.youtube.com/watch?v=CPqOCI0ahss&t=95s

**** Supervised
:PROPERTIES:
:ID:       a874f9fe-9799-4ca4-b22d-73e323815047
:END:
  - [[*Logistic Regression][Logistic Regression]]
  - Regression-based supervised learning
  - [[https://en.wikipedia.org/wiki/Binary_classification][Wikipedia: binary classification]]
  - Random forest
  - Classification-based supervised learning
    - Neural networks
      - https://blog.statsbot.co/neural-networks-for-beginners-d99f2235efca
      - [[http://neuralnetworksanddeeplearning.com/chap4.html][neural nets intro]]
    - Naive bayes
      - Assumptions- features are independent
    - Decision Trees
      - [[https://www.reddit.com/r/datascience/comments/62jsk9/decision_tree_explained_from_scratch_a_complete/][reddit: decision tree explained from scratch]]
**** Unsupervised- exploratory, find underlying structure based on statistical properties
:PROPERTIES:
:ID:       2eabab54-c260-4fb8-9dd2-2a3e395fb3b5
:END:
  - Clustering
    - Elbow method
    - Hierarchical clustering
    - K-means
      - puts n observations into k clusters
      - useful for unlabeled data
      - no a priori assumptions
  - Maximum entropy classification

**** Decision trees
:PROPERTIES:
:ID:       2383e27f-0f91-436d-8d34-e2f8595975cd
:END:
  - https://datascience.stackexchange.com/questions/6048/decision-tree-or-logistic-regression
  - decision trees that I didn’t mention last time: they are biased to favour factors with many levels.
  - in R- rpart
***** <<<Random Forest>>>
:PROPERTIES:
:ID:       4FF74F86-E830-4D4E-B290-7BF09F7E00AB
:END:
- random forest
  - https://stats.stackexchange.com/questions/141619/wont-highly-correlated-variables-in-random-forest-distort-accuracy-and-feature
- https://www.reddit.com/r/statistics/comments/8hbwuh/how_can_we_select_the_strongest_decision_tree/
- [[https://www.stat.berkeley.edu/~breiman/RandomForests/cc_home.htm][Breiman and Cutler Random Forests]]
  - Error depends on
    - Increases with increasing correlation between trees
    - Decreases with low error of any individual tree
- My examples
  - [[file:~/Box%20Sync/career/order.interval/amia2018.org]]
- Ensemble method- classification and regression
- [[https://datascience.stackexchange.com/questions/6510/does-modeling-with-random-forests-requre-cross-validation][stack: random forest may require cross-validation]]
- http://dni-institute.in/blogs/random-forest-using-r-step-by-step-tutorial/
- cite:breiman2001
- https://www.stat.berkeley.edu/~breiman/RandomForests/cc_home.htm
- http://blog.citizennet.com/blog/2012/11/10/random-forests-ensembles-and-performance-metrics
- Variable importance metrics
  - Decrease accuracy
  - Decrease G=ini ~ how pure terminal nodes are
- randomForest in R
  - Only handles factors to 32 levels
    - take two paths forward here, either
      - change these levels to their underlying integers (using the unclass() function) and having the tree treat them as continuous variables
      - , or manually reduce the number of levels to keep it under the threshold.
- Sources of randomness in trees
  - Bagging- Subsetting samples to test, with replacement (i.e. same row can repeat), does not control for strong features
    - Out of bag observations are used to test tree performance
  - Subsetting variables to test, usually srqt of the number of variables
- Missing values are not tolerated
  - These can be imputed by making a decision tree!

****** Random Forests with R
:PROPERTIES:
:ID:       95AB6400-7E60-4129-9CFA-34436285D5D2
:END:

******* R randomForest
:PROPERTIES:
:ID:       5E6D8972-1E72-4B40-9BA4-719F079FB350
:END:

A tutorial: https://www.tutorialspoint.com/r/r_random_forest.htm

#+BEGIN_SRC R
library(party)
library(randomForest)
head(readingSkills)
output.forest=randomForest(nativeSpeaker ~ age + shoeSize + score, data = readingSkills)
output.forest
plot(output.forest)
#+END_SRC
- [[http://www.crcnetbase.com/doi/book/10.1201/9781315399102][data mining in R]]
- [[https://www.r-bloggers.com/random-forests-in-r/][random forests in R]]

**** genetic algorithms
:PROPERTIES:
:ID:       a2351d48-c55f-4e48-9833-36f454b3def7
:END:
  - https://blog.floydhub.com/introduction-to-genetic-algorithms/
  - https://towardsdatascience.com/evolution-of-a-salesman-a-complete-genetic-algorithm-tutorial-for-python-6fe5d2b3ca35
**** generative adversarial network
:PROPERTIES:
:ID:       d879b135-9393-4da0-b9c8-e20e0f1bf0fc
:END:
- cite:lan2020
- cite:lopez2020
- cite:wang2020
- https://developers.google.com/machine-learning/gan/gan_structure
**** structural equation modeling
:PROPERTIES:
:ID:       cc10c6df-9fdb-410c-a62c-cc52e7ca0f55
:END:
- https://www.reddit.com/r/AskStatistics/comments/no2cwv/is_learning_structural_equation_modeling_methods/
- https://royalsocietypublishing.org/doi/10.1098/rsos.150541
- https://www.cscu.cornell.edu/news/Handouts/SEM_fit.pdf
- note SEM is causal https://en.wikipedia.org/wiki/Causal_inference#:~:text=Causal%20inference%20is%20the%20process,when%20the%20cause%20is%20changed.
- https://www.pnas.org/content/114/25/E4914
- https://www.nature.com/articles/s41396-019-0407-y
- https://www.nature.com/articles/s41598-019-52886-z
- https://socialsciences.mcmaster.ca/jfox/Misc/ISM-Japan/sems-notes.pdf
- cite:huisman2018
- cite:eldridge2017
- cite:kline2015
- cite:tomarken2005
- [[https://blog.efpsa.org/2015/12/14/structural-equation-modeling-what-is-it-what-does-it-have-in-common-with-hippie-music-and-why-does-it-eat-cake-to-get-rid-of-measurement-error/][JEP blog SEM]]
- http://joophox.net/publist/semfamre.pdf
- https://lavaan.ugent.be/tutorial/cat.html
- https://www.ianruginski.com/post/sem_handout1/
- constructs are "pruged of measurement error"
- test model structure by fit to patterns in observed data
- OpenMx https://openmx.ssri.psu.edu//
- combination of factor analysis and multiple regression analysis
- estimates the multiple and interrelated dependence in a single analysis
- application examples
  - cite:angelini2017
**** autoencoder
:PROPERTIES:
:ID:       5a6dfe61-3fe0-4e28-8998-93314486bcd9
:END:
- https://bmcmedinformdecismak.biomedcentral.com/articles/10.1186/s12911-020-1114-3
- https://www.kaggle.com/saivarunk/dimensionality-reduction-using-keras-auto-encoder
- https://statcompute.wordpress.com/2017/01/15/autoencoder-for-dimensionality-reduction/0
- https://stats.stackexchange.com/questions/397656/autoencoder-for-sparse-data
- utility
  - dimensionality reduction
**** Artificial Neural Nets
:PROPERTIES:
:ID:       739D4D70-90F2-4D30-8F7C-63D648440A32
:END:
https://bmcmedgenomics.biomedcentral.com/articles/10.1186/s12920-019-0628-y
- cite:lecun2015
- https://stanford.edu/~shervine/teaching/cs-229/cheatsheet-deep-learning
- https://github.com/afshinea/stanford-cs-230-deep-learning
- [[https://www.youtube.com/watch?v=bxe2T-V8XRs][Neural Networks Demystified]]
- neural network
  - https://www.r-bloggers.com/variable-importance-in-neural-networks/
**** Logistic Regression
:PROPERTIES:
:ID:       5EB27BAF-0471-4A53-A48C-8268D2B023DA
:END:
:LOGBOOK:
CLOCK: [2019-01-21 Mon 15:01]--[2019-01-21 Mon 15:29] =>  0:28
:END:
http://cran.nexr.com/web/packages/elrm/vignettes/elrm.pdf
https://stats.idre.ucla.edu/r/dae/exact-logistic-regression/
https://stats.idre.ucla.edu/r/dae/logit-regression/
probability of class membership equals exp

logarithm of odds:
log (probability of X / prob 1-X)= B0 +B1X +B2X...

always b/w zero and 1

 " the objective of regularisation is to balance accuracy and simplicity. "

"Where \lambda is a free parameter which is usually selected in such a way that the resulting model minimises the out of sample error. Typically, the optimal value of \lambda is found using grid search with cross-validation, "

optimized lambda strikes balance of coeffienct bias and optimized likelihood

- Regularization- for overfit models w/ high variance
   - Ridge regression
     - penalty creates small bias in over-fit data such that least squares fit plus lambda * slope^2 is minimuized
     - optimized lambda balances benefit of bias from modified slope with change in sum squred residuals
     - penalty is lambda * slopes^2
     - requires
   - LASSO variable selection and regularization for binary logistic regression
     - https://www.youtube.com/watch?v=NGf0voTMlcs&t=14s
     - lasso is just like ridge, e/c penalty is lambda * ABS(slope)
     - Glmnet
       - https://stats.stackexchange.com/questions/58531/using-lasso-from-lars-or-glmnet-package-in-r-for-variable-selection
       - http://web.stanford.edu/~hastie/glmnet/glmnet_alpha.html
     - [[https://eight2late.wordpress.com/2017/07/11/a-gentle-introduction-to-logistic-regression-and-lasso-regularisation-using-r/][A gentle introduction to logistic regression and lasso regularisation using R]]
     - [[https://stats.stackexchange.com/questions/135067/using-lasso-for-variable-selection-then-using-logit][Using LASSO for variable selection, then using Logit]]
- dependent variable is categorical
- subtypes
  - binary
    - See [[*Statistical Computing][R glm function]]
    - Takes odds of event happening for levels of each IV
    - Logarithm of ratio of those odds is continuous, transformed version of dependent variable
    - Logit of successes is fit to predictors with conventional linear regression
    - Exponential (inverse of log) converts linear regression result back to odds
  - multinomial
  - ordinal
- scaling
  - https://stats.stackexchange.com/questions/290958/logistic-regression-and-scaling-of-features/290960
- stats Logistic regression
- [[https://www.ibm.com/support/knowledgecenter/en/SSLVMB_21.0.0/com.ibm.spss.statistics.help/logistic_regression_methods.htm][IBM: Logistic Regression Variable Selection Methods]]
- cite:bursac2008
- [[https://www.ibm.com/support/knowledgecenter/en/SSLVMB_24.0.0/spss/regression/idh_lreg.html][IBM: Logistic regression]]
- https://statistics.laerd.com/spss-tutorials/binomial-logistic-regression-using-spss-statistics.php
- [[https://www.hackerearth.com/practice/machine-learning/machine-learning-algorithms/logistic-regression-analysis-r/tutorial/][Practical Guide to Logistic Regression Analysis in R]]
- [[https://stackoverflow.com/questions/39550118/cross-validation-function-for-logistic-regression-in-r][stack: cross validation with caret]]
- https://www.r-bloggers.com/evaluating-logistic-regression-models/
- https://www.staff.ncl.ac.uk/mike.cox/III/spss10.pdf
- http://www.restore.ac.uk/srme/www/fac/soc/wie/research-new/srme/modules/mod4/15/index.html
- [[https://hackernoon.com/practical-machine-learning-ridge-regression-vs-lasso-a00326371ece][Practical machine learning: Ridge Regression vs. Lasso]]
- [[http://thestatsgeek.com/2014/05/05/area-under-the-roc-curve-assessing-discrimination-in-logistic-regression/][Area under the ROC curve - assessing discrimination in logistic regression]]
- https://rcompanion.org/rcompanion/e_07.html
- http://www.utstat.toronto.edu/~brunner/oldclass/appliedf11/handouts/2101f11StepwiseLogisticR.pdf
- https://www.r-bloggers.com/evaluating-logistic-regression-models/
- https://www.quora.com/Should-input-data-to-logistic-regression-be-normalized
- http://www.simafore.com/blog/bid/99443/Understand-3-critical-steps-in-developing-logistic-regression-models
- https://www.r-bloggers.com/predicting-creditability-using-logistic-regression-in-r-cross-validating-the-classifier-part-2-2/

**** Method comparisons
:PROPERTIES:
:ID:       56a2d711-20cf-4b87-b414-6823f33a2e28
:END:
  - cite:yoo2013
  - [[https://datascience.stackexchange.com/questions/6048/decision-tree-or-logistic-regression][stack: Decision tree or logistic regression?]]
  - [[https://discuss.analyticsvidhya.com/t/what-is-the-difference-between-regression-and-random-forest-where-is-random-forest-more-effective/10095][What is the difference between regression and random forest.? where is random forest more effective?]]
  - [[https://www.edvancer.in/logistic-regression-vs-decision-trees-vs-svm-part2/][Logistic Regression vs Decision Trees vs SVM: Part II]]
  - [[https://www.quora.com/What-are-the-advantages-of-different-classification-algorithms][What are the advantages of different classification algorithms?]]
  - [[https://blog.bigml.com/2016/09/28/logistic-regression-versus-decision-trees/][Logistic Regression versus Decision Trees]]
  - - https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3686280/
  - https://cs.stackexchange.com/questions/10392/using-the-appropriate-machine-learning-algorithm
  - comparisons of random forest and binary logistic
    - ROC AUC http://thestatsgeek.com/2014/05/05/area-under-the-roc-curve-assessing-discrimination-in-logistic-regression/
    - https://www.google.com/search?q=binary+logistic+regression+random+forest&oq=binary+logistic+regression+random+forest&aqs=chrome..69i57.7601j0j9&sourceid=chrome&ie=UTF-8
  - CHECK ZOTERO https://arxiv.org/pdf/0804.0650.pdf
  - - https://www.edvancer.in/logistic-regression-vs-decision-trees-vs-svm-part1/
  - https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3686280/
*** visualization - see table 1 in [[#liu2019a][liu2019a]]
:PROPERTIES:
:ID:       b364b310-aaf2-4ebd-8e83-3a98f1ff06ce
:END:
  - viSNA/tSNE
  - UMAP
  - PhenoGraph
  - X-shift
  - SPADE
  - CITRUS
  - FlowSOM
*** applications
:PROPERTIES:
:ID:       48e68cb6-e455-4765-b967-e84727e07a6a
:END:
  - https://minimaxir.com/2019/09/howto-gpt2/
  - Large patient datasets
    - - http://www.sciencedirect.com/science/article/pii/S1521689608000839
  - computer vision
    - https://aws.amazon.com/rekognition/
  - cite:hume2017
  - https://adeshpande3.github.io/
  - https://www.google.com/search?q=super+mario+genetic+algorithm
*** ideas
:PROPERTIES:
:ID:       b0e0ccec-3083-41e4-a9b9-fafcee1788f9
:END:
  - DRAFT Machine learning workflow
    - Prepare data
      - Feature engineering- Calculate derived variables
      - Eliminate variables from
        - Unique identifiers
    - Initial testing- exploratory prediction honing
** Public configuration files
*** Ubuntu
#+begin_src bash
sudo apt-install python3-pip
#+end_src
#+begin_src bash :results replace
xdg-mime default okularApplication_pdf.desktop application/pdf
xdg-mime default okular.desktop image/pdf
xdg-mime query default application/pdf
xdg-mime query default image/pdf
update-desktop-database ~/.local/share/applications
xdg-user-dirs-update


#+end_src

#+name: symlink_to_emacsd
| ${HOME}/repos/basecamp/emacs/public_yasnippets |
| ${HOME}/repos/basecamp/emacs/init.el           |
| ${HOME}/repos/basecamp/emacs/public_config.el  |

#+begin_src emacs-lisp
(export-org-table-by-name-to-csv "~/repos/basecamp/basecamp.org"
                                 "symlink_to_emacsd"
                                 "~/repos/basecamp/emacs/symlink_to_emacsd.csv")

#+end_src

#+begin_src bash
#!/bin/bash

csv_file="${HOME}/repos/basecamp/emacs/symlink_to_emacsd.csv"
emacs_dir="${HOME}/.emacs.d/"

while IFS= read -r path; do
    # Expand variables in the path
    eval expanded_path="$path"

    if [ -d "$expanded_path" ] || [ -f "$expanded_path" ]; then
        ln -sf "$expanded_path" "$emacs_dir"
    else
        echo "Path does not exist: $expanded_path"
    fi
done < "$csv_file"
#+end_src

*** Okular configuration
:PROPERTIES:
:header-args:bash: :tangle ~/.config/okularrc
:END:
[[file:~/.config/okulararrc]]
#+begin_src bash
[MainWindow]
State=@ByteArray(...)  # Preserve other window state settings here

[General]
ShowMenubar=true
ShowSidebar=false

#+end_src

** Computers, Computer Science, and Information Technology           :career:
:PROPERTIES:
:ID:       A91BF233-F14E-4E91-A1E9-B39802A9ED2D
:CREATED:  [2019-07-03 Wed 08:13]
:END:
*** Software
:PROPERTIES:
:ID:       9E19E626-9D6C-4296-BEDB-80033A846CF4
:END:
**** Mermaid
- Limitations
  - SVG export fucked up
    - https://github.com/mermaid-js/mermaid/issues/2102
#+begin_src bash
sudo npm install -g @mermaid-js/mermaid-cli

npx puppeteer browsers install chrome

#+end_src

[[id:32dc9158-01f6-4303-b4eb-3901fe98f8d8][Declare Babel languages]]

#+begin_src emacs-lisp
M-x package-install RET ob-mermaid RET
#+end_src

https://github.com/mermaid-js/mermaid-cli/issues/588

https://jojozhuang.github.io/tutorial/mermaid-cheat-sheet/

#+BEGIN_SRC mermaid :file /tmp/output.png :tangle /tmp/test.mmd
%%{init: {'theme': 'base', 'themeVariables': { 'primaryColor': '#ffffff', 'edgeLabelBackground':'#ffffff', 'tertiaryColor': '#ffffff'}}}%%
flowchart TD
  A[Hard e2dge] --> B(Round edge)
  B --> C{Decision}
  C -->|Yes| D[Result 1]
  C -->|No| E[Result 2]
#+END_SRC

#+RESULTS:
[[file:/tmp/output.png]]

#+begin_src emacs-lisp
(use-package exec-path-from-shell
  :ensure t
  :config
  (exec-path-from-shell-initialize))

#+end_src
#+begin_src emacs-lisp
(setenv "PATH" (concat (getenv "PATH") ":/home/jeszyman/.nvm/versions/node/v20.18.0/bin"))
(add-to-list 'exec-path "/home/jeszyman/.nvm/versions/node/v20.18.0/bin")

#+end_src

#+begin_src emacs-lisp
(defun org-babel-execute:mermaid (body params)
  (let* ((out-file (or (cdr (assoc :file params))
                       (error "mermaid requires a \":file\" header argument")))
         (theme (cdr (assoc :theme params)))
         (width (cdr (assoc :width params)))
         (height (cdr (assoc :height params)))
         (background-color (cdr (assoc :background-color params)))
         (mermaid-config-file (cdr (assoc :mermaid-config-file params)))
         (css-file (cdr (assoc :css-file params)))
         (scale (cdr (assoc :scale params)))
         (pdf-fit ;; (cdr (assoc :pdf-fit params))
          t)
         (quiet (cdr (assoc :quiet params)))
         (puppeteer-config-file (cdr (assoc :puppeteer-config-file params)))
         (temp-file (org-babel-temp-file "mermaid-"))
         (mmdc (or ob-mermaid-cli-path
                   (executable-find "mmdc")
                   (error "`ob-mermaid-cli-path' is not set and mmdc is not in `exec-path'")))
         (cmd (concat (shell-quote-argument (expand-file-name mmdc))
                      " --input " (org-babel-process-file-name temp-file)
                      " --output " (org-babel-process-file-name out-file)
                      (when theme (concat " --theme " theme))
                      (when width (concat " --width " (format "%s" width)))
                      (when height (concat " --height " (format "%s" height)))
                      (when background-color (concat " --backgroundColor " background-color))
                      (when mermaid-config-file (concat " --configFile " (org-babel-process-file-name mermaid-config-file)))
                      (when css-file (concat " --cssFile " (org-babel-process-file-name css-file)))
                      (when scale (concat " --scale " (format "%s" scale)))
                      (when pdf-fit " --pdfFit ")
                      (when quiet " --quiet ")
                      (when puppeteer-config-file (concat " --puppeteerConfigFile " (org-babel-process-file-name puppeteer-config-file))))))
    (unless (file-executable-p mmdc)
      ;; cannot happen with `executable-find', so we complain about
      ;; `ob-mermaid-cli-path'
      (error "Cannot find or execute %s, please check `ob-mermaid-cli-path'" mmdc))
    (with-temp-file temp-file (insert body))
    (message "%s" cmd)
    (org-babel-eval cmd "")
    nil))

#+end_src

**** ChatGTP
- https://www.reddit.com/r/ChatGPT/comments/1h1gx8k/how_many_custom_gpts_do_you_have/
- https://www.reddit.com/r/ChatGPT/comments/1gzgtgn/what_cool_thing_you_can_do_with_ai_that_nobody/
- https://www.reddit.com/r/vim/comments/13we2mq/vimium_chatgpt/
- https://www.reddit.com/r/ChatGPT/comments/1g3hz9i/whats_one_chatgpt_tip_you_wish_youd_known_sooner/

https://www.reddit.com/r/ChatGPT/comments/1g08jca/how_do_get_it_to_stop_the_meaningless_blather/

**** Anki
:PROPERTIES:
:ID:       0b25f799-7576-48d1-956d-778598ed5de5
:END:
#+begin_src bash
tar xaf Downloads/anki-2XXX-linux-qt6.tar.zst
cd anki-2XXX-linux-qt6
sudo ./install.sh

#+end_src

**** [[id:a49abc44-8e71-4a1a-bd35-a77849427c94][Emacs]]
***** Org-mode literate programming for devops                     :tutorial:
:PROPERTIES:
:header-args: :results replace :session testsesh :cache no
:ID:       4e160919-3df9-4a0e-afb0-66d2f1828fd4
:END:
- https://www.youtube.com/watch?v=dljNabciEGg&ab_channel=HowardAbrams
- [[elisp:(switch-to-buffer "testsesh")][Go to testsesh buffer]]
- you can line-by-line to the session or enter commands directly there
- Results block moved
  #+RESULTS: thedate
  : Thu Nov  9 09:05:42 CST 2023

#+name: thedate
#+begin_src bash :results replace
date
#+end_src


#+name: makecsv
#+begin_src bash :results table
rm -rf /tmp/test.csv
echo -e "title,author\nthe sun also rises,hemmingway\nwaldon,thoreau" > /tmp/test.csv
cat /tmp/test.csv
#+end_src

#+RESULTS: makecsv
| title              | author     |
| the sun also rises | hemmingway |
| waldon             | thoreau    |


#+begin_src bash :var tabcell=makecsv[1,1] :post column1(data=*this*)
echo $tabcell
#+end_src

#+RESULTS:
: Hemmingway

#+name: column1
#+begin_src emacs-lisp :var data="" :results value
(capitalize data)
#+end_src


#+begin_src bash :dir /ssh:localhost
hostname --long
#+end_src

#+RESULTS:
: jeszyman-work

- piped link for sudo files [[/ssh:localhost|sudo:localhost:/etc/group]]
**** Flat
:PROPERTIES:
:ID:       9d48f3fb-3d70-4844-aeca-4f22d2f38ccb
:END:
- https://unixpapa.com/js/testkey.html
***** Advanced package tool (APT)
:PROPERTIES:
:ID:       f36a370c-c4ba-4ddc-81b7-79c12b601255
:END:

sudo nano /etc/apt/sources.list
[[/sudo:root@localhost:/etc/apt/sources.list][Edit sources.list as root]]

sudo -E bash -c 'export DEBIAN_FRONTEND=noninteractive && yes "" | apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" dist-upgrade > /tmp/log.log 2>&1; if grep -q "0 upgraded, 0 newly installed" /tmp/log.log; then echo "System is already up to date."; else tail -f /tmp/log.log; fi'
https://chatgpt.com/c/670c0b1f-11a4-8005-baa2-71f9d595d568
- processes
  - https://askubuntu.com/questions/187888/what-is-the-correct-way-to-completely-remove-an-application
  - install deb: sudo apt install <.DEB>
***** Powerpoint online
:PROPERTIES:
:ID:       8ff75d66-11b7-4e26-81f4-32e761c1e054
:END:
- https://www.reddit.com/r/datascience/comments/17hlvki/how_to_get_better_at_powerpoint/
- there are no gridlines in  [[https://www.google.com/search?q=powerpoint+online+make+guidelines][google:powerpoint online make guidelines]] [2023-01-27 Fri]

***** box
:PROPERTIES:
:ID:       4796824c-5495-4928-8b4f-cab4df0e4ffd
:END:
  - https://community.box.com/t5/Community/ct-p/English
  - [[https://www.youtube.com/channel/UClVkSYJyS4XTpzukZn1zm7w][box youtube]]
  - wustl box parameters
    - 15 gb per file
    - unlimited storage
  - box
    - https://community.box.com/t5/Community/ct-p/English
    - [[https://www.youtube.com/channel/UClVkSYJyS4XTpzukZn1zm7w][box youtube]]
    - wustl box parameters
      - 15 gb per file
      - unlimited storage
***** Brave browser
:PROPERTIES:
:ID:       de923ff0-9149-4726-864c-850adc1de8a2
:END:
- https://www.reddit.com/r/brave_browser/comments/irf5xc/what_are_the_default_fonts_in_brave_custom_is_not/
- [[https://www.google.com/search?q=brave+hide+bookmarks+bar][google:brave hide bookmarks bar]]
- [[https://www.google.com/search?q=open+chrome+to+specific+page+from+command+line][google:open chrome to specific page from command line]]
- https://community.brave.com/t/how-to-block-specific-websites/55961/8
***** byzanz
:PROPERTIES:
:ID:       65e67524-2812-482f-8d06-58d8aa3bce6d
:END:
https://askubuntu.com/questions/55709/how-to-select-display-to-record-in-recordmydesktop
***** Cisco AnyConect
:PROPERTIES:
:ID:       a743e60c-f1ac-4d10-b000-d3cbd0997f6d
:END:
  - [[https://superuser.com/questions/932650/cisco-anyconnect-secure-mobility-client-multiple-profiles][Cisco AnyConnect Secure Mobility Client - Multiple Profiles]]
  - my profile at /opt/cisco/anyconnect/profile/test.xml
- https://www.google.com/search?q=launch+cisco+anyconnect+command+line&oq=launch+anyconnect+&aqs=chrome.3.69i57j0l5.7868j0j4&client=ubuntu&sourceid=chrome&ie=UTF-8

***** cmake
:PROPERTIES:
:ID:       437bd41e-f742-4769-bcf0-36e863857550
:END:
#+begin_src bash
# For Ubuntu Bionic Beaver (18.04):
# https://stackoverflow.com/questions/49859457/how-to-reinstall-the-latest-cmake-version
sudo apt-get update
sudo apt-get install apt-transport-https ca-certificates gnupg \
                         software-properties-common wget

wget -qO - https://apt.kitware.com/keys/kitware-archive-latest.asc |
    sudo apt-key add -

sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main'
sudo apt-get update
sudo apt-get install cmake
y
cmake -version
#+end_src

***** Conda and Miniconda                                          :software:
:PROPERTIES:
:ID:       b16d0202-8d35-472b-b538-87a7d6a6cef7
:END:
****** Ansible
******* Conda install and provisioning playbook
:properties:
:header-args:yaml: :tangle ./ansible/playbooks/conda-playbook.yaml :mkdirp yes
:ID:       7ab1917d-8962-4527-a4ac-5cdf7352f7a3
:end:
- [[file:ansible/playbooks/conda-playbook.yaml]]
******** Preamble
#+begin_src yaml
---
- name: Install Conda 
  hosts: localhost
  tasks:
#+end_src
******** Install
#+begin_src yaml
    - name: Check if Miniconda is installed by searching for 'conda' in PATH
      shell: "command -v conda"
      register: conda_check
      ignore_errors: yes
      changed_when: false
      failed_when: false
      
    - name: Set Miniconda installation needed fact
      set_fact:
        miniconda_needed: "{{ conda_check.rc ==127 }}"

    - name: Verify if Miniconda installation is needed
      debug:
        msg: "Miniconda installation needed: {{ miniconda_needed }}"        
        
    - name: Debug conda_check result
      debug:
        var: conda_check.rc
  
    - name: Download Miniconda installer if not installed
      get_url:
        url: https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
        dest: /tmp/miniconda.sh
        mode: '0755'
      when: miniconda_needed

    - name: Debug user's home directory
      debug:
        msg: "User's home directory is {{ ansible_user_dir }},Running as user: {{ ansible_env.USER }}, home: {{ ansible_env.HOME }}"
      
    - name: Install Miniconda if not installed
      command: "bash /tmp/miniconda.sh -u -b -p {{ ansible_env.HOME }}/miniconda"
      args:
        creates: "{{ ansible_env.HOME }}/miniconda/bin/conda"        
      when: miniconda_needed
      
#+end_src
******** Settings
#+begin_src yaml
    - name: Check if Conda is already initialized
      shell: "grep -q '>>> conda initialize >>>' {{ ansible_env.HOME }}/.bashrc"
      register: miniconda_initialized
      ignore_errors: yes
      changed_when: false

    - name: Initialize Miniconda for bash
      shell: "{{ ansible_env.HOME }}/miniconda/bin/conda init bash"
      args:
        executable: /bin/bash
      when: miniconda_initialized.rc !=0

    - name: Prevent automatic activation of the base environment in conda
      shell: "{{ ansible_env.HOME }}/miniconda/bin/conda config --set auto_activate_base false"
      args:
        executable: /bin/bash

    - name: Update conda
      shell: "{{ ansible_env.HOME }}/miniconda/bin/conda update conda --yes"
      args:
        executable: /bin/bash
      environment:
        PATH: "{{ ansible_env.HOME }}/miniconda/bin:{{ ansible_env.PATH }}"
      
#+end_src
******** Add mamba
#+begin_src yaml
    - name: Install Mamba using Conda
      shell: "{{ ansible_env.HOME }}/miniconda/bin/conda install -y mamba -c conda-forge"
      args:
        executable: /bin/bash
      environment:
        PATH: "{{ ansible_env.HOME }}/miniconda/bin:{{ ansible_env.PATH }}"

#+end_src

******** Ideas
:properties:
:header-args:yaml: :tangle no
:end:
#+begin_src yaml
    - name: Ensure Conda is at the correct revision
      shell: conda install --rev 0
      environment:
        PATH: "/opt/miniconda/bin:{{ ansible_env.PATH }}"
      register: conda_rev
      changed_when: "'nothing to install' not in conda_rev.stdout"
      when: miniconda_installation.changed
#+end_src


********* Test
#+begin_src yaml

    - name: Ensure conda-libmamba-solver is installed
      shell: conda list conda-libmamba-solver
      environment:
        PATH: "/opt/miniconda3/bin:{{ ansible_env.PATH }}"
      register: libmamba_check
      failed_when: libmamba_check.rc != 0
      changed_when: false

    - name: Install conda-libmamba-solver if not present
      shell: conda install -n base conda-libmamba-solver
      environment:
        PATH: "/opt/miniconda3/bin:{{ ansible_env.PATH }}"
      when: libmamba_check.stdout.find('conda-libmamba-solver') == -1

    - name: Set Conda solver to libmamba
      shell: conda config --set solver libmamba
      environment:
        PATH: "/opt/miniconda3/bin:{{ ansible_env.PATH }}"
      register: solver_config
      changed_when: "'Setting solver' in solver_config.stdout"

#+end_src
********* Test
#+begin_src yaml
    - name: Create 'condagroup' group
      group:
        name: condagroup
        state: present

    - name: Add existing user to 'condagroup'
      user:
        name: jeszyman
        groups: condagroup
        append: yes

    - name: Change group ownership of /opt/miniconda3
      file:
        path: /opt/miniconda3
        state: directory
        recurse: yes
        group: condagroup
#+end_src
********* Tasks
#+begin_src yaml


      - name: Add conda-forge channel
        shell: "/opt/miniconda3/bin/conda config --add channels conda-forge"
#+end_src

********* Update install
#+begin_src yaml
    - name: Update Conda
      shell: conda update -y conda
      environment:
        PATH: "/opt/miniconda3/bin:{{ ansible_env.PATH }}"
      register: conda_update
      changed_when: "'Nothing to do' not in conda_update.stdout"
#+end_src
********* Add mamba
#+begin_src yaml
    - name: Ensure mamba is installed
      shell: |
        if ! conda list | awk '{print $1}' | grep -q '^mamba$'; then
        echo "Installing mamba..."
        conda install -c conda-forge mamba -y;
        else
        echo "Mamba is already installed.";
        fi
      environment:
        PATH: "/opt/miniconda3/bin:{{ ansible_env.PATH }}"
      register: mamba_check
      changed_when: "'Installing mamba...' in mamba_check.stdout"
#+end_src
********* Path variable
#+begin_src yaml
    - name: Add Conda to user-specific PATH
      lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        line: 'export PATH="{{ ansible_env.HOME }}/miniconda/bin:$PATH"'
        state: present
#+end_src

****** Processes
:PROPERTIES:
:ID:       9ea589de-3ba6-4ddc-a5e4-6ffbddd70e15
:END:
******* [[id:7ab1917d-8962-4527-a4ac-5cdf7352f7a3][Install]] 
:PROPERTIES:
:ID:       be60258f-2023-42c4-bc3e-86d2095c4199
:END:
******* Conda system-wide install
#+begin_src bash
getent group conda

sudo groupadd conda
sudo usermod -aG conda $(whoami)
sudo chown -R :conda /opt/miniconda3
sudo chmod -R g+rwx /opt/miniconda3
sudo chmod -R g+s /opt/miniconda3
#+end_src
******* Uninstall
- https://docs.anaconda.com/miniconda/uninstall/
******* Add channel
:PROPERTIES:
:ID:       422245b4-4225-4ecf-a764-1e74be0d5ac3
:END:
******** https://stackoverflow.com/questions/62497037/why-would-one-add-a-channel-to-a-conda-environment
:PROPERTIES:
:ID:       75b5626e-ecea-43b9-95df-ac128d4c655b
:END:
******* Install package
:PROPERTIES:
:ID:       e0d71c15-6ebb-4771-a41f-1f87cd3a3ad4
:END:
- conda install --name <conda_env_name> -c <channel_name> <package_name>
******** https://www.google.com/search?q=conda+add+package
:PROPERTIES:
:ID:       815a83f7-2e06-4337-ae5c-e308c9ce3738
:END:
******* Create environment
:PROPERTIES:
:ID:       3b4ce7be-80fa-494c-909a-67d21904f09a
:END:
#+begin_src bash
  conda create -n test
  y

  conda install --name test pandas
  y
#+end_src
******** snakemake
:PROPERTIES:
:ID:       2639c5f7-6cce-4770-8339-1f5c62c6373b
:END:
#+begin_src bash
    conda activate base
    conda create -n snakemake
    conda install snakemake --name snakemake -c conda-forge
    conda install pandas --name snakemake -c conda-forge
    mamba install snakemake --name snakemake -c conda-forge

    conda activate base
    mamba create -c conda-forge -c bioconda -n snakemake snakemake
    mamba install pandas --name snakemake
    y
#+end_src
******* [[https://stackoverflow.com/questions/54429210/how-do-i-prevent-conda-from-activating-the-base-environment-by-default][Prevent default start in conda base]]
:PROPERTIES:
:ID:       4140e6fa-79fc-42ed-beac-ad3235c21593
:END:
#+begin_src shell
  conda config --set auto_activate_base false
#+end_src
******* [[https://www.google.com/search?q=conda+install+specific+version+of+package][google:conda install specific version of package]]
******* [[https://www.google.com/search?q=conda+install+multiple+versions+of+package][google:conda install multiple versions of package]]
:PROPERTIES:
:ID:       2211bbde-de2b-4f94-8a31-4ed1a6bab3b1
:END:
******* 0 Flat
:PROPERTIES:
:ID:       d9e04105-39ef-465c-9e91-fee12c86645b
:END:
******** Startup without base
******** Update conda env from github location yaml
:PROPERTIES:
:ID:       2fe724ad-3cd2-4598-aae2-38d468535fa7
:END:
- conda env update --name biotools --file https://raw.githubusercontent.com/jeszyman/basecamp/v1.0.0/basecamp_env.yaml
- mamba cannot update from urls, instead do something like
  curl -o /tmp/basecamp_env.yaml https://raw.githubusercontent.com/jeszyman/basecamp/v1.0.0/basecamp_env.yaml && mamba env update --name biotools --file /tmp/basecamp_env.yaml
******** Build environment from multiple yamls
:PROPERTIES:
:ID:       3da61576-d03d-4220-ac44-644e34590783
:END:

mamba env update -f <FILE> -n <NAME>

- https://stackoverflow.com/questions/48158137/conda-importing-one-environment-yml-into-another
- https://stackoverflow.com/questions/65668913/can-i-create-a-conda-environment-from-multiple-yaml-files
https://github.com/conda/conda/issues/5821
******** Inherit from another environment - can't be done https://stackoverflow.com/questions/54682742/inheritance-model-in-conda-environments
:PROPERTIES:
:ID:       3d11ace6-c487-4989-ad27-d5b5e6a25e4c
:END:
******** Miniconda install
:PROPERTIES:
:ID:       89e9b0a1-5157-46e6-9004-755136b291d1
:END:
#+begin_src bash
    cd /tmp

    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh

    sudo bash Miniconda3-latest-Linux-x86_64.sh

    yes

    /opt/miniconda3

    no

    sudo groupadd condagroup

    #add existing user
    #
    sudo usermod -a -G condagroup jeszyman

    #need reboot

    sudo chgrp -R condagroup /opt/miniconda3
    sudo chmod 770 -R /opt/miniconda3
#+end_src
******** Conda/mamba/mambaforge install
:PROPERTIES:
:ID:       9066090d-28df-4d7b-84a6-a3611bdc8386
:END:
#+begin_src bash
    cd ~/
    wget https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh

    sudo bash Mambaforge-Linux-x86_64.sh


    echo -e "\n"
    echo -e "\n"
    yes

    /opt/mambaforge

    yes

    #########1#########2#########3#########4#########5#########6#########7#########8
#+end_src
******** List package versions
:PROPERTIES:
:ID:       97a3db1a-9433-4a8c-b866-9a26dcecc2b6
:END:
https://stackoverflow.com/questions/43222407/how-to-list-package-versions-available-with-conda
******** Remove environment - conda env remove -n ENV_NAME
:PROPERTIES:
:ID:       3b2600e5-4198-4f05-a4dc-308a6096ea1c
:END:
****** Conda                                                       :cookbook:
:PROPERTIES:
:ID:       cfeaf875-745c-44a4-8a52-963433f2fff1
:header-args: :results replace
:END:
- Check available versions
  #+begin_src bash :results raw
conda search yq

#+end_src
- Remove a package from an environment
  #+begin_src bash
mamba install -c conda-forge -n breast -y yq 
conda activate breast
conda remove -y yq
#+end_src


****** [[id:fb5f258b-cf75-46d1-9196-adc80d1ff6ff][Functions]]
****** Documentation
:PROPERTIES:
:ID:       d7b6df05-8b2c-4442-a375-ace75031f55a
:END:
****** General
:PROPERTIES:
:ID:       6ff6e7ac-4818-46e9-94cb-e3952071e185
:END:
- - https://autobencoder.com/2020-08-24-conda-actions/
- https://docs.conda.io/projects/conda/en/4.6.0/_downloads/52a95608c49671267e40c689e0bc00ca/conda-cheatsheet.pdf

****** Reference
:PROPERTIES:
:ID:       5e752376-920f-4546-add9-8af72747387e
:END:
  - [[EA056C38-9DE6-47EE-A75B-0FCBAE62372B][YASnippets]]
****** Conda environment yamls
:PROPERTIES:
:ID:       6880d877-e477-491f-8125-58530fbbc7d8
:END:
******* Basecamp
:PROPERTIES:
:ID:       695ae304-441d-451a-8138-cf389af18e11
:END:
#+begin_src bash :tangle ./resources/conda/basecamp_env.yaml :mkdirp yes
name: basecamp
channels:
  - bioconda
  - conda-forge
  - dloewenstein

dependencies:

#################
###   Conda   ###
#################
  - snakemake

#############
###   R   ###
#############
  - r-tidyverse
  - r-caret
  - r-circlize
  - r-ComplexUpset
  - r-cowplot
  - r-cutpointr
  - r-data.table
  - r-devtools
  - r-elrm
  - r-FSA
  - r-ggplot2
  - r-ggpval
  - r-ggpubr
  - r-ggsci
  - r-ggvenn
  - r-ggrepel
  - r-ggsignif
  - r-git2r
  - r-gridExtra
  - r-hexbin
  - r-Hmisc
  - r-kableExtra
  - r-naniar
  - r-optparse
  - r-pheatmap
  - r-plyr
  - r-RColorBrewer
  - r-rlang
  - r-rstatix
  - r-scales
  - r-statmod
  - r-stringr
  - r-tidyverse
  - r-UpSetR
  - r-viridis


#+end_src
****** Basecamp conda environment
:PROPERTIES:
:ID:       76a6e083-f569-42a9-b551-4b9ccc770834
:header-args:yaml: :tangle ./basecamp_env.yaml :comments no
:END:
- [[file:basecamp_env.yaml][yaml]]
******* Preamble and channels
:PROPERTIES:
:ID:       abb2816b-257f-4af7-803d-33ae295919c1
:END:
#+begin_src yaml :use-heading yes :comments no
name: basecamp
# Jeff Szymanski's basecamp conda environment.

channels:
  - conda-forge
  - bioconda

# Adding 'defaults' to channel list implicitly is deprecated and will be removed in 25.3.

dependencies:
#+end_src
******* Python
:PROPERTIES:
:ID:       99c189db-c124-4f8e-923e-99dd2e67a4b8
:END:
#+begin_src yaml
# ---   Python   --- #
# ------------------ #

  - beautifulsoup4=4                    # Pulls data out of HTML and XML files #
  - black=24                            # Uncompromising Python code formatter #
  - python-docx=1.1           # Create and modify MS Word docx files in python #
  - intervaltree=3.1             # Efficient storage and querying of intervals #
  - numpy=1.26           # Bash package needed for scientific computing #
  - openpyxl=3.0                               # Reads excel files into python #
  - pandas=2.1                                     # Data structures in python #
  - parallel     # GNU parallel is a shell tool for executing jobs in parallel #
  - pyarrow=15.0                       # Provides bindings to the Apache Arrow #
  - python=3.10
  - scikit-learn=1.3                         # Python machine learning modules #
  - snakemake                              # Python workflow management system #
  - statsmodels                        # A stats package with causal inference #

#+end_src

******* R
:PROPERTIES:
:ID:       4783cca8-92ea-4053-b3c8-7d79862e3939
:END:
#+begin_src yaml
# ---   R   --- #
# ------------- #

  - bioconductor-complexheatmap
  - r-colorramps                                  # Builds gradient color maps #
  - r-devtools                                   # R package development tools #
  - r-eulerr                           # Best area-proportional Euler diagrams #
  - r-ggextra                      # Has ggMarginal to add marginal histograms #
  - r-ggpattern                           # Custom ggplot2 geoms with patterns #
  - r-ggpubr                           # Functions for publication ready plots #
  - r-ggrepel                                # Text and label geoms that repel #
  - r-ggridges                                               # Ridgeline plots #
  - r-ggsci                   # Ggplot2 color palettes for scientific journals #
  - r-igraph                              # Network analysis and visualization #
  - r-kableextra       # Builds HTML or LaTeX tables knitr and magrittr piping #
  - r-lintr                                                     # Linting tool #
  - r-magick                # Bindings to ImageMagick image processing library #
  - r-multcomp          # Tests and confidence intervals for parametric models #
  - r-optparse                              # For command line options parsing #
  - r-patchwork                                      # Composes multiple plots #
  - r-pheatmap                                               # Simple heatmaps #
  - r-readxl                                         # Read Excel files into R #
  - r-rlang             # Toolbox for working with base types, core R features #
  - r-rstatix            # pipe-friendly framework for basic statistical tests #
  - r-svglite                                   # Provides svg graphics output #
  - r-tidyverse
  - r-rtsne  # t-distributed stochastic neighbor embedding dimension reduction #
  - r-upsetr       # Visualizations of intersecting sets using a matrix design #
  - r-writexl                                    # Export data frames to Excel #
  - r-yaml                    # Impliments libyaml YAML 1.1 parser and emitter #


#+end_src


***** D3
:PROPERTIES:
:ID:       0bc9f268-11b2-4925-ba51-40809ebccf11
:END:
https://www.freecodecamp.org/news/learn-data-visualization-in-this-free-17-hour-course/
- [[https://d3js.org/][D3 data driven documents]]
  - - [[https://www.reddit.com/r/dataisbeautiful/comments/72c06m/im_elijah_meeks_author_of_d3js_in_action_and/][reddit: Elijah Meeks, author of D3Js]]
  - http://vis.stanford.edu/protovis/ex/
  - - https://www.reddit.com/r/statistics/comments/2jon2b/anyone_knows_how_are_made_the_graphs_on/#ampf=undefined
  - https://old.reddit.com/r/orgmode/comments/jbl1ky/use_d3_js_and_graphviz_to_publish_git_dynamic/
***** Docker                                                       :software:
:PROPERTIES:
:ID:       D2FAA88D-70CC-4450-BBB3-8A446CB43AF3
:CREATED:  [2019-07-07 Sun 09:05]
:END:
****** Ansible install playbook
:PROPERTIES:
:ID:       e15a03de-c529-4229-b763-7df28213f1e0
:header-args:yaml: :tangle ./ansible/playbooks/docker-playbook.yaml
:END:
[[file:ansible/playbooks/docker-playbook.yaml]]
******* Preamble
#+begin_src yaml
---
- name: Docker Playbook
  hosts: all
  tasks:
#+end_src
******* Install block
******** Header
#+begin_src yaml
    - name: Perform sudo install tasks
      block:
#+end_src
******** APT install
#+begin_src yaml
        - name: Update package list
          apt:
            update_cache: yes

        - name: Install required packages
          apt:
            name:
              - apt-transport-https
              - ca-certificates
              - curl
              - software-properties-common
            state: present

        - name: Add Docker's official GPG key
          apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

        - name: Add Docker repository
          apt_repository:
            repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
            state: present

        - name: Update package list after adding Docker repo
          apt:
            update_cache: yes

        - name: Install Docker CE
          apt:
            name: docker-ce
            state: latest
        
#+end_src
******** Ensure systemctl service
#+begin_src yaml
        - name: Ensure Docker service is enabled and running
          systemd:
            name: docker
            enabled: yes
            state: started
#+end_src
******** Add current user
#+begin_src yaml
        - name: Add current user to the docker group
          user:
            name: "{{ ansible_user | default(ansible_env.USER) }}"
            groups: docker
            append: yes
#+end_src
******** Footer to allow sudo throughout the block 
#+begin_src yaml
      become: true
#+end_src
****** State check
#+begin_src python :tangle /tmp/test.py
import os
import subprocess

def run_command(command):
    """Run a shell command and return its output."""
    try:
        output = subprocess.check_output(command, stderr=subprocess.STDOUT, shell=True, text=True)
        return output.strip()
    except subprocess.CalledProcessError as e:
        return f"Error: {e.output.strip()}"

def check_docker_status():
    """Check Docker service status using systemctl."""
    print("=== Docker Service Status ===")
    print(run_command("systemctl status docker | grep -E 'Active|Loaded'"))

def list_docker_images():
    """List all available Docker images."""
    print("\n=== Available Docker Images ===")
    print(run_command("docker images --format 'table {{.Repository}}\t{{.Tag}}\t{{.Size}}'"))

def list_running_containers():
    """List all running Docker containers."""
    print("\n=== Running Docker Containers ===")
    containers = run_command("docker ps --format 'table {{.ID}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}'")
    if not containers.strip():
        print("No running containers.")
    else:
        print(containers)

def list_all_containers():
    """List all Docker containers (running and stopped)."""
    print("\n=== All Docker Containers ===")
    containers = run_command("docker ps -a --format 'table {{.ID}}\t{{.Image}}\t{{.Status}}'")
    if not containers.strip():
        print("No containers found.")
    else:
        print(containers)

def show_docker_disk_usage():
    """Show Docker disk usage."""
    print("\n=== Docker Disk Usage ===")
    print(run_command("docker system df"))

def check_docker_version():
    """Show Docker version."""
    print("\n=== Docker Version ===")
    print(run_command("docker --version"))

if __name__ == "__main__":
    print("Docker Resource Status Script\n")
    check_docker_status()
    list_docker_images()
    list_running_containers()
    list_all_containers()
    show_docker_disk_usage()
    check_docker_version()
#+end_src
****** [[*singularity][singularity]]
****** Local YAS
:PROPERTIES:
:ID:       b477cbfd-b5fe-4297-9429-584de1f21144
:END:
:LOGBOOK:
CLOCK: [2021-08-26 Thu 07:31]--[2021-08-26 Thu 08:01] =>  0:30
:END:
#+name: launch.docker.interactive
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/launch.docker.interactive :comments no
# -*- mode: snippet -*-
# key: launch.docker.interactive
# expand-env: ((yas-indent-line 'fixed))
# --
,#+begin_src bash :tangle ./src/launch_$2.sh
#!/bin/bash
#########1#########2#########3#########4#########5#########6#########7#########8
#
### Launch interactive settion for ${1:ACCOUNT}/${2:CONTAINER} ###
#

# Setup
set -euxo pipefail

# Commands
##
## If already in a docker environment, then exit
if [ -f /.dockerenv ]; then
 echo "shell already in docker, exiting"
 exit 1
fi

##
## Run
docker run \
       --env HOME=\${HOME} \
       --hostname \${HOSTNAME} \
       --interactive \
       --tty \
       --volume /home/:/home/ \
       --volume /tmp/:/tmp/ \
       --volume /mnt/:/mnt/ \
       --user $(id -u \${USER}) \
       $1/$2 \
       /bin/bash
,#+end_src
#+END_SRC
****** Local scripts
:PROPERTIES:
:ID:       b143c82e-98f3-4e97-98c9-17717b76f533
:END:
#+begin_src bash
#!/usr/bin/env bash
docker build \
       --file biotools_Dockerfile \
       --no-cache \
       --pull \
       --tag jeszyman/biotools \
       .

docker push jeszyman/biotools

singularity
#+end_src
****** Processes
:PROPERTIES:
:ID:       e209c427-c926-4a90-bbfe-38ee396db4be
:END:
- https://stackoverflow.com/questions/39433480/dockerfile-versioning-best-practice
- https://stackoverflow.com/questions/35594987/how-to-force-docker-for-a-clean-build-of-an-image
- per-env runs  
  #+begin_src bash
#########1#########2#########3#########4#########5#########6#########7#########8
# Interactive docker initialization
  docker_interactive() {
    repo="USER INPUT"
    read -p "repo name: " repo
    case $HOSTNAME in
        (radonc-cancerbio) docker run -it \
                                  --env HOME=${HOME} \
                                  --hostname ${HOSTNAME} \
                                  --user $(id -u ${USER}) \
                                  --volume /home/:/home/ \
                                  --volume /mnt/:/mnt/ \
                                  --volume /tmp/:/tmp/ \
                                  jeszyman/$repo \
                                  /bin/bash;;
        (jeszyman-*) docker run -it \
                            --env HOME=/home/jeszyman \
                            --hostname ${HOSTNAME} \
                            --user $(id -u ${USER}) \
                            --volume /home/:/home/ \
                            --volume /mnt/:/mnt/ \
                            --volume /tmp/:/tmp/ \
                            jeszyman/$repo \
                            /bin/bash;;
        (acl*) docker run -it \
                      -v /drive3/:/drive3/ \
                      -v /duo4/:/duo4/ \
                      -v /home/:/home/ \
                      -u $(id -u ${USER}) \
                      jeszyman/$repo \
                      /bin/bash;;
        (ACL*) docker run -it \
                      -v /home/:/home/ \
                      -v /duo4/:/duo4/ \
                      -u $(id -u ${USER}):$(id -g ${USER}) \
                      -h=${HOSTNAME} \
                      jeszyman/$repo \
                      /bin/bash;;
        (virtual-workstation*.gsc.wustl.edu) bsub -Is -q docker-interactive -a 'docker(jeszyman/'"$repo"')' /bin/bash;;
    esac
}
#

#+end_src
- https://medium.com/axon-technologies/installing-a-windows-virtual-machine-in-a-linux-docker-container-c78e4c3f9ba1
- [[https://www.google.com/search?q=docker+see+dockerfile+for+dockerhub][google:docker see dockerfile for dockerhub]]
- create singularity containers https://stackoverflow.com/questions/60314664/how-to-build-singularity-container-from-dockerfile
- https://stackoverflow.com/questions/38118791/can-t-delete-docker-image-with-dependent-child-images/50650745
- https://stackoverflow.com/questions/16296753/can-you-run-gui-applications-in-a-docker-container/50356450#50356450
- build image
  - user repos (like mine are / not : for FROM build command!!!
  - [[https://docs.docker.com/engine/reference/builder/#parser-directives][Dockerfile reference]]
  - [[https://docs.docker.com/develop/develop-images/dockerfile_best-practices/][Dockerfile best practices]]
    - [[https://hub.docker.com/search/?q=&type=image&image_filter=official][official images]]
  - [[file:~/data/Dockerfiles/]]
  - recommended dockerfiles
    - [[https://hub.docker.com/_/golang/]]
    - https://hub.docker.com/_/ruby/
    - https://hub.docker.com/_/perl/
    - https://hub.docker.com/_/hylang/
  - pull code into build from github https://stackoverflow.com/questions/52155128/how-write-dockerfile-to-properly-pull-code-from-my-github
  - https://stackoverflow.com/questions/39518377/docker-build-unable-to-fetch-archives
- push built image to Docker Hub
  - docker login
  - docker tag <IMAGE ID> jeszyman/<IMAGE NAME>
  - docker push jeszyman/<IMAGE NAME>
  - reference https://ropenscilabs.github.io/r-docker-tutorial/04-Dockerhub.html
  - connect to host
    - https://dev.to/bufferings/access-host-from-a-docker-container-4099
    - https://medium.com/@mccode/understanding-how-uid-and-gid-work-in-docker-containers-c37a01d01cf
- run
  - publish port to host- these are accessible with [[id:2e3a156d-3cdf-4995-9b61-b6a6a6f3a32c][tramp docker function]]
    #+begin_src bash :tangle no
docker run --rm -p 6379:6379 <CONTAINER>
#+end_src
    - p can also assign a local ip, e.g. docker run -p 127.0.0.2:42222:22 <CONTAINER>
  - as current user
    - declare user q/ -u <USER NAME>
    - https://www.google.com/search?q=docker+run+set+home+directory
  - w/ symlinks - mount both locations
    - https://www.google.com/search?q=docker+run+volume+symbolic+links
  - https://www.google.com/search?q=docker+run+mount+home+directory
  - in timezone with a wget     tzdata command in the dockerfile, then docker run -e "TZ=America/Chicago" -it jeszyman/dev
  - https://confluence.ris.wustl.edu/display/RSUM/Docker+Wrapper+Environment+Variables
- run with display- see https://bioconductor.org/help/docker/
******* write dockerfiles
:PROPERTIES:
:ID:       00e707bc-99c2-468b-ba96-9c95b44d5a3b
:END:
- To run installs of Rscripts, e.g. bioconductor method- https://github.com/Bioconductor/bioconductor_docker/blob/master/bioc_scripts/install.R
- https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1008316#sec021
- https://hub.docker.com/r/rocker/r-devel/dockerfile

******* Sysadmin
:PROPERTIES:
:ID:       ee6339e8-908a-44c5-8e61-747080341406
:END:
- install
  - [[https://docs.docker.com/install/linux/docker-ce/ubuntu/#prerequisites][install community edition through ubuntu]] https://docs.docker.com/install/linux/linux-postinstall/
    #+begin_src bash
sudo apt-get autoremove -y --purge docker-engine docker docker.io docker-ce
sudo rm -rf /var/lib/docker /etc/docker
sudo rm /etc/apparmor.d/docker
#sudo groupdel docker
sudo rm -rf /var/run/docker.sock

sudo apt-get update
sudo apt-get dist-upgrade

# Uninstall old versions
sudo apt-get remove docker docker-engine docker.io containerd runc

# Install using APT repo

## Setup dependencies
sudo apt-get update

sudo apt-get install \
     ca-certificates \
     curl \
     gnupg \
     lsb-release

## Add docker GPG key
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

## Setup repo
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

## Install Docker engine
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io

sudo docker run hello-world
#+end_src
- setup chown https://stackoverflow.com/questions/26500270/understanding-user-file-ownership-in-docker-how-to-avoid-changing-permissions-o
- regulate disk usage
  - images in /var/lib/docker/overlay2
  - docker system prune -a
- Host management
  - https://www.google.com/search?q=docker+cleanup
  - remove https://docs.docker.com/config/pruning/
****** Docker-related bash functions
:PROPERTIES:
:ID:       ecdf5e8f-88ce-4760-b48b-c75d4887b48a
:END:
  - build command examples
    #+name: docker_build
    #+begin_src bash :tangle no
cd ~/repos/biotools
docker build . --file Dockerfile --tag jeszyman/test
docker build . --file Dockerfile --tag jeszyman/biotools
#+end_src
    #+name: build-dockerfile
    #+begin_src bash
#NOTE: Cannot build for local machine while connected to VPN- apt can't install software
cd ~/repos/basecamp
test=~/repos/basecamp

docker build . --file Dockerfile --tag jeszyman/test
#+end_src
  - interactive launch by docker image name and current server location
    #+begin_src bash :tangle no

  docker_interactive() {
      if [ -f /.dockerenv ]; then
          echo "shell already in docker, exiting"
          exit 1
      else
          repo="USER INPUT"
          read -p "image name: " image
          case $HOSTNAME in
              (radonc-cancerbio) docker run -it \
                                        -v /media/:/media/ \
                                        -v /home/:/home/ \
                                        -u $(id -u ${USER}) \
                                        jeszyman/$image \
                                        /bin/bash;;
              (jeff-*) docker run -it \
                              -v /home/:/home/ \
                              -u $(id -u ${USER}) \
                              -e "USER=jeszyman" \
                              -e "HOME=/home/jeszyman" \
                              jeszyman/$image \
                              /bin/bash;;
              (jeszyman-*) docker run -it \
                                  -v /home/:/home/ \
                                  -u $(id -u ${USER}) \
                                  -e "USER=jeszyman" \
                                  -e "repo=/home/jeszyman/repos/mpnst" \
                                  -e "localdata=/home/jeszyman/data/career/washu/radonc/chaudhuri/mpnst" \
                                  jeszyman/$image \
                                  /bin/bash;;
              (acl*) docker run -it \
                            -v /drive3/:/drive3/ \
                            -v /duo4/:/duo4/ \
                            -v /mnt/:/mnt/ \
                            -v /home/:/home/ \
                            -u $(id -u ${USER}) \
                            -e "USER=jszymanski" \
                            -e "repo=/drive3/users/jszymanski/repos/mpnst" \
                            -e "localdata=/mnt/xt3/mpnst" \
                            jeszyman/$image \
                            /bin/bash;;
              (ACL*) docker run -it \
                            -v /home/:/home/ \
                            -v /duo4/:/duo4/ \
                            -u $(id -u ${USER}):$(id -g ${USER}) \
                            -e "USER=jszymanski" \
                            -e "repo=/drive3/users/jszymanski/repos/mpnst" \
                            -e "localdata=/mnt/xt3/mpnst" \
                            jeszyman/$image \
                            /bin/bash;;

            (jeszyman-*) docker run -it \
                                -v /home/:/home/ \
                                -u $(id -u ${USER}) \
                                -e "USER=jeszyman" \
                                -e "repo=$repo" \
                                -e "data=$data" \
                                jeszyman/$image \
                                /bin/bash;;
            (acl*) docker run -it \
                          -v /drive3/:/drive3/ \
                          -v /duo4/:/duo4/ \
                          -v /mnt/:/mnt/ \
                          -v /home/:/home/ \
                          -u $(id -u ${USER}) \
                          -e "USER=jszymanski" \
                          jeszyman/$image \
                          /bin/bash;;
            (ACL*) docker run -it \
                          -v /home/:/home/ \
                          -v /duo4/:/duo4/ \
                          -u $(id -u ${USER}):$(id -g ${USER}) \
                          -e "USER=jszymanski" \
                          jeszyman/$image \
                          /bin/bash;;
            (virtual-workstation*.gsc.wustl.edu) bsub -Is -q docker-interactive -a 'docker(jeszyman/'"$image"')' /bin/bash;;
        esac
    fi
}

##

#+end_src

- Interactive docker initialization
  #+name:
  #+begin_src bash :session *shell2* :tangle no
echo test
#+end_src
  #+name: interactive_docker_initalization
  #+begin_src bash :session *shell2* :tangle no
docker_interactive(){
    # Check for parameters, if empty then return usage
    if [ -z "$1" ] || [[ $1 == -h ]] || [[ $1 == --help ]]; then
        printf "\n docker_interactive
	\n Launches an interactive container with server-specific settings
	\n
        \n Last update December 17, 2020
              \n \$2 = VARIABLE 2
              \n "
    elif
    else
    fi
}


# Interactive docker initialization

docker_interactive() {
    repo="USER INPUT"
    read -p "repo name: " repo
    if [ -z "$repo" ] || [[ $repo == -h ]] || [[ $repo == --help ]]; then
    case $HOSTNAME in
        (radonc-cancerbio) docker run -it \
                                  -v /mnt/:/mnt/ \
                                  -v /home/:/home/ \
                            -u $(id -u ${USER}) \
                            jeszyman/$repo \
                            /bin/bash;;
        (jeszyman-*) docker run -it \
                            -v /home/:/home/ \
                            -u $(id -u ${USER}) \
                            jeszyman/$repo \
                            /bin/bash;;
        (acl*) docker run -it \
                      -v /drive3/:/drive3/ \
                      -v /duo4/:/duo4/ \
                      -v /home/:/home/ \
                      -u $(id -u ${USER}) \
                      jeszyman/$repo \
                      /bin/bash;;
        (ACL*) docker run -it \
                      -v /home/:/home/ \
                      -v /duo4/:/duo4/ \
                      -u $(id -u ${USER}):$(id -g ${USER}) \
                      -h=${HOSTNAME} \
                      jeszyman/$repo \
                      /bin/bash;;
        (virtual-workstation*.gsc.wustl.edu) bsub -Is -q docker-interactive -a 'docker(jeszyman/'"$repo"')' /bin/bash;;
    esac
}
#

#+end_src
  #+name:
  #+begin_src bash :tangle no
cd ~/repos/basecamp
docker build . --file Dockerfile --tag jeszyman/basecamp
docker push jeszyman/basecamp
cd
docker run jeszyman/test
#+end_src
****** [[id:14a1f321-73c7-4dbb-be33-f7377ae38cdd][LINK TO Research Infrastructure Services (RIS)]]
****** Platform
:PROPERTIES:
:ID:       c2748bca-6dd1-458c-b58c-4e1b00324cb8
:END:
- interfaces
  - https://github.com/JAremko/docker-emacs
  - https://github.com/Silex/docker.el
- emacs ess docker ssh
  - https://github.com/emacs-ess/ESS/issues/928
  - https://gtown-ds.netlify.app/2017/08/16/docker-emacs/
****** [[https://docs.docker.com/][documentation]]
:PROPERTIES:
:ID:       f7b90ca1-9031-44f0-9fe5-f93be64601f2
:END:
  - https://docs.docker.com/engine/faq/
  - https://docs.docker.com/get-started/
    - https://docs.docker.com/get-started/#images-and-containers
  - https://docs.docker.com/develop/develop-images/dockerfile_best-practices/
  - [[https://docs.docker.com/docker-for-mac/][Get started with Docker for Mac]]
  - [[https://docs.docker.com/storage/][storage]]
    - probably best not to use persistant data in containers / images
    - https://www.google.com/search?q=how+to+save+data+in+docker+image
      - https://docs.docker.com/storage/
  - [[https://docs.docker.com/get-started/][Get started]]
  - https://www.reddit.com/r/docker/comments/8s8n3o/heres_a_bunch_of_docker_best_practices_that_i/
  - https://tecadmin.net/tutorial/docker/docker-tutorials/
******* commands
:PROPERTIES:
:ID:       64925e52-24af-40e9-b5bd-50596c658ca0
:END:
  |-----------------------------+-----------------------------------|
  | function                    | command                           |
  |-----------------------------+-----------------------------------|
  | <35>                        | <35>                              |
  | build image from Dockerfile | docker image build --file <> .    |
  | list images                 | docker images                     |
  | find from docker hub        | docker search <NAME>              |
  | remove image                | docker rmi <IMAGE>                |
  | push to Docker Hub          | docker push <USER>/<IMAGE NAME>   |
  | get man file                | docker <COMMAND> --help           |
  | list running containers     | docker ps                         |
  | list all containers         | docker ps -a                      |
  | bash shell for container    | exec -it <container-id> bash:     |
  | get dockerfile from image   | docker history --no-trunc <IMAGE> |
  |                             |                                   |
  - stop
    - kill
    - docker commit
      - https://docs.docker.com/engine/reference/commandline/commit/
      - generally don't use for things like adding a new R package- better handled at the dockerfile level
    - run commands
      - -it interactive, terminal CLI
      - -p <host port>:<container port>
        - note that port will be the docker VM port, not host, so won't work directly at a 192 url
          - https://docs.docker.com/docker-for-mac/networking/#use-cases-and-workarounds
          - - https://forums.docker.com/t/using-localhost-for-to-access-running-container/3148/8
      - -d detach- opposite of -it
      - -v mount host directory
      - -rm=true remove container when done
      - e.g. sudo docker run --name=my-r-base --rm -ti rocker/r-base /bin/bash
        - will grab docker image specified from web
        - --name specifies image name
        - --rm removes container on exit
        - -ti: pseudodotty terminal
****** General reference
:PROPERTIES:
:ID:       69c4be02-d479-4228-8040-eaaef924436e
:END:
- https://pythonspeed.com/docker/
- https://www.freecodecamp.org/news/the-docker-handbook/
- https://stackoverflow.com/questions/29480099/whats-the-difference-between-docker-compose-vs-dockerfile
- cite:boettiger2015
- [[https://stackoverflow.com/questions/23735149/what-is-the-difference-between-a-docker-image-and-a-container][stack: difference b/w image and container]]
- [[https://hub.docker.com/?ref=login][Docker Hub]]
- Components
  - docker- is a service daemon
  - Dockerfile: defines image. Docker builds Docker image from Dockerfile
  - image: executable package with everything to run a piece of software
    - runs on any machine with Docker installed
    - prebuilt environments that tell container what to do
  - container: instance of an image, i.e. what image becomes in memory when executed. actually running and doing stuff
  - [[https://hub.docker.com/][docker hub]]
  - dockstore: links docker images with descriptors in common workflow language and/or wdl
    - https://www.youtube.com/watch?v=sInP-ByF9xU
    - https://dockstore.org/
- Docker does actually use a VM on windows and mac to generate a linux kernal https://benmarwick.github.io/UW-eScience-docker-for-reproducible-research/#7
- Container projects
  - Rocker
    - http://dirk.eddelbuettel.com/blog/2014/10/23/
    -
- [[http://training.play-with-docker.com/alacart/][Docker classroom]]
  - [[http://training.play-with-docker.com/helloworld/][Hello World]]
- https://github.com/LinuxAtDuke/Intro-To-Docker
- https://www.google.com/search?q=where+are+docker+images+stored
- [[https://dev.to/softchris/5-part-docker-series-beginner-to-master-3m1b][5 part Docker series, beginner to master]]
- [[https://stackoverflow.com/questions/49503061/prompting-for-username-password-with-git-clone-from-dockerfile-run-step][Prompting for username/password with git clone from Dockerfile run step]]
- https://medium.com/@tonistiigi/build-secrets-and-ssh-forwarding-in-docker-18-09-ae8161d066
- https://linuxacademy.com/blog/docker/6-years-of-docker-hands-on-docker-training/
- https://pyvideo.org/pycon-us-2013/the-future-of-linux-containers.html
- my images
  - jeszyman/dev, local, push to secure docker hub
- [[file:~/data/Dockerfiles/][my Dockerfiles]]
- docker compose
  - https://www.semanticscholar.org/paper/Using-Docker-Compose-for-the-Simple-Deployment-of-List/632c38a859b851b20c3988c773368991151fec33/figure/2
  - https://www.biorxiv.org/content/biorxiv/early/2017/12/26/239947.full.pdf
  - https://www.biostars.org/p/139326/
  - https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6042832/
- https://www.balena.io/blog/our-dockerfile-tips-tricks/
- compose
  - https://www.reddit.com/r/docker/comments/cwe2bt/a_handy_dockercompose_commands_and_examples/
- Docker on [[file:~/Box%20Sync/org/career.org::*McDonnell%20Genome%20Institute%20(MGI)][MGI Cluster]]
****** Ideas
:PROPERTIES:
:ID:       0b80b89d-120f-41ae-9564-457c4da7b3d7
:END:
- add multiple R versions
  - https://support.rstudio.com/hc/en-us/articles/215488098-Installing-multiple-versions-of-R
  - https://stackoverflow.com/questions/24019503/installing-multiple-versions-of-r
  - https://cran.r-project.org/bin/linux/ubuntu/
  - https://unix.stackexchange.com/questions/538915/installing-updating-r-3-6-on-ubuntu-18-04
- https://stackoverflow.com/questions/54412054/can-you-convert-build-a-docker-image-into-a-full-os-image
- https://duckduckgo.com/?q=docker+container+daemon&t=canonical&ia=web
- ideas
  - how to run over wusm vpn?
    - this d/n work https://medium.com/@faithfulanere/solved-docker-build-could-not-resolve-archive-ubuntu-com-apt-get-fails-to-install-anything-9ea4dfdcdcf2
  - auto builds and dockerfile in repo
    - https://docs.docker.com/docker-hub/builds/
    - https://stackoverflow.com/questions/27679740/how-to-add-dockerfile-to-a-docker-registry-page
  - https://www.google.com/search?q=docker+container+retain+command+history
- consider docker add to add scripts
- dockerize emacs gui https://github.com/JAremko/docker-emacs
- Dockerfile best practices ideas
  - include comment w/ build time
***** draw.io
:PROPERTIES:
:ID:       0efa3d3b-f6fd-49ed-8c23-f69d18f604b7
:END:
https://tomd.xyz/diagrams-as-code-drawio/
- Processes
  - https://www.google.com/search?q=draw.io+insert+image
- https://github.com/jgraph/drawio-desktop/releases/tag/v16.5.1
***** [[id:a49abc44-8e71-4a1a-bd35-a77849427c94][Emacs]]
:PROPERTIES:
:ID:       3a1ad27e-e105-4030-826a-8db18494859c
:END:
***** Excel for the web
:PROPERTIES:
:ID:       6f56bf85-5647-485f-9d2e-3d35b7f93cb5
:END:
- https://www.google.com/search?q=excel+web+lock+cells
- Access edit cell from keyboard F2
- new line in cell Alt
***** gimp
:PROPERTIES:
:ID:       9ecdf234-2e25-486f-926d-ee71a7179a96
:END:
- commands
  |----------+---------|
  | function | command |
  |----------+---------|
  | <35>     | <35>    |
  |          |         |
- processes
  - https://www.google.com/search?q=gimp+crop+image
  - https://www.google.com/search?q=gimp+convert+to+black+and+white
- standards and best practice
- documentation
- applications
- reference
  - [[file:~/.basecamp/emacs/public_yasnippets/org-mode/software]]
***** Git                                                            :career:
:PROPERTIES:
:ID:       E56ADCB0-F6DD-4D58-8B68-CEDF7DC176E6
:END:
****** Processes                                                  :hierarchy:
:PROPERTIES:
:ID:       101a3601-5b02-4506-812c-2d705c51cbe2
:END:
******* Branches
:PROPERTIES:
:ID:       0ef0b11a-41a3-4915-b858-2e3691db13ef
:END:
- [[id:e23d21ba-c964-4f88-a787-03673900cd76][clone specific branch]]
- [[id:c5c8f4e6-692a-44ca-b010-34824df09dcb][Push commits to another branch]]
- delete branch https://stackoverflow.com/questions/2003505/how-do-i-delete-a-git-branch-locally-and-remotely
- git branch
  - add and delete
    - -d <BRANCH NAME>
    - <BRANCH NAME>
- git checkout <BRANCH> switch branches
https://stackoverflow.com/questions/67699/how-to-clone-all-remote-branches-in-git
- [[*merge branch into master][merge branch into master]]
******* Clone
:PROPERTIES:
:ID:       c4b6f27e-1847-49bf-bbe9-821f26862c91
:END:
- [[id:e23d21ba-c964-4f88-a787-03673900cd76][clone specific branch]]
******* Config
- https://jvns.ca/blog/2024/02/16/popular-git-config-options/#commit-verbose-true
******* Commit
:PROPERTIES:
:ID:       2996d246-4abb-4b51-b38f-bcd24b501b1e
:END:
- https://dhwthompson.com/2019/my-favourite-git-commit
- https://www.google.com/search?q=git+see+which+files+are+not+added
- [[https://stackoverflow.com/questions/1125968/how-do-i-force-git-pull-to-overwrite-local-files][force overwrite]]
- [[https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/][resolve confilcts workflow]]
- File comparisons
  - https://doc.ubuntu-fr.org/meld
- git checkout -- undo last commit FOR A SPECIFIC FILE
- Changing within branch
  - git commit- add changes WITHIN branch- full repo (not just a file) within branch
  - git checkout -- undo last commit FOR A SPECIFIC FILE
******* Commit messages
:PROPERTIES:
:ID:       2e653656-5ca0-4889-b377-cd678ff8c00c
:END:
- https://semver.org/
- https://stackoverflow.com/questions/179123/how-to-modify-existing-unpushed-commit-messages
  - hooks
    - beautiful file size limit pre-commit hook
      - https://stackoverflow.com/questions/39576257/how-to-limit-file-size-on-commit
    - to test, simply run as bash script
  - gitignore
    - loading changes -
      - git rm -r --cached .
      - git add .
      - commit
    - https://stackoverflow.com/questions/25436312/gitignore-not-working/25436481
    - https://labs.consol.de/development/git/2017/02/22/gitignore.html
  - gitignore
    - https://stackoverflow.com/questions/25436312/gitignore-not-working/25436481
    - https://labs.consol.de/development/git/2017/02/22/gitignore.html
  - Hooks
    - file size limit hook
- https://stackoverflow.com/questions/29933349/how-can-i-make-git-commit-messages-divide-into-multiple-lines
- https://www.conventionalcommits.org/en/v1.0.0/#summary
- https://www.google.com/search?q=git+generate+chage+log
******* Tags (stable versions)
- https://chatgpt.com/c/6728d0dc-db08-8005-90ca-220ff0dccf67
******* Create and initialize
:PROPERTIES:
:ID:       44553d98-a094-4a2d-8c9d-b720778445a4
:END:
  - https://www.google.com/search?q=initialize+git+repo
  - git branch --set-upstream-to=origin/master master
#+begin_src bash
repo=/home/jeszyman/repos/mpnst-preprocessing
cd $repo

git init
git add -A
git commit -m "first commit"

git remote add origin git@github.com:jeszyman/mpnst-preprocessing.git
git branch -M master
git push -u origin master
#+end_src
******* Errors
:PROPERTIES:
:ID:       b2c3fcf9-18bb-47e8-a956-cc3b0ec7ab1a
:END:
- https://stackoverflow.com/questions/41309357/git-git-checkout-ours-still-showing-both-modified
- [[https://stackoverflow.com/questions/1125968/how-do-i-force-git-pull-to-overwrite-local-files][force overwrite]]

- [[id:a3515f1b-c8c6-4c0b-bb4d-737c3edc9886][Reverting]]
- [[https://stackoverflow.com/questions/927358/how-do-i-undo-the-most-recent-local-commits-in-git][undo]]
- https://www.google.com/search?q=git+Not+possible+to+fast-forward+aborting
- [[https://stackoverflow.com/questions/4254389/git-corrupt-loose-object/18238322#18238322][corrupt loose object]]
- [[https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/][resolve confilcts workflow]]
******** [[id:86366863-6e1f-450c-84c1-c773eea27287][Remove large files from github push]]
:PROPERTIES:
:ID:       f1c7b96a-9613-42f6-8045-86ae66cc2cf2
:END:
******* Git project management processes
:PROPERTIES:
:ID:       2f644750-29f2-4f28-9e69-a0eed72f2d79
:END:
- Project management, multiple git repos, multiple branches
  - https://stackoverflow.com/questions/816619/managing-many-git-repositories
  - https://softwareengineering.stackexchange.com/questions/206668/using-multiple-git-repositories-instead-of-a-single-one-containing-many-apps-fro
  - https://stackoverflow.com/questions/11852982/can-i-arrange-repositories-into-folders-on-github#:~:text=On%20GitHub%20itself%2C%20you%20cannot,a%20nested%20team%20organization%20structure.
  - https://stackoverflow.com/questions/28357350/two-git-repositories-share-common-code
  - https://stackoverflow.com/questions/21077493/how-to-use-submodules-publicly-but-symlinks-to-a-single-clone-locally
  - https://www.bitsnbites.eu/a-stable-mainline-branching-model-for-git/
- git merge- FIRST navigate to master, then git merge <BRANCH TO PULL>
- [[https://stackoverflow.com/questions/2116778/reduce-git-repository-size][reduce repo size]]
- https://www.reddit.com/r/git/comments/ukrhb1/versioning_changelogs_release_notes_squashing_and/
- https://www.google.com/search?q=git+make+stable+version+branch

******* Hooks
:PROPERTIES:
:ID:       fdcb89a5-8a2d-4d3e-8d7c-494a3df2aba6
:END:
- https://stackoverflow.com/questions/2050450/git-hooks-management
******* Pull
:PROPERTIES:
:ID:       6f6fa9c2-38d3-4f49-ac88-4da5df86a468
:END:
- https://www.google.com/search?q=git+not+possible+to+fast-forward+aborting
******* Removing
:PROPERTIES:
:ID:       9adafcab-2375-4f10-b1f6-331f722fbbb0
:END:
- Removing files
  - b/c file exceeds github file size limits:  https://thomas-cokelaer.info/blog/2018/02/git-how-to-remove-a-big-file-wrongly-committed/
  - https://help.github.com/en/articles/removing-files-from-a-repositorys-history
- Remove repository
  - https://www.google.com/search?q=git+remove+repository
  - [[https://stackoverflow.com/questions/4754152/how-do-i-remove-git-tracking-from-a-project/36945328][stack: remove git tracking]]
- removing files
  - b/c file exceeds github file size limits:  https://thomas-cokelaer.info/blog/2018/02/git-how-to-remove-a-big-file-wrongly-committed/
  - https://help.github.com/en/articles/removing-files-from-a-repositorys-history
- [[https://stackoverflow.com/questions/4754152/how-do-i-remove-git-tracking-from-a-project/36945328][stack: remove git tracking]]
******* Reverting
:PROPERTIES:
:ID:       a3515f1b-c8c6-4c0b-bb4d-737c3edc9886
:END:
  - reverting a specific file
    1. find the commit hash with =git log=
    2. revert with =git checkout <COMMIT HASH> -- <FILE>=
  - [[http://stackoverflow.com/questions/4114095/how-to-revert-git-repository-to-a-previous-commit][reverting to previous commit]]
  - [[https://stackoverflow.com/questions/338436/is-there-a-quick-git-command-to-see-an-old-version-of-a-file][stack: Is there a quick git command to see an old version of a file?]]
  - reverting
    - [[https://stackoverflow.com/questions/215718/how-can-i-reset-or-revert-a-file-to-a-specific-revision][reverting spcific files]]
    - https://stackoverflow.com/questions/927358/how-do-i-undo-the-most-recent-local-commits-in-git
  - https://www.google.com/search?q=git+restore+file+as+new+name
******* Search and view
:PROPERTIES:
:ID:       7853966f-6e62-4660-9abf-e7a8d8d1f7b9
:END:
- File comparisons
  - https://www.freecodecamp.org/news/git-diff-command/
  - https://doc.ubuntu-fr.org/meld
- [[https://stackoverflow.com/questions/338436/is-there-a-quick-git-command-to-see-an-old-version-of-a-file][stack: view previous version of a file]]
- https://stackoverflow.com/questions/7663451/view-a-specific-git-commit
- https://stackoverflow.com/questions/2364147/how-to-get-just-one-file-from-another-branch
- searching for deleted files https://www.google.com/search?q=git+search+deleted+files
  - https://stackoverflow.com/questions/7203515/how-to-find-a-deleted-file-in-the-project-commit-history
- searching within commits
  - https://stackoverflow.com/questions/2928584/how-to-grep-search-committed-code-in-the-git-history
- Searching commits
  - https://stackoverflow.com/questions/2928584/how-to-grep-search-committed-code-in-the-git-history
******* Staging (Add)
:PROPERTIES:
:ID:       34782e84-ac25-4504-912c-e3e4f5937e7e
:END:
  - git add 'stages' a file- makes it ready to add to repo
  - git reset unstages
  - [[https://stackoverflow.com/questions/2855140/recursively-add-files-by-pattern?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa][stack: Recursively add files by pattern]]
  - [[https://stackoverflow.com/questions/2855140/recursively-add-files-by-pattern?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa][stack: Recursively add files by pattern]]


******* Submodules
:PROPERTIES:
:ID:       efbec5da-95ee-4794-9c9d-108a66839a4c
:END:
- https://stackoverflow.com/questions/10054011/git-submodule-not-pulling-files-in-submodules
- [[id:9e07e34b-963a-451f-b064-d23ba65ef18b][Add a submodule to an existing repo]]
- Initialize git submodule update --recursive --init
- Pull
  -
  - https://stackoverflow.com/questions/5828324/update-git-submodule-to-latest-commit-on-origin
  - https://stackoverflow.com/questions/4611512/is-there-a-way-to-make-git-pull-automatically-update-submodules
  - push and pull submodules
    - 2nd answer https://stackoverflow.com/questions/1030169/easy-way-to-pull-latest-of-all-git-submodules
- Remove https://stackoverflow.com/questions/12898278/issue-with-adding-common-code-as-git-submodule-already-exists-in-the-index
- Commit
  - https://stackoverflow.com/questions/5542910/how-do-i-commit-changes-in-a-git-submodule
- Push
  - https://stackoverflow.com/questions/5814319/git-submodule-push
- Remove
- General reference
  - https://medium.com/@porteneuve/mastering-git-submodules-34c65e940407
  - https://medium.com/faun/git-submodule-cheatsheet-29a3bfe443c3
  - to use all included functions, clone submodules - https://stackoverflow.com/questions/3796927/how-to-git-clone-including-submodules
  - https://stackoverflow.com/questions/19728933/continue-looping-over-submodules-with-the-git-submodule-foreach-command-after
  - https://stackoverflow.com/questions/21077493/how-to-use-submodules-publicly-but-symlinks-to-a-single-clone-locally
  - https://www.google.com/search?q=private+git+submodules
    - https://stackoverflow.com/questions/37638034/private-folder-submodule-in-a-public-repo
  - submodule commands
    - # git submodule foreach --recursive git checkout master
    - # git submodule foreach --recursive git add -A && git commit -am "2020-12-16"
    - # git submodule foreach --recursive git pull
    - # git submodule foreach --recursive git push
******* Working with previous commits
:PROPERTIES:
:ID:       c6db9694-f7a4-477e-adf5-b44ddc3fd87c
:END:
- [[https://stackoverflow.com/questions/338436/is-there-a-quick-git-command-to-see-an-old-version-of-a-file][stack: view previous version of a file]]
- view previous version of specific file https://stackoverflow.com/questions/338436/how-can-i-view-an-old-version-of-a-file-with-git
- https://stackoverflow.com/questions/888414/git-checkout-older-revision-of-a-file-under-a-new-name
******* Write ignore file (gitignore)
:PROPERTIES:
:ID:       2e094ae6-d854-4e82-852e-365797d2d898
:END:
- [[id:e7a5778b-3f3a-4e88-bdc6-fbac135c9c67][My gitignore template]]
- https://www.toptal.com/developers/gitignore
- https://github.com/github/gitignore
- build from find
  #+begin_src bash
# ignore dotfiles
find . -type l | sed -e s'/^\.\///g' >> .gitignore
#+end_src
- Ignore a directory and all contents
  - https://www.google.com/search?q=git+ignore+directory
- Ignore symlinks
  - https://www.google.com/search?q=git+ignore+all+symlinks
  - https://stackoverflow.com/questions/8650871/telling-git-to-ignore-symlinks
******* 0 Flat                                                         :flat:
:PROPERTIES:
:ID:       f10536f7-729b-4c47-aa91-3f5e890fb5e7
:END:
******** Find a deleted file 
******** git file names beginning w/ hyphen
:PROPERTIES:
:ID:       4e995ab8-4060-43b7-89da-87a10feb74b2
:END:
- https://stackoverflow.com/questions/29192642/how-can-i-get-git-to-delete-a-file-whose-name-begins-with-hyphens

******** Grep a single file's commit hx
:PROPERTIES:
:ID:       6272e427-86c6-4722-aa32-88caa6b71d3e
:END:
https://stackoverflow.com/questions/10215197/git-search-for-string-in-a-single-files-history
******** Add a submodule to an existing repo
:PROPERTIES:
:ID:       9e07e34b-963a-451f-b064-d23ba65ef18b
:END:
- [[https://www.google.com/search?q=git+add+submodule+to+existing+repository][google:git add submodule to existing repository]]
- Add specific branch with -b
- Init afterward
#+begin_src bash
cd $repo
git submodule add <SUBMODULE>
#+end_src
******** Act on submodules in bulk
:PROPERTIES:
:ID:       516164be-cefe-4a58-a45f-6e48a23c8b0d
:END:
git submodule foreach --recursive 'git ...'
******** Remove submodule
:PROPERTIES:
:ID:       08149613-1910-400b-af1d-77436740c97c
:END:
https://stackoverflow.com/questions/1260748/how-do-i-remove-a-submodule
******** Remove large files
:PROPERTIES:
:ID:       ad11419e-27a8-44bf-b558-cc5731417b64
:END:
- https://medium.com/analytics-vidhya/tutorial-removing-large-files-from-git-78dbf4cf83a#:~:text=To%20fix%20this%20issue%2C%20you,remove%20the%20large%20file%2C%20then
******** Push commits to another branch
:PROPERTIES:
:ID:       3d184141-fb33-49e4-b318-78a87a82affa
:END:
- https://stackoverflow.com/questions/13897717/push-commits-to-another-branch
******** Revert to a specific commit
:PROPERTIES:
:ID:       fec5b2ab-d19a-4f92-9c71-e3468806e98b
:END:
- https://www.google.com/search?q=git+revert+specific+commit
******** Push commits to another branch
:PROPERTIES:
:ID:       c5c8f4e6-692a-44ca-b010-34824df09dcb
:END:
git push <remote> <source branch>:<dest branch>
https://stackoverflow.com/questions/13897717/push-commits-to-another-branch
******** merge branch into master
:PROPERTIES:
:ID:       1d5d1038-1c98-4d04-b01f-982fe29fa424
:END:
https://stackoverflow.com/questions/5601931/how-do-i-safely-merge-a-git-branch-into-master
******** clone specific commit
:PROPERTIES:
:ID:       a3f53948-3089-4f7d-9e4a-9a860f151c79
:END:
[[https://www.google.com/search?q=git+clone+a+specific+commit][google:git clone a specific commit]]
******** clone specific branch
:PROPERTIES:
:ID:       e23d21ba-c964-4f88-a787-03673900cd76
:END:
git clone -b stable1.0.0 --single-branch git@github.com:jeszyman/exrna exrna-stable1.0.0
#+begin_src bash
git clone -b stable4.1 --depth 1 --single-branch git@github.com:jeszyman/cappseq
#+end_src
git clone -b opencv-2.4 --single-branch https://github.com/Itseez/opencv.git

- https://stackoverflow.com/questions/1911109/how-do-i-clone-a-specific-git-branch
******** Remove large files from github push
:PROPERTIES:
:ID:       86366863-6e1f-450c-84c1-c773eea27287
:END:
- https://stackoverflow.com/questions/33360043/git-error-need-to-remove-large-file
****** Commands
:PROPERTIES:
:ID:       25448b0b-da84-4b7f-9265-fc64cda5c686
:END:
  | Action               | Command                                  |
  |----------------------+------------------------------------------|
  | <30>                 | <35>                                     |
  | Create repo          | git init                                 |
  | Ignore files         | touch .gitignore                         |
  | Add (stage) file     | git add                                  |
  | Add recursive        | git add --all                            |
  | Remove (unstage)     | git reset                                |
  | Last update          | git log --name-status HEAD^..HEAD        |
  | To be commited       | git status                               |
  | List untracked       | git ls-files --others --exclude-standard |
  | List tracked         | git ls-tree -r master --name-only        |
  | Stop tracking repo   | rm -rf .git/                             |
  | View list of commits | git log                                  |
  | View file changes    | git diff - HEAD --staged                 |
****** Documentation and general reference
:PROPERTIES:
:ID:       46c4c15e-c8c2-41da-a2af-e6a0c6269976
:END:
- [[id:c7d8dd07-098e-4bc4-b008-5da0abcabb0d][The Missing Semester of Your CS Education]]
- https://github.com/gitwatch/gitwatch
- Repository directory structure
  - https://medium.com/code-factory-berlin/github-repository-structure-best-practices-248e6effc405
  - https://softwareengineering.stackexchange.com/questions/86914/whats-the-best-structure-for-a-repository
  - https://snakemake.readthedocs.io/en/stable/snakefiles/deployment.html
- https://www.reddit.com/r/webdev/comments/udod9z/git_makes_me_want_to_pull_my_hair_out/
- Documentation and general reference
  - [[https://git-scm.com/][git website]]
    - [[https://git-scm.com/doc][documentation]]
  - Basic concepts
    - Repository
    - Branching- the different versions of the repository
      - Branches
        - master
        - feature- a new branch
      - Branching creates a snapshot of master
    - Encorporating changes
      - WITHIN a branch: Commit- changes to any branch, not necessarily master
        - commits can have comments, but this is not necessary
      - FROM ONE BRANCH TO ANOTHER: Pull request- to pull you changes INTO a branch
    - Distributed version control (no canonical, distributed version 'sync' via patch
  - Educational Resources
    - [[https://try.github.io/levels/1/challenges/1][Command line tutorial]]
    - [[https://www.git-tower.com/learn/git/ebook/en/command-line/introduction#start][Tower: Learn Version Control with Git]]
  - [[https://stackoverflow.com/questions/954560/how-does-git-handle-symbolic-links][How does Git handle symbolic links?]]
  - Reference
    - https://github.com/UW-Madison-DataScience
    - GUIs- https://www.sourcetreeapp.com/
- Commit
- [[https://git-scm.com/][git website]]
  - [[https://git-scm.com/doc][documentation]]
- Basic concepts
  - Repository
  - Branching- the different versions of the repository
    - Branches
      - master
      - feature- a new branch
    - Branching creates a snapshot of master
  - Encorporating changes
    - WITHIN a branch: Commit- changes to any branch, not necessarily master
      - commits can have comments, but this is not necessary
    - FROM ONE BRANCH TO ANOTHER: Pull request- to pull you changes INTO a branch
  - Distributed version control (no canonical, distributed version 'sync' via patch
- Educational Resources
  - [[https://try.github.io/levels/1/challenges/1][Command line tutorial]]
  - [[https://www.git-tower.com/learn/git/ebook/en/command-line/introduction#start][Tower: Learn Version Control with Git]]
- [[https://stackoverflow.com/questions/954560/how-does-git-handle-symbolic-links][How does Git handle symbolic links?]]
- Best practices
  - https://github.com/elsewhencode/project-guidelines
  - for git repos, use submodules to push common code up - https://git-scm.com/book/en/v2/Git-Tools-Submodules
******* Interfaces
:PROPERTIES:
:ID:       1c75be6b-eb3c-4ce7-a39c-39647b32c08e
:END:
- Git repository hosting services
  - [[https://about.gitlab.com/][GitLab]]
  - [[https://github.com/][GitHub]]
    - https://www.reddit.com/r/programming/comments/7deyx8/introducing_security_alerts_on_github_with_your/
    - [X] [2017-10-19 Thu] Have [[https://mail.google.com/mail/u/0/#inbox/15f3634fd86f200a][student dev pack!]]
    - Primarily for using git with other people- the advantage is pull requests
    - Documentation
    - [[https://help.github.com/articles/cloning-a-repository/][Cloning a repository]] via url: git clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY
    - [[https://guides.github.com/][Guides]]
      - [[https://guides.github.com/features/mastering-markdown/][Markdown]]
  - https://guides.github.com/introduction/flow/
  - GitHub
    - https://stackoverflow.com/questions/8588768/how-do-i-avoid-the-specification-of-the-username-and-password-at-every-git-push
    - https://github.com/settings/keys
    - [[https://education.github.com/?utm_source=newsletter&utm_medium=email&utm_campaign=student-survey-050818][github: educational tools]]
    - [[https://guides.github.com/features/pages/][Getting Started with GitHub Pages]]
    - [[https://education.github.com/pack?utm_source=announcement&utm_medium=email&utm_campaign=education-201806019][GitHub related tools]]
    - [[https://github.com/trending/r?since=monthly][GitHub trending]]
    - ideas
      - https://stackoverflow.com/questions/11852982/can-i-arrange-repositories-into-folders-on-github/11859027#11859027
    - https://github.com/features/actions
    - https://lab.github.com/courses?utm_source=newsletter&utm_medium=email&utm_campaign=student-newsletter-120818
- GUIs- https://www.sourcetreeapp.com/
******** [[id:e1bbc57a-0660-4ccf-a7e7-9870b3afbff7][github]]
:PROPERTIES:
:ID:       97a16ada-7b7d-4080-bb92-165e2b4097e3
:END:
******* Ideas
:PROPERTIES:
:ID:       117178bf-ebdf-4de5-a3bb-4d538724d5e3
:END:
- Changelog via gitcliff and org- https://www.reddit.com/r/commandline/comments/uaub3o/new_version_of_gitcliff_is_out/
****** [[id:e1bbc57a-0660-4ccf-a7e7-9870b3afbff7][github]]
****** [[id:fcffb312-ca8d-4450-b837-b1945201f9c1][My git]]
****** Scripts
:PROPERTIES:
:header-args:bash: :tangle-mode (identity #o555) :mkdirp yes
:ID:       ae3f89ee-ec11-421e-b8ae-ff9930a6faf2
:END:
#+begin_src bash
git log --pretty="- %s"
#+end_src
******* Pre-commit file size check hook
:PROPERTIES:
:ID:       669a5d96-0bea-4d56-ae7e-11151fbfe4a4
:END:
#+begin_src bash :tangle ./tools/git/pre-commit
#!/bin/sh
hard_limit=$(git config hooks.filesizehardlimit)
soft_limit=$(git config hooks.filesizesoftlimit)
: ${hard_limit:=10000000}
: ${soft_limit:=500000}

list_new_or_modified_files()
{
    git diff --staged --name-status|sed -e '/^D/ d; /^D/! s/.\s\+//'
}

unmunge()
{
    local result="${1#\"}"
    result="${result%\"}"
    env echo -e "$result"
}

check_file_size()
{
    n=0
    while read -r munged_filename
    do
        f="$(unmunge "$munged_filename")"
        h=$(git ls-files -s "$f"|cut -d' ' -f 2)
        s=$(git cat-file -s "$h")
        if [ "$s" -gt $hard_limit ]
        then
            env echo -E 1>&2 "ERROR: hard size limit ($hard_limit) exceeded: $munged_filename ($s)"
            n=$((n+1))
        elif [ "$s" -gt $soft_limit ]
        then
            env echo -E 1>&2 "WARNING: soft size limit ($soft_limit) exceeded: $munged_filename ($s)"
        fi
    done

    [ $n -eq 0 ]
}

list_new_or_modified_files | check_file_size
#+end_src



******* Code tangle
:PROPERTIES:
:ID:       ae47fdd1-d0ab-48e7-8283-46805ea808b2
:END:

- sync
    #+name:
    #+begin_src bash :tangle ~/repos/basecamp/src/daily_git_commit.sh
#!/bin/bash
#########1#########2#########3#########4#########5#########6#########7#########8
#                                                                              #
#                       Script to automate git pulls                           #
#             from a set of repositories within the same root dir              #
#                                                                              #
#########1#########2#########3#########4#########5#########6#########7#########8
#
date_today=$(date +%F)
# 1. Script Checks
#
## Check if git exist
command -v git >/dev/null 2>&1 # stop if git not found
if [ $? -eq 1 ]; then
    echo "Git not found"
    exit 1; fi
##
## Check if any repos exist
shopt -s nullglob
repo_dirs=(~/repos/*)
if [ ${#repo_dirs[@]} -eq 0 ]; then
    echo "No repos at ~/repos/"
    exit 1; fi
shopt -u nullglob
##
# 2. Pull Function
#
for d in $HOME/repos/*
do
    [[ ! -d "$d" ]] && continue
    echo "$d" &&
    cd "$d" &&
    git add -A &&
    git commit -am $date_today &&
    git pull &&
    git submodule update --recursive &&
    git submodule update --remote &&
    git push
    cd "$OLDPWD"
done
#
#+end_src
******* No message simple git commit to github
:PROPERTIES:
:ID:       a97c46fe-8a23-4fa1-b9e2-f0edc29ec7f4
:END:
#+begin_src bash :tangle ./tools/shell/no_message_commit.sh
#!/usr/bin/env bash

if [ $# -ne 1 ];
then
    printf "\n usage: no_message_commit <REPO DIR>
    \n Performs simple stage all and commit to github function for given directory
    \n "
else
    if ! [ -d $1 ];
       then
           echo "No repo at $1"
    else
        cd $1
        git pull
        git add -A
        git commit -m.
        git push
    fi
fi
#+end_src
******* Development                                                     :dev:
:PROPERTIES:
:ID:       0a745e73-84c6-466e-8486-37d17af8df62
:END:
#+begin_src bash
git add -A
git commit -m "stable3.0.0"
git push
git push origin stable3.0.0
#+end_src
#+begin_src bash :tangle no
#!/bin/bash
date=$(date +%Y-%m-%d)

git add -A && \
    git  commit -a -m "$date" && \
    git push

    && \
    git submodule foreach --recursive git add -A && git commit -am "$date" && \
    git submodule foreach --recursive git push


#!/bin/bash
date=$(date +%Y-%m-%d)
for d in $HOME/repos/*
do
#	[[ ! -d "$d" ]] && continue
	echo "$d"
	cd "$d"
	git add -A && \
        git commit -a -m "$date" && \
        git push && \
        git submodule foreach --recursive git checkout master &&\
        git submodule foreach --recursive git add -A && git commit -am "$date" && \
        git submodule foreach --recursive git push
done

git submodule foreach --recursive git add -A && git commit -am "2020-12-16"
git submodule foreach --recursive git push
git submodule foreach --recursive git pull

cd $repo
git submodule foreach --recursive git checkout master


git submodule foreach --recursive git pull



done

#+end_src

- Setup submodules
  #+begin_src bash
git submodule add git@github.com:jeszyman/latex
git submodule update --recursive --init
#+end_src
- Setup link to github
  #+begin_src bash
if [ -d /home/jeszyman/repos/cardradbio-atac ]; then
    cd /home/jeszyman/repos/cardradbio-atac
fi

git add -A

git commit -am "First commit"

git branch -M master

git remote add origin git@github.com:jeszyman/cardradbio-atac.git

git push -u origin master
#+end_src
- Size check hook
  #+begin_src bash
#!/bin/sh
#########1#########2#########3#########4#########5#########6#########7#########8
#
# This script is imported from github.com/jeszyman/basecamp
# See block git_size_check_hook in
#  https://github.com/jeszyman/basecamp/blob/master/basecamp.org

hard_limit=$(git config hooks.filesizehardlimit)
soft_limit=$(git config hooks.filesizesoftlimit)
: ${hard_limit:=10000000}
: ${soft_limit:=500000}

list_new_or_modified_files()
{
    git diff --staged --name-status|sed -e '/^D/ d; /^D/! s/.\s\+//'
}

unmunge()
{
    local result="${1#\"}"
    result="${result%\"}"
    env echo -e "$result"
}

check_file_size()
{
    n=0
    while read -r munged_filename
    do
        f="$(unmunge "$munged_filename")"
        h=$(git ls-files -s "$f"|cut -d' ' -f 2)
        s=$(git cat-file -s "$h")
        if [ "$s" -gt $hard_limit ]
        then
            env echo -E 1>&2 "ERROR: hard size limit ($hard_limit) exceeded: $munged_filename ($s)"
            n=$((n+1))
        elif [ "$s" -gt $soft_limit ]
        then
            env echo -E 1>&2 "WARNING: soft size limit ($soft_limit) exceeded: $munged_filename ($s)"
        fi
    done

    [ $n -eq 0 ]
}

list_new_or_modified_files | check_file_size
#+end_src

******* Initialize github-linked repository                      :bashscript:
:PROPERTIES:
:header-args:bash: :tangle ./tools/git/github_init.sh :mkdirp yes
:ID:       5bd05481-a646-4a4b-bb93-2c1a44c346e9
:END:
[[file:./tools/git/github_init.sh]]
#+begin_src bash
#!/usr/bin/env bash
set -o errexit   # abort on nonzero exitstatus
set -o nounset   # abort on unbound variable
set -o pipefail  # don't hide errors within pipes

variables(){
    repo="${1}"
}

main(){
    variables $1
    git_init
}

git_init(){
    cd "${repo}"
    git init
    touch README.md
    git add README.md
    git commit -m "first commit"
    git branch -M master
    base=$(basename $repo)
    git remote add origin git@github.com:jeszyman/${base}.git
    git push -u origin master
    }

main "$@"
#+end_src
****** Templates
:PROPERTIES:
:ID:       4baee110-849a-498e-b2f6-631e5cfc278d
:END:
******* My gitignore template
:PROPERTIES:
:ID:       e7a5778b-3f3a-4e88-bdc6-fbac135c9c67
:header-args:bash: :tangle ./resources/git/jeszyman_gitignore :mkdirp yes
:END:
[[file:resources/git/jeszyman_gitignore]]
******** Preamble
:PROPERTIES:
:ID:       325de256-25e4-4446-bd25-6b149dd39fb9
:END:
#+begin_src bash
#########1#########2#########3#########4#########5#########6#########7#########8
#                                                                              #
#                         Universal gitignore template                         #
#                                                                              #
# Author:        Jeff Szymanski                                                #
# Last updated:  2022-10-16                                                    #
#                                                                              #
#########1#########2#########3#########4#########5#########6#########7#########8

# URL: https://github.com/jeszyman/basecamp/blob/master/resources/git/jeszyman_gitignore

#+end_src
******** Elisp
:PROPERTIES:
:ID:       3a667242-0703-4efd-af30-67f609120fa1
:END:
#+begin_src bash
###   Elisp   ###
,*.elc
.cask
,*~
,*.~undo-tree
#+end_src
******** R
:PROPERTIES:
:ID:       0db63428-0c00-4481-bc3e-1b6a94a5e910
:END:
#+begin_src bash
###   R   ###
.Rhistory
.Rapp.history
.RData
.RDataTmp
.Renviron

#+end_src
******** Python
:PROPERTIES:
:ID:       3cdfe280-edd1-4d7c-b61b-e96a15133a2a
:END:

#+begin_src python
# For unit testing
# import pandas as pd
# import re
# import numpy as np
#
# milreads=["20", "30", "100"]
#
# min_mil = 1000000*int(min(milreads))
#
# read_qc = pd.read_table("/mnt/ris/aadel/Active/mpnst/analysis/qc/cfdna_wgs_read_qc.tsv")
#
# lib_list = read_qc.library[read_qc.reads_mapped_and_paired_filt > min_mil].tolist()

def get_ds_candidates(wildcards):
    min_mil = 1000000*int(min(MILREADS))
    read_qc = pd.read_table(checkpoints.cfdna_wgs_make_qc_tsv.get().output[0])
    lib_list = read_qc.library[read_qc.reads_mapped_and_paired_filt > min_mil].tolist()
    return lib_list

#+end_src
- [[id:CA21AAC9-F147-4086-A24C-64451EE349F3][Python in programming languages]]
- https://towardsdatascience.com/the-zen-of-python-write-beautiful-code-e36844381ee6?gi=8af56a5aeac4

- python in browser with colab https://colab.research.google.com/notebooks/intro.ipynb#scrollTo=P-H6Lw1vyNNd
- https://erikbern.com/2019/10/16/buffet-lines-are-terrible.html
- https://blog.dominodatalab.com/lesser-known-ways-of-using-notebooks/

#+begin_src bash
###   Python   ###
.pybuilder/
target/
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
#+end_src
******** Shell and miscellaneous
:PROPERTIES:
:ID:       0dd01613-5401-492d-a9b5-bf08c44f6655
:END:
#+begin_src bash
###   Shell and miscellaneous   ###
nohup.out
#+end_src
******** Snakemake
:PROPERTIES:
:ID:       b14ec2f5-b146-4030-bd77-91fe09882b5b
:END:
#+begin_src bash
###   Snakemake  ###
./snake*
,**/.snakemake
,**/.cache
,**/.config
,**/.java
#+end_src
******** TeX
:PROPERTIES:
:ID:       edb51038-17cf-4887-86fe-a8885c1b757f
:END:
#+begin_src bash
###   TeX   ###
*.aux
*.lof
*.log
*.lot
*.fls
*.out
*.toc
*.fmt
*.fot
*.cb
*.cb2
.*.lb

## Intermediate documents:
*.dvi
*.xdv
*-converted-to.*
# these rules might exclude image files for figures etc.
# *.ps
# *.eps
# *.pdf

## Generated if empty string is given at "Please type another file name for output:"
.pdf

## Bibliography auxiliary files (bibtex/biblatex/biber):
*.bbl
*.bcf
*.blg
*-blx.aux
*-blx.bib
*.run.xml

## Build tool auxiliary files:
*.fdb_latexmk
*.synctex
*.synctex(busy)
*.synctex.gz
*.synctex.gz(busy)
*.pdfsync

## Build tool directories for auxiliary files
# latexrun
latex.out/

## Auxiliary and intermediate files from other packages:
# algorithms
*.alg
*.loa

# achemso
acs-*.bib

# amsthm
*.thm

# beamer
*.nav
*.pre
*.snm
*.vrb

# changes
*.soc

# comment
*.cut

# cprotect
*.cpt

# elsarticle (documentclass of Elsevier journals)
*.spl

# endnotes
*.ent

# fixme
*.lox

# feynmf/feynmp
*.mf
*.mp
*.t[1-9]
*.t[1-9][0-9]
*.tfm

#(r)(e)ledmac/(r)(e)ledpar
*.end
*.?end
*.[1-9]
*.[1-9][0-9]
*.[1-9][0-9][0-9]
*.[1-9]R
*.[1-9][0-9]R
*.[1-9][0-9][0-9]R
*.eledsec[1-9]
*.eledsec[1-9]R
*.eledsec[1-9][0-9]
*.eledsec[1-9][0-9]R
*.eledsec[1-9][0-9][0-9]
*.eledsec[1-9][0-9][0-9]R

# glossaries
*.acn
*.acr
*.glg
*.glo
*.gls
*.glsdefs
*.lzo
*.lzs
*.slg
*.slo
*.sls

# uncomment this for glossaries-extra (will ignore makeindex's style files!)
# *.ist

# gnuplot
*.gnuplot
*.table

# gnuplottex
*-gnuplottex-*

# gregoriotex
*.gaux
*.glog
*.gtex

# htlatex
*.4ct
*.4tc
*.idv
*.lg
*.trc
*.xref

# hyperref
*.brf

# knitr
*-concordance.tex
# TODO Uncomment the next line if you use knitr and want to ignore its generated tikz files
# *.tikz
*-tikzDictionary

# listings
*.lol

# luatexja-ruby
*.ltjruby

# makeidx
*.idx
*.ilg
*.ind

# minitoc
*.maf
*.mlf
*.mlt
*.mtc[0-9]*
*.slf[0-9]*
*.slt[0-9]*
*.stc[0-9]*

# minted
_minted*
*.pyg

# morewrites
*.mw

# newpax
*.newpax

# nomencl
*.nlg
*.nlo
*.nls

# pax
*.pax

# pdfpcnotes
*.pdfpc

# sagetex
*.sagetex.sage
*.sagetex.py
*.sagetex.scmd

# scrwfile
*.wrt

# svg
svg-inkscape/

# sympy
*.sout
*.sympy
sympy-plots-for-*.tex/

# pdfcomment
*.upa
*.upb

# pythontex
*.pytxcode
pythontex-files-*/

# tcolorbox
*.listing

# thmtools
*.loe

# TikZ & PGF
*.dpth
*.md5
*.auxlock

# titletoc
*.ptc

# todonotes
*.tdo

# vhistory
*.hst
*.ver

# easy-todo
*.lod

# xcolor
*.xcp

# xmpincl
*.xmpi

# xindy
*.xdy

# xypic precompiled matrices and outlines
*.xyc
*.xyd

# endfloat
*.ttt
*.fff

# Latexian
TSWLatexianTemp*

## Editors:
# WinEdt
*.bak
*.sav

# Texpad
.texpadtmp

# LyX
*.lyx~

# Kile
*.backup

# gummi
.*.swp

# KBibTeX
*~[0-9]*

# TeXnicCenter
*.tps

# auto folder when using emacs and auctex
./auto/*
*.el

# expex forward references with \gathertags
*-tags.tex

# standalone packages
*.sta

# Makeindex log files
*.lpz

# xwatermark package
*.xwm

# REVTeX puts footnotes in the bibliography by default, unless the nofootinbib
# option is specified. Footnotes are the stored in a file with suffix Notes.bib.
# Uncomment the next line to have this generated file ignored.
#*Notes.bib

#+end_src

***** github
:PROPERTIES:
:ID:       e1bbc57a-0660-4ccf-a7e7-9870b3afbff7
:END:

https://mail.google.com/mail/u/0/#inbox/FMfcgzQXKDVNGVpdWZndFfQJHPDlQnvc
https://github.nih.gov/learn
****** Processes                                                       :flat:
:PROPERTIES:
:ID:       a21144ea-1793-466e-87da-a88f3a540c25
:END:

******* Flat
- git clone https://github.com/jeszyman/basecamp.git my_basecamp
- pull specific text file from github https://stackoverflow.com/a/31844340/6106936
- git filter-branch --tree-filter 'rm -rf path/to/your/file' HEAD
  - https://stackoverflow.com/questions/33330771/git-lfs-this-exceeds-githubs-file-size-limit-of-100-00-mb
- [[https://stackoverflow.com/questions/8588768/how-do-i-avoid-the-specification-of-the-username-and-password-at-every-git-push][stack: avoid specification of user name and password]]
- https://www.google.com/search?q=github+leave+a+repo+closed+notice
- https://www.google.com/search?q=github+new+repository

******** Create a remote
- e.g.
  #+begin_src bash
gh auth status

git status

gh repo create mouse-cfdna --private --source=/home/jeszyman/repos/mouse-cfdna --push
#+end_src
******* Authorization and API
#+begin_src bash
# Load the GitHub token from the YAML file
GITHUB_TOKEN=$(grep 'github_token:' /tmp/test.yaml | awk '{print $2}')

curl -k -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/user/repos?per_page=100 | jq '.[].full_name' | grep jeszyman 

#+end_src

#+begin_src bash :session TEST
GITHUB_TOKEN=$(grep 'github_token:' /tmp/test.yaml | awk '{print $2}')

#curl -u <username>:<token> -s https://api.github.com/repos/<username>/<repository> | grep "private"

curl -u jeszyman:$GITHUB_TOKEN -s https://api.github.com/repos/jeszyman/sci | grep "private"

curl -u jeszyman:$GITHUB_TOKEN -s https://api.github.com/repos/jeszyman/sci 
#+end_src

****** [[id:E56ADCB0-F6DD-4D58-8B68-CEDF7DC176E6][Git]]
****** General reference                                                :ref:
:PROPERTIES:
:ID:       d393ce6b-fd67-44e7-8543-221fa38d7634
:END:
- [[https://docs.github.com/en][Documentation]]
- github for phi https://mail.google.com/mail/u/0/#inbox/FMfcgzGmtrSFVZLwRBfnJQJMVGLgzhJG
- https://help.github.com/en/articles/about-project-boards
***** gnome-screenshot
:PROPERTIES:
:ID:       7215e666-f5cb-42cf-a8ba-c7dedd6cc38e
:END:
https://askubuntu.com/questions/1196914/gnome-screenshot-cant-copy-to-clipboard-in-ubuntu-18-04

***** gnome-terminal
:PROPERTIES:
:ID:       9213fc1c-c365-41e0-b32a-dd18f33c36d9
:END:
- [[https://www.google.com/search?q=gnome-termial+default+text+size][google:gnome-termial default text size]]
- gnome-terminal geometry https://www.reddit.com/r/bash/comments/imn867/setting_window_size_for_script/
***** Google chrome
:PROPERTIES:
:ID:       eb9edbdb-b989-4cb3-8373-fd2603303f3a
:END:
- https://superuser.com/questions/324266/google-chrome-mac-set-keyboard-focus-from-address-bar-back-to-page?rq=1
- [[https://www.google.com/search?client=ubuntu&hs=w80&sxsrf=ALeKk02nCefgbT-UzhMVn2emvtD5Hw-xbA%3A1608387013058&ei=xQneX7P-AtOD9PwPgImv6AY&q=chrome+view+excel+file+in+browser&oq=chrome+view+excel+file+in+browser&gs_lcp=CgZwc3ktYWIQAzIFCAAQzQIyBQgAEM0CMgUIABDNAjIFCAAQzQI6BAgAEEc6AggAOgYIABAHEB46BggAEAUQHjoGCAAQCBAeOggIABAIEAcQHjoECCEQClCS5g5Y75MPYKKWD2gBcAJ4AIABzgGIAZ8MkgEGMTUuMC4xmAEAoAEBqgEHZ3dzLXdpesgBCMABAQ&sclient=psy-ab&ved=0ahUKEwjz9MvEnNrtAhXTAZ0JHYDEC20Q4dUDCA0&uact=5][chrome view excel file in browser]]
- [[https://www.chromium.org/user-experience/keyboard-access][chromium keyboard shorcuts]]
- https://superuser.com/questions/130260/how-to-update-google-chrome-in-ubuntu
- [[http://stackoverflow.com/questions/6250447/trigger-right-click][trigger right click chrome w/ java?]]
- https://www.google.com/search?q=chromium+remap+keybindings
***** Google sheets
:PROPERTIES:
:ID:       10171733-cc2d-45bd-b5d0-974db45c1121
:END:

- https://stackoverflow.com/questions/10653851/google-spreadsheet-conditional-formatting-script
- https://webapps.stackexchange.com/questions/31894/google-spreadsheet-timestamp/31942#31942
- https://www.benlcollins.com/spreadsheets/google-sheets-query-sql/
***** GraphPad Prism
:PROPERTIES:
:ID:       a4397bfe-a351-4ede-ba73-30037ba34198
:END:
  - Activation code https://mail.google.com/mail/u/0/#inbox/FMfcgzGkXmXrBzPdCzSHZjqpFxrFjGbb



***** Graphviz                                                     :software:
:PROPERTIES:
:ID:       4BFFFC0C-CBFA-4E97-BB52-88A95D4A361B
:CREATED:  [2019-08-23 Fri 07:56]
:END:
:LOGBOOK:
CLOCK: [2018-12-08 Sat 16:05]--[2018-12-08 Sat 16:44] =>  0:39
CLOCK: [2018-12-08 Sat 15:16]--[2018-12-08 Sat 15:25] =>  0:09
CLOCK: [2017-11-10 Fri 11:40]--[2017-11-10 Fri 11:57] =>  0:17
CLOCK: [2017-11-10 Fri 10:45]--[2017-11-10 Fri 11:31] =>  0:46
:END:
- commands
  |----------+---------|
  | function | command |
  |----------+---------|
  | <35>     | <35>    |
  |          |         |
- [[http://www.graphviz.org/documentation/][documentation]] and guides
  - [[http://www.graphviz.org/doc/info/lang.html][The DOT Language]]
  - [[http://www.tonyballantyne.com/graphs.html][Drawing Graphs using Dot and Graphviz]]
  - attributes
    - [[http://www.graphviz.org/doc/info/attrs.html#a:rankdir][Node, Edge and Graph Attributes]]
    - [[https://hackage.haskell.org/package/graphviz-2999.19.0.0/docs/Data-GraphViz-Attributes.html][attributes and values from the haskell graphviz package]]
- [[file:~/repos/mpnst/imgs/pipeline.pdf][pipeline graphic]]
  #+BEGIN_SRC dot :file ./imgs/pipeline.pdf :cmdline -Tpdf
digraph {
// syntax notes
//  no . or - allowed, instead use CamelCase
//
////////////////////////////////////////////////////////////////////
// parameters
 rankdir=LR;
 graph [fontsize=14, fontname="Verdana", compound=true, overlap=false];
 node [
 fontsize=12
 shape=box
 fontname=Helvetica];
////////////////////////////////////////////////////////////////////
// nodes
/// inputs and outputs
multiplexFastq [fillcolor="green",style="filled",label="Multiplexed \n Fastqs"]
nciFastq [fillcolor="green",style="filled",label="NCI Fastqs"]
extractedFastq [fillcolor="green",style="filled",label="De-multiplexed \n Barcode-extracted \n Fastqs"]
cfdnaWESBam [label="cfDNA WES Alignments"]
cfdnaWGSBam
tumorWGSBam
leukocyteWGSBam
tumorWESBam
fragFilterBam
downsampledBam
wig
tumorFraction
cfDNADummy [shap=point style=invis]
///
/// processes
demultiplexRenameExtract [fillcolor="green",style="filled",label="Demultiplex, \n Rename \n and Extract \n demultiplex.sh"]
bamQc [fillcolor="yellow",style="filled",label="Bam File QC \n bam-qc.sh"]
fragFilter [fillcolor="yellow",style="filled"]
readCounting [label="Read Counting \n bam-to-wig.sh"]
alignment [fillcolor="yellow",style="filled"]
fastqQc [fillcolor="green",style="filled"]
//
////////////////////////////////////////////////////////////////////
// clusters
subgraph cluster_washu {
       label = "WashU CAPP-seq Processing"
       multiplexFastq
       demultiplexRenameExtract
}
subgraph cluster_cfDNA {
       label = "cfDNA for Fragment Filtering"
       cfdnaWGSBam
       cfDNADummy
       cfdnaWESBam
}
subgraph cluster_genomicDNA {
       label = "Genomic DNA"
       genomicDNADummy [shap=point style=invis]
       tumorWGSBam
       leukocyteWGSBam
       tumorWESBam
}
//
////////////////////////////////////////////////////////////////////
// node format
multiplexFastq,extractedFastq,nciFastq,cfdnaWESBam,cfdnaWGSBam,tumorWGSBam,leukocyteWGSBam,tumorWESBam,fragFilterBam,downsampledBam,wig,tumorFraction [shape=circle]
//
////////////////////////////////////////////////////////////////////
// edges
 multiplexFastq -> demultiplexRenameExtract -> extractedFastq -> alignment
 multiplexFastq -> fastqQc
 extractedFastq -> fastqQc
 nciFastq -> alignment
 nciFastq -> fastqQc
 alignment -> cfDNADummy [lhead=cluster_cfDNA]
 alignment -> genomicDNADummy [lhead=cluster_genomicDNA]
 cfDNADummy -> fragFilter [ltail=cluster_cfDNA]
 cfDNADummy -> bamQc [ltail=cluster_cfDNA]
 genomicDNADummy -> downsample [ltail=cluster_genomicDNA]
 genomicDNADummy -> bamQc [ltail=cluster_genomicDNA]
 fragFilter -> fragFilterBam
 fragFilterBam -> fragmentAnalysis
 cfDNADummy -> fragmentAnalysis [ltail=cluster_cfDNA]
 fragFilterBam -> downsample -> downsampledBam -> readCounting -> wig -> ichor -> tumorFraction
}
#+END_SRC
- applications
  [[file:/tmp/entity-relationship-diagram.pdf]]
  #+BEGIN_SRC dot :dir ~/data/imgs/graphviz-examples :file /tmp/entity-relationship-diagram.pdf :cmdline -Tpdf
// https://mamchenkov.net/wordpress/2015/08/20/graphviz-dot-erds-network-diagrams/
digraph entityRelationshipDiagram {
    label = "MPNST Project Data Model"
    labelloc = top;
    rankdir=LR;
 //
    node [shape=plaintext];
    edge [dir=both];
//
    subjects [label=<
            <table border="0" cellborder="1" cellspacing="0">
                <tr><td bgcolor="lightblue">subjects</td></tr>
                <tr><td PORT="a" align="left"><b>subject_id</b></td></tr>
                <tr><td align="left">dob</td></tr>
                <tr><td align="left">sex</td></tr>
                <tr><td align="left">institution</td></tr>
                <tr><td align="left">current_dx</td></tr>
                <tr><td align="left">plexiform_dx_date</td></tr>
                <tr><td align="left">plexiform_dx_date_specificity</td></tr>
                <tr><td align="left">anf_dx_date</td></tr>
                <tr><td align="left">anf_dx_date_specificity</td></tr>
                <tr><td align="left">mpnst_dx_date</td></tr>
                <tr><td align="left">mpnst_dx_date_specificity</td></tr>
                <tr><td align="left">mpnst_grade</td></tr>
                <tr><td align="left">mpnst_stage</td></tr>
            </table>
        >];
//
    specimens [label=<
            <table border="0" cellborder="1" cellspacing="0" cellpadding="1">
                <tr><td bgcolor="lightblue">specimens</td></tr>
                <tr><td PORT="a" align="left"><b>specimen_id</b></td></tr>
                <tr><td PORT="b" align="left">subject_id</td></tr>
                <tr><td align="left">collection_date</td></tr>
                <tr><td align="left">specimen_type</td></tr>
            </table>
        >];
//
//
        libraries [label=<
            <table border="0" cellborder="1" cellspacing="0">
                <tr><td bgcolor="lightblue">libraries</td></tr>
                <tr><td align="left"><b>library_id</b></td></tr>
                <tr><td PORT="b" align="left">specimen_id</td></tr>
                <tr><td align="left">library_type</td></tr>
            </table>
        >];
//
        treatments [label=<
            <table border="0" cellborder="1" cellspacing="0">
                <tr><td bgcolor="lightblue">treatments</td></tr>
                <tr><td align="left"><b>treatment_id</b></td></tr>
                <tr><td PORT="b" align="left">subject_id</td></tr>
                <tr><td align="left"> treatment_class </td></tr>
                <tr><td align="left"> treatment_subclass </td></tr>
                <tr><td align="left"> treatment_date </td></tr>
                <tr><td align="left"> treatment_date_specificity </td></tr>
            </table>
        >];
//
        diagnostics [label=<
            <table border="0" cellborder="1" cellspacing="0">
                <tr><td bgcolor="lightblue">diagnostics</td></tr>
                <tr><td align="left"><b>dx_id</b></td></tr>
                <tr><td PORT="b" align="left">subject_id</td></tr>
                <tr><td align="left">dx_finding</td></tr>
                <tr><td align="left">dx_class</td></tr>
                <tr><td align="left">dx_subclass</td></tr>
                <tr><td align="left">dx_date</td></tr>
                <tr><td align="left">dx_date_specificity</td></tr>
            </table>
        >];
//
//
subjects:a -> specimens:b [arrowhead=crow, arrowtail=none, dir=both]
subjects:a -> treatments:b [arrowhead=crow, arrowtail=none, dir=both]
subjects:a -> diagnostics:b [arrowhead=crow, arrowtail=none, dir=both]
specimens:a -> libraries:b [arrowhead=crow, arrowtail=none, dir=both]
}
#+END_SRC
  [[file:/tmp/dot-example.png]]
  #+BEGIN_SRC dot :results replace :file /tmp/dot-example.png :cmdline -Tpng
  digraph graphName{
  // syntax
  //  no . or - allowed, instead use CamelCase

  // graph params
  size ="6/6";
  node [color=grey fontsize=12, shape=box, fontname=Helvetica];

  // nodes
  node1 [label="Node label"]
  node2 [label="Second Node"]

  // edges
  node1 -> unlabeled_node
  node1 -> node2 [label="Edge label"]
  // wavy
  node1 -> node3:w
  }
  #+END_SRC
- interfaces
  - w/ other platforms
    - org
      - [[http://correl.phoenixinquis.net/2015/07/12/git-graphs.html][Drawing git graphs with graphviz and org mode]]
      - Advanced- [[http://orgmode.org/worg/org-tutorials/org-dot-diagrams.html][Worg for dot]]
      - graphviz in Org-mode
        - [[file:~/.basecamp/emacs/public_yasnippets/org-mode/code.dot][yas template]]
        - dot header is #+BEGIN_SRC dot :file ./<FILE_NAME>.png :cmdline -Tpng
        - Simple- [[http://tonyballantyne.com/graphs.html][Drawing Graphs using Dot and Graphviz]]
    - Run through python
      - e.g. http://scikit-learn.org/stable/modules/generated/sklearn.tree.export_graphviz.html
  - http://viz-js.com/
- output
  - [[https://stackoverflow.com/questions/14784405/how-to-set-the-output-size-in-graphviz-for-the-dot-format][How to set the output size in GraphViz for the dot format?]]
- processes
  - assign attributes to group
    - https://stackoverflow.com/questions/28853898/groups-of-nodes-with-the-same-attributes-in-graphviz-file
  - make a legend
- reference
  - [[http://graphviz.it/#/gallery/states.gv][live editor]]
  - [[https://stackoverflow.com/questions/14662092/does-the-dot-language-support-variables-aliases][stack: dot does not directly support aliases]]
  - https://www.google.com/search?q=graphviz+database
  - [[file:~/.basecamp/emacs/public_yasnippets/org-mode/software]]
- standards and best practice
- Cisco AnyConect
  - [[https://superuser.com/questions/932650/cisco-anyconnect-secure-mobility-client-multiple-profiles][Cisco AnyConnect Secure Mobility Client - Multiple Profiles]]
  - my profile at /opt/cisco/anyconnect/profile/test.xml
***** htop
:PROPERTIES:
:ID:       65937e14-6c47-42fb-9d44-664a8cf52674
:END:
- https://www.google.com/search?q=htop+headers+S
  - https://peteris.rocks/blog/htop/#s-interruptible-sleep-waiting-for-an-event-to-complete
- https://www.google.com/search?q=htop+restore+default+settings
  https://unix.stackexchange.com/questions/147885/how-can-i-set-default-settings-for-htop
***** i3
:PROPERTIES:
:ID:       9b81018a-f437-4a56-b4c4-7ee370943b5d
:END:
- Setting windows to precise placement
  - https://chatgpt.com/c/670becdc-2a60-8005-bfe2-d6ba146443e3
#+begin_src bash :tangle /tmp/test.sh
#!/bin/bash

# Switch to workspace 9
i3-msg workspace 9

# Open Gmail in Brave browser
brave-browser --new-window "https://mail.google.com" &

# Wait for the window to open
sleep 2

# Split horizontally (tiling split between two windows)
i3-msg 'split h'

# Open Amazon in a new Brave browser window
brave-browser --new-window "https://www.amazon.com" &

# Wait for the window to open
sleep 2

# Focus on Gmail (this ensures Gmail is the window being resized)
i3-msg '[title="Gmail"] focus'

# Resize Gmail to take 2/3 of the screen
i3-msg 'resize set 66 ppt'
#+end_src

- clear a popup window the CTRL + SHIFT + Q
- https://ultrabug.github.io/py3status/user-guide/modules/#pomodoro
- https://github.com/ultrabug/py3status?tab=readme-ov-file
- https://github.com/raulpenate/.dotfiles/blob/main/.config/i3/config
- [[./resources/images/basecamp.org_20220526_081510.png][i3 keyboard shortcuts]]
- https://www.reddit.com/r/i3wm/comments/808685/create_your_own_i3_layouts_that_are_actually/
- https://i3wm.org/docs/userguide.html#_scratchpad
- https://www.reddit.com/r/i3wm/comments/95z285/opening_all_terminal_applications_directly_from/
- https://faq.i3wm.org/question/4074/changing-window-title.1.html
- https://faq.i3wm.org/question/1730/warning-popup-when-battery-very-low.1.html
****** Ideas
- show every second, not every 5
****** [[file:~/repos/basecamp-private/basecamp-private.org::*My i3 configuration][My i3 configuration in basecamp-private]]
:PROPERTIES:
:ID:       e2b3a949-7809-486f-b8b1-c443b069b7dd
:END:
****** Reference
:PROPERTIES:
:ID:       8244c1ed-8f51-428e-a808-7e7b8fd91383
:END:
- https://thevaluable.dev/i3-config-mouseless/
- [[https://i3wm.org/docs/][documentation]]
- https://i3wm.org/docs/refcard.html
- https://wiki.archlinux.org/title/i3
****** Processes
:PROPERTIES:
:ID:       9c53c904-8b30-45e4-95fc-f997154198bb
:END:
******* Collect all windows to current workspace
- https://chatgpt.com/c/67c2204c-1ae0-8005-a8ed-fa37b01b164a
#+begin_src bash
i3-msg '[class=".*"] move to workspace current'

#+end_src

******* scratchpad
:PROPERTIES:
:ID:       1539abed-3ec8-4dcf-b9b8-5873c467191a
:END:
- move to with mod+Shift+-
- move back with mod+- (this will be floating) then mod+Shift+Space
******* gaps
:PROPERTIES:
:ID:       84451654-6101-43b4-a3ef-d73e25509167
:END:
- gaps and status bar will not show fullscreen
  - https://www.reddit.com/r/i3wm/comments/id3r9g/how_to_have_fullscreen_and_still_show_status_bar/
******* lock screen
:PROPERTIES:
:ID:       3439c023-b792-4ee5-8a77-dd1dc35b4f52
:END:
- https://www.reddit.com/r/i3wm/comments/8hpjb6/i3_lock_screen/
- lock screen
  - https://www.reddit.com/r/i3wm/comments/8hpjb6/i3_lock_screen/
******* make empty container "i3-msg open"
:PROPERTIES:
:ID:       037971c2-a6d2-4fda-a01b-b0e16a44a11e
:END:
  - https://www.reddit.com/r/i3wm/comments/775c2t/blankempty_container/
***** inkscape
:PROPERTIES:
:CREATED:  [2020-10-04 Sun 10:05]
:ID:       e68592b2-5e86-48c9-a2c2-5983e53d34f8
:END:
- https://www.google.com/search?q=inkscape+remove+media+box
  - https://inkscape.org/forums/questions/can-someone-please-tell-me-how-to-get-rid-of-this-box-on-my-screen-please/
  - File -> Document Properties -> Show page border
- https://www.google.com/search?q=inkscape+import+replace+PDF+fonts
- arial and other std fonts  https://www.google.com/search?q=inkscape+arial https://askubuntu.com/questions/651441/how-to-install-arial-font-and-other-windows-fonts-in-ubuntu
- https://stackoverflow.com/questions/15710673/inkscape-too-slow-when-importing-r-plots
- https://inkscape.org/forums/questions/line-spacing/
****** Processes
:PROPERTIES:
:ID:       5e2b7ecf-2674-47f8-ac19-7a0c4b08c2d1
:END:
******* Flat
:PROPERTIES:
:ID:       ff5be761-046a-4c0a-a87c-494b498adc2c
:END:
******** Change origin
:PROPERTIES:
:ID:       6747f5ea-e22b-4298-97ba-32e3a1b56329
:END:
https://inkscape.org/forums/questions/how-to-set-origin-in-bottom-left-corner/

***** isync
:PROPERTIES:
:ID:       3c5cc8a8-97ba-43fc-a51c-211ffba0b5eb
:END:
- Google drive sync via insync
  - [ ] document start process, systemd
***** iterm2
:PROPERTIES:
:ID:       59fc8d05-414b-4eb7-b810-e893e687d301
:END:
  - https://kevinjalbert.com/iterm2-mouseless-copy/
  - https://stackoverflow.com/questions/30055402/how-to-select-text-in-iterm-with-shiftarrow
***** java and jdk
:PROPERTIES:
:ID:       7aab59db-de32-47ad-8d38-46f9dde41a2f
:END:
- https://stackoverflow.com/questions/14788345/how-to-install-the-jdk-on-ubuntu-linux
***** libreoffice
:PROPERTIES:
:ID:       ec8355ce-7324-4ffd-ad3b-25c39edc7390
:END:
- - https://askubuntu.com/questions/191524/set-default-printer-settings-libreoffice
- https://stackoverflow.com/questions/19940236/how-to-generate-pdf-from-a-libreoffice-calc-sheet-fitting-the-page-width
#+begin_src bash

libreoffice --headless --convert-to pdf /tmp/GAiN_Cover_Letter.docx --outdir /tmp
#+end_src
- https://help.libreoffice.org/4.4/Common/List_of_Regular_Expressions
- https://extensions.libreoffice.org/extensions
- https://extensions.libreoffice.org/extensions
- https://www.google.com/search?q=libreoffice+escape+comment
- https://ask.libreoffice.org/en/question/157807/set-memory-settings-in-version-6042/
- https://superuser.com/questions/345365/exporting-vector-graphics-from-inkscape-into-libreoffice
- https://askubuntu.com/questions/599915/what-is-the-closest-font-to-helvetica-available-on-ubuntu
- https://tex.stackexchange.com/questions/106024/libreoffice-inkscape-eps-latex
- https://ask.libreoffice.org/en/question/157807/set-memory-settings-in-version-6042/
- https://www.reddit.com/r/libreoffice/comments/7umifb/has_libreoffice_6_just_killed_the_indispensable/
- https://www.google.com/search?q=libreoffice+escape+comment

***** libreoffice impress
:PROPERTIES:
:ID:       9981156b-c7a5-4c38-bdd9-765621f5ff56
:END:
- [[https://www.google.com/search?q=export+libreoffice+to+pdf][google:export libreoffice to pdf]]

- https://www.google.com/search?q=libreoffice+snap+line
- https://ask.libreoffice.org/en/question/10973/permanently-set-default-page-style/



***** mamba
:PROPERTIES:
:ID:       32a69649-d296-4e9e-a1c9-b863cd24e1e0
:END:
#+begin_src bash
#
conda install mamba -n base -c conda-forge
y
#+end_src
***** MediaWiki
:PROPERTIES:
:ID:       4F02B352-1A93-4CF4-A386-2788387A18C0
:END:

***** MediaWiki
:PROPERTIES:
:ID:       4F02B352-1A93-4CF4-A386-2788387A18C0
:END:

***** ncdu
:PROPERTIES:
:ID:       25c59949-a3fa-46b3-b8a8-1a0ab7000119
:END:
***** Nextcloud
:PROPERTIES:
:ID:       72d325b6-872f-4c57-bd7e-df716be69995
:END:
:LOGBOOK:
CLOCK: [2021-11-09 Tue 13:19]--[2021-11-09 Tue 13:49] =>  0:30
:END:
- https://medium.com/@rohit_kapur/how-im-slowly-moving-off-the-cloud-with-nextcloud-460118a7723d
- https://www.youtube.com/watch?v=y4dtcr2NL5M&ab_channel=LearnLinuxTV
  -
***** nohup
:PROPERTIES:
:ID:       a550d3c7-230f-4737-85f8-9e340a50f8aa
:END:
- https://www.google.com/search?q=nohup+pipe
- https://unix.stackexchange.com/questions/420594/why-process-killed-with-nohup
***** offlineimap
:PROPERTIES:
:ID:       2f944f13-154b-4c04-95d2-79d896e068f8
:END:
  - https://medium.com/@kirang89/emacs-as-email-client-with-offlineimap-and-mu4e-on-os-x-3ba55adc78b6
  - https://github.com/sup-heliotrope/sup/wiki/Complete-gmail-configuration
  - http://www.offlineimap.org/doc/conf_examples.html
  - http://www.offlineimap.org/doc/FAQ.html#configuration-questions
  - https://gist.github.com/dabrahams/3030332
  - http://www.mdlerch.com/offlineimap-gmail-and-mutt-tutorial.html
  - http://jgoerzen.github.io/offlineimap/manual.html
  - https://github.com/mailpile/Mailpile/wiki/Configuring-Linux-to-download-your-email
  - offline imap
    - http://blog.wrouesnel.com/articles/Migrating%20to%20Gmail/


***** okular
:PROPERTIES:
:ID:       569921c4-c8fe-4037-a2be-3c3f7844cd86
:END:
****** Processes
:PROPERTIES:
:ID:       95ba370a-20aa-4216-a29e-bb774d7a2de0
:END:
- https://superuser.com/questions/1483434/how-can-i-jump-to-a-specific-page-number-in-presentation-mode-in-okular#:~:text=The%20'Full%20Screen%20Mode%20(Ctrl,(Ctrl%2BG)'.
- https://www.google.com/search?q=okular+don't+open+fullscreen
- https://askubuntu.com/questions/962878/how-to-change-okulars-find-highlight-color#:~:text=To%20do%20so%20(Okular%20v1,%2D%3E%20And%20change%20default%20color
- https://www.google.com/search?q=okular+open+in+new+windows
- https://www.google.com/search?q=okular+remap+keyboard+shortcuts
****** [[https://docs.kde.org/stable5/en/okular/okular/index.html][documentation]]
:PROPERTIES:
:ID:       bfdfed48-aa2f-4f9a-ae03-155b29eeca8a
:END:

***** orgzly
:PROPERTIES:
:ID:       a5717be7-afe9-4db2-8b4d-b797c7631466
:END:
https://www.orgzlyrevived.com/
- see [[id:d7d54139-64d0-4cfe-ab3a-879b3617b226][Org-mode]]
- [[https://www.orgzly.com/docs][documentation]]
- https://www.reddit.com/r/orgmode/comments/drzptk/orgzly_adds_webdav_support/
- orgzly event reminders occur at time of event https://github.com/orgzly/orgzly-android/issues/664
- https://github.com/orgzly/orgzly-android/issues/674
- https://github.com/orgzly/orgzly-android/issues/295
***** Outlook on the web                                           :software:
:PROPERTIES:
:ID:       935c943e-8ed0-4aec-b12c-9576abd5a1bc
:END:
- can get permalink urls to specific emails via send to OneNote
***** pandoc
:PROPERTIES:
:ID:       79e08e83-de54-440a-a309-a24fd17d276a
:END:


#+begin_src bash
pandoc -o custom-reference.docx --print-default-data-file reference.docx

#+end_src
#+begin_src bash
pandoc -o /home/jeszyman/repos/mpnst-data/readme.docx -f markdown -t docx /home/jeszyman/repos/mpnst-data/readme.md
#+end_src
#+begin_src bash
pandoc -o /home/jeszyman/repos/mpnst-data/readme.pdf -f markdown -t latex /home/jeszyman/repos/mpnst-data/readme.md
#+end_src
***** pdftk
:PROPERTIES:
:ID:       22db5b8c-0699-498e-9dfb-c72a41315f6e
:END:
https://stackoverflow.com/questions/17776582/split-a-pdf-in-two
- See [[id:670ed8f4-bb93-4d93-b9ea-a142a599169f][PDF file processes]]
***** [[id:F9ACCF3D-896B-4FC4-92FD-31A2D6E977DD][R Statistical Computing]]
***** rclone
:PROPERTIES:
:ID:       be76a873-d2fe-447f-a43c-b84c52a8e77b
:END:

#+begin_src bash :results replace
rclone listremotes
rclone lsd box:

#+end_src

- [[https://www.google.com/search?q=rclone+glob+pattern][google:rclone glob pattern]]
- box rclone mount
  - [2019-06-20 Thu]
    - works
    - enabled at startup
  - [[file:/etc/systemd/system/rclone.service]]
  - cannot get linux webdav working
- Setup rclone config
  #+begin_src bash
rclone config
n
remote
6

<ENTER>
<ENTER>

n
n

y
y
q
#+end_src
- no option to work by path ID [2022-11-28 Mon]
- [[https://rclone.org/][rclone]]
#+begin_src bash
rclone config
n
mpnst
6

<ENTER>
<ENTER>

n
n

y
y
q
#+end_src
***** Reference
:PROPERTIES:
:ID:       652d9dde-b9b7-4703-9877-b9c2a3ec199d
:END:
- https://youtube-dl.org/
***** Remarkable
:PROPERTIES:
:ID:       1533ef65-a74f-4a7b-a4f0-f52efa38d71b
:END:
https://www.reddit.com/r/RemarkableTablet/comments/wzu1ci/latest_version_on_remarkable_on_ubuntu_with_wine/
- https://www.simplykyra.com/2021/02/10/switch-out-your-remarkables-sleep-screen-plus-easily-back-it-up/
- https://ddvk.github.io/rmfakecloud/
- https://www.reddit.com/r/RemarkableTablet/comments/ui4w46/remarkable2_without_connect/
- https://www.google.com/search?q=remarkable+quick+sheets+delete
- https://remarkablewiki.com/tech/file_transfer

https://remarkablewiki.com/tips/client - linux client doesn't work
***** rename
:PROPERTIES:
:ID:       df8cf68f-599b-442e-bc29-cb5890cb62e5
:END:
- https://unix.stackexchange.com/questions/689949/rename-file-by-moving-middle-string-to-end-of-the-filename

https://www.google.com/search?q=bash+rename+file+shift+string+to+end
***** singularity
:PROPERTIES:
:CREATED:  [2021-11-17 Wed 11:34]
:ID:       091edc6d-75dc-4bf1-a2e9-e69677bfbf7f
:END:
- https://hpc.nih.gov/apps/singularity.html
#+begin_src bash :tangle ./src/launch_singularity_shell.sh
singularity shell --bind /mnt:/mnt ~/sing_containers/biotools.sif
#+end_src
#+begin_src bash :noweb yes
<<bash_cmdline_script_preamble>>

singularity pull "${data_dir}/frag.sif" docker://jeszyman/frag

cp "${data_dir}/frag.sif" "${sif_dir}/frag.sif"
#+end_src
https://carpentries-incubator.github.io/singularity-introduction/03-singularity-shell/index.html
- Processes
  - Install
    - https://sylabs.io/guides/3.0/user-guide/installation.html
        #+begin_src bash
sudo rm -rf \
    /usr/local/libexec/singularity \
    /usr/local/var/singularity \
    /usr/local/etc/singularity \
    /usr/local/bin/singularity \
    /usr/local/bin/run-singularity \
    /usr/local/etc/bash_completion.d/singularity
# which pkg-config

    # echo $PATH

    # #https://github.com/apptainer/singularity/issues/5242
    # sudo apt-get remove -y libseccomp-dev

    # export PATH=/usr/local/go/bin:/usr/local/go/bin:/usr/local/go/bin:/usr/local/go/bin:/usr/local/texlive/2019/bin/x86_64-linux:/home/jeszyman/repos/basecamp/bin:/home/jeszyman/bin/shell:/usr/local/go/bin:/usr/local/go/bin:/usr/local/go/bin:/usr/local/texlive/2019/bin/x86_64-linux:/home/jeszyman/repos/basecamp/bin:/home/jeszyman/bin/shell:/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/home/jeszyman/go/bin:/home/jeszyman/go/bin:/home/jeszyman/go/bin

    #########1#########2#########3#########4#########5#########6#########7#########8
    # https://sylabs.io/guides/3.0/user-guide/installation.html
    # Install dependencies via apt
    sudo apt-get update && sudo apt-get install -y \
        build-essential \
        libssl-dev \
        uuid-dev \
        libgpgme11-dev \
        squashfs-tools \
        libseccomp-dev \
        pkg-config

    # Install Go
    export VERSION=1.13 OS=linux ARCH=amd64 && \
        wget https://dl.google.com/go/go$VERSION.$OS-$ARCH.tar.gz && \
        sudo tar -C /usr/local -xzvf go$VERSION.$OS-$ARCH.tar.gz && \
        rm go$VERSION.$OS-$ARCH.tar.gz

    # Setup Go environment
    echo 'export GOPATH=${HOME}/go' >> ~/.bashrc && \
        echo 'export PATH=/usr/local/go/bin:${PATH}:${GOPATH}/bin' >> ~/.bashrc && \
        source ~/.bashrc

    go get -u github.com/golang/dep/cmd/dep

#https://github.com/apptainer/singularity/blob/master/CHANGELOG.md
    go get -d github.com/hpcng/singularity

    export VERSION=v3.5.3 && \
        cd $GOPATH/src/github.com/sylabs/singularity && \
        git fetch && \
        git checkout $VERSION # omit this command to install the latest bleeding edge code from master

    ./mconfig && \
        make -C ./builddir && \
        sudo make -C ./builddir install

    which singularity

# https://github.com/apptainer/singularity/issues/5099
sudo apt-get update && \
sudo apt-get install -y build-essential \
libseccomp-dev pkg-config squashfs-tools cryptsetup

sudo rm -r /usr/local/go

export VERSION=1.13.15 OS=linux ARCH=amd64  # change this as you need

wget -O /tmp/go${VERSION}.${OS}-${ARCH}.tar.gz https://dl.google.com/go/go${VERSION}.${OS}-${ARCH}.tar.gz && \
sudo tar -C /usr/local -xzf /tmp/go${VERSION}.${OS}-${ARCH}.tar.gz

echo 'export GOPATH=${HOME}/go' >> ~/.bashrc && \
echo 'export PATH=/usr/local/go/bin:${PATH}:${GOPATH}/bin' >> ~/.bashrc && \
source ~/.bashrc

curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh |
sh -s -- -b $(go env GOPATH)/bin v1.21.0

mkdir -p ${GOPATH}/src/github.com/sylabs && \
cd ${GOPATH}/src/github.com/sylabs && \
git clone https://github.com/sylabs/singularity.git && \
cd singularity

git checkout v3.6.3

cd ${GOPATH}/src/github.com/sylabs/singularity && \
./mconfig && \
cd ./builddir && \
make && \
sudo make install

singularity version
    #+end_src
  - Run
    - Interactive https://www.google.com/search?q=singularity+run+interactive&oq=singularity+run+&aqs=chrome.1.69i57j69i59l2.3155j0j4&sourceid=chrome&ie=UTF-8
      - singularity shell --bind /mnt:/mnt ~/sing_containers/atac.sif
  - https://search.brave.com/search?q=make+singularity+container+from+docker&source=desktop
    - https://stackoverflow.com/questions/60314664/how-to-build-singularity-container-from-dockerfile
        #+begin_src bash
    sudo apt-get remove singularity-container

    y

    sudo rm -rf /usr/local/libexec/singularity

    sudo rm -rf /usr/local/etc/singularity

    sudo rm -rf /usr/local/include/singularity

    sudo rm -rf /usr/local/lib/singularity

    sudo rm -rf /usr/local/var/lib/singularity/

    sudo rm /usr/local/bin/singularity

    sudo rm /usr/local/bin/run-singularity

    sudo rm /usr/local/etc/bash_completion.d/singularity

    sudo rm /usr/local/man/man1/singularity.1

    which singularity

    which go

    cd /tmp

    wget https://golang.org/dl/go1.17.3.linux-amd64.tar.gz

    sudo rm -rf /usr/local/go

    tar -xzf go1.17.3.linux-amd64.tar.gz

    sudo cp -r go /usr/local/
    export PATH=$PATH:/usr/local/go/bin

    which go

    wget https://github.com/sylabs/singularity/releases/download/v3.9.0/singularity-ce-3.9.0.tar.gz

    tar xvf singularity-ce-3.9.0.tar.gz

    cd singularity-ce-3.9.0

    ./mconfig

    make -C builddir

    sudo make -C builddir install

    which singularity
    #+end_src
- [[id:D2FAA88D-70CC-4450-BBB3-8A446CB43AF3][Docker]]
- https://www.google.com/search?q=singularity+check+which+docker+container
***** Slack
:PROPERTIES:
:ID:       ce2cfb2d-65d4-46da-8672-5ea7e3fa5354
:END:
- https://api.slack.com/tutorials/tracks/posting-messages-with-curl
- https://github.com/hikalium/slack-tui
***** snakemake                                              :biotool:career:
:PROPERTIES:
:ID:       a8b27140-4b9e-40c5-86ab-ee5afeae723f
:CREATED:  [2021-09-13 Mon 07:29]
:END:
https://www.reddit.com/r/bioinformatics/comments/17pk9ut/good_ways_to_control_file_structure_and_output/
# logger.info("Mouse heart RNA-seq library count: " + str(len(raw_ms_hrt_rna_df['library'].tolist())))
# logger.info(f"\nRAW mouse heart RNA-seq libraries: {RAW_MS_HRT_RNA_LIBS}")

# raw_ms_nuc_rna_df = process_list(ms_nuc_rna_list)
# RAW_MS_NUC_RNA_LIBS = raw_ms_nuc_rna_df['library'].tolist()

# logger.info("Mouse heart RNA-seq library count: " + str(len(raw_ms_nuc_rna_df['library'].tolist())))
# logger.info(f"\nRAW mouse heart RNA-seq libraries: {RAW_MS_NUC_RNA_LIBS}")

# raw_hs_cell_rna_df = process_list(hs_cell_rna_list)
# RAW_HS_CELL_RNA_LIBS = raw_hs_cell_rna_df['library'].tolist()

# logger.info("Mouse heart RNA-seq library count: " + str(len(raw_hs_cell_rna_df['library'].tolist())))
# logger.info(f"\nRAW mouse heart RNA-seq libraries: {RAW_HS_CELL_RNA_LIBS}")

# raw_hs_plasma_rna_df = process_list(hs_plasma_rna_list)
# RAW_HS_PLASMA_RNA_LIBS = raw_hs_plasma_rna_df['library'].tolist()

# logger.info("Mouse heart RNA-seq library count: " + str(len(raw_hs_plasma_rna_df['library'].tolist())))
# logger.info(f"\nRAW mouse heart RNA-seq libraries: {RAW_HS_PLASMA_RNA_LIBS}")

# atac_df = process_list(atac_list)
# RAW_ATAC_LIBS = atac_df['library'].tolist()

# logger.info("Total raw ATAC-seq library count: " + str(len(atac_df['library'].tolist())))
# logger.info(f"\nRaw ATAC-seq libraries: {RAW_ATAC_LIBS}")

# raw_human_atac_df = pd.read_table(atac_list)
# raw_human_atac_df = raw_human_atac_df[(raw_human_atac_df["include"] == True)
#     ]
# RAW_HUMAN_ATAC_LIBS = raw_human_atac_df.loc[raw_human_atac_df['species'] == 'human', 'library'].tolist()
# logger.info("\nRaw Human ATAC-seq library count: " + str(len(RAW_HUMAN_ATAC_LIBS)))
# logger.info(f"\nRaw Human ATAC-seq libraries: {RAW_HUMAN_ATAC_LIBS}")

# raw_mouse_atac_df = pd.read_table(atac_list)
# raw_mouse_atac_df = raw_mouse_atac_df[(raw_mouse_atac_df["include"] == True)
#     ]
# RAW_MOUSE_ATAC_LIBS = raw_mouse_atac_df.loc[raw_mouse_atac_df['species'] == 'mouse', 'library'].tolist()
# logger.info("\nRaw Mouse ATAC-seq library count: " + str(len(RAW_MOUSE_ATAC_LIBS)))
# logger.info(f"\nRaw Mouse ATAC-seq libraries: {RAW_MOUSE_ATAC_LIBS}")


# raw_ms_hrt_smrna_df = process_list(ms_hrt_smrna_list)
# RAW_MS_HRT_SMRNA_LIBS = raw_ms_hrt_smrna_df['library'].tolist()

# logger.info("Mouse heart small RNA-seq library count: " + str(len(raw_ms_hrt_smrna_df['library'].tolist())))
# logger.info(f"\nRAW mouse heart small RNA-seq libraries: {RAW_MS_HRT_SMRNA_LIBS}")


# FILT_MOUSE_ATAC_LIBS = []
# FILT_HUMAN_ATAC_LIBS = []

# raw_atac_paths = atac_df['path'].tolist()
# raw_atac_dict = dict(zip(RAW_ATAC_LIBS,raw_atac_paths))


# # raw_pe_rna_paths = raw_ms_hrt_rna_df['fq_path'].tolist() + raw_ms_nuc_rna_df['fq_path'].tolist()
# # RAW_PE_RNA_LIBS = raw_ms_hrt_rna_df['library'].tolist() + raw_ms_nuc_rna_df['library'].tolist()
# # raw_pe_rna_dict = dict(zip(RAW_PE_RNA_LIBS,raw_pe_rna_paths))
# # logger.info(f"\nRAW PE RNA-seq libraries: {RAW_PE_RNA_LIBS}")
# # logger.info(f"\nRAW PE RNA-seq libraries: {raw_pe_rna_paths}")

# # raw_se_rna_paths = raw_ms_hrt_smrna_df['fq_path'].tolist() + raw_hs_plasma_rna_df['fq_path'].tolist()
# # RAW_SE_RNA_LIBS = raw_ms_hrt_smrna_df['library'].tolist() + raw_hs_plasma_rna_df['library'].tolist()
# # raw_pe_rna_dict = dict(zip(RAW_SE_RNA_LIBS,raw_pe_rna_paths))

# raw_pe_rna_paths = raw_ms_hrt_rna_df['fq_path'].tolist() + raw_ms_nuc_rna_df['fq_path'].tolist()
# RAW_PE_RNA_LIBS = raw_ms_hrt_rna_df['library'].tolist() + raw_ms_nuc_rna_df['library'].tolist()
# raw_pe_rna_dict = dict(zip(RAW_PE_RNA_LIBS,raw_pe_rna_paths))

# logger.info(f"\nRAW PE RNA-seq libraries: {RAW_PE_RNA_LIBS}")
# logger.info(f"\nRAW PE RNA-seq libraries: {raw_pe_rna_paths}")

******* Processes                                                 :hierarchy:
:PROPERTIES:
:ID:       6cb6dc7d-29ad-4dda-8ede-1454bedc2dc7
:END:
******** 0 Flat                                                        :flat:
:PROPERTIES:
:ID:       cc92b9c0-23c0-4241-8b75-ec0b4ca3c66f
:END:
********* Print at cmd line safe for draw
:PROPERTIES:
:ID:       ee88c497-1c79-4990-b316-fffa90710dd1
:END:
use logger.info
https://stackoverflow.com/questions/57530914/snakemake-forceall-dag-results-in-mysterius-error-stdin-syntax-error-in
********* [[https://www.google.com/search?q=snakemake+prevent+empty+output+files][google:snakemake prevent empty output files]]
:PROPERTIES:
:ID:       a70dbf9d-d404-4e9f-941f-7f6b0648e71c
:END:

********* - [[https://www.google.com/search?q=snakemake+load+multiple+configuration+yamls][google:snakemake load multiple configuration yamls]]
:PROPERTIES:
:ID:       257cd70f-16af-4bfb-8397-ff018c7d1621
:END:
********* Fix slow execution on big dags
:PROPERTIES:
:ID:       3c7ec80a-0579-4d9d-9005-0f9f65156c2f
:END:
-
  - https://stackoverflow.com/questions/54922713/snakemake-processing-large-workflow-slow-due-to-lengthy-sequential-checking-of-j
  - https://www.reddit.com/r/bioinformatics/comments/jsglgt/snakemake_slow_execution_due_to_complex_pipeline/
********* Writing config files
:PROPERTIES:
:ID:       2f7170c8-cac6-4a89-9709-7e3034b5d63e
:END:
- see [[id:2d51112e-b2a4-41c5-bbd9-d9fc85cc59c5][YAML document markup language]]
- Using config variables
  - https://lachlandeer.github.io/snakemake-econ-r-tutorial/config-files.html
- can do multiple config files- see https://stackoverflow.com/a/69708436/6106936
- [[https://www.google.com/search?q=snakemake+config+file+switch+if+then][google:snakemake config file switch if then]]
********* Resource allocation
:PROPERTIES:
:ID:       7b992d27-f6cd-4093-b949-0c42ed4d4027
:END:
- https://stackoverflow.com/questions/70246545/snakemake-limit-the-memory-usage-of-jobs
********* Conditional execution
:PROPERTIES:
:ID:       8ac65ebe-e399-4d31-8cdb-f4b73587f099
:END:
- https://stackoverflow.com/questions/64949149/is-it-possible-to-add-a-conditional-statement-in-snakemakes-rule-all
- https://stackoverflow.com/questions/56024818/conditional-execution-of-multiplexed-analysis-with-snakemake
********** Conditional execution
:PROPERTIES:
:ID:       fd849a5b-92b8-4ba4-bd50-6cdc0775e6a9
:END:
- https://stackoverflow.com/questions/63837395/adding-auto-qc-to-snakemake-pipeline-to-filter-out-samples-with-bad-quality-in-t
********* Blocking rule execution
:PROPERTIES:
:ID:       d04d5a27-5516-4d33-8db8-c2a9f7829bfd
:END:
- https://stackoverflow.com/questions/56803894/how-to-avoid-running-snakemake-rule-after-input-or-intermediary-output-file-was

********* Benchmarks
:PROPERTIES:
:ID:       eaae4d91-e300-49d3-b8ac-0efbb89966c4
:END:
- https://stackoverflow.com/questions/46813371/meaning-of-the-benchmark-variables-in-snakemake

********* Checkpoints
:PROPERTIES:
:ID:       7958cea8-ddf5-47e0-9a51-6163a855898a
:END:
- https://github.com/snakemake/snakemake/issues/16- https://stackoverflow.com/questions/70543163/snakemake-checkpoint-and-create-a-expand-list-wildcards-based-on-created-output
#+begin_src snakemake :tangle ./workflow/checkpoints.smk
rule all:
    input:
        directory('scatter')
        #'scatter_copy/{i}_copy.txt',
        #'scatter_copy_head_collect/all.txt'

# generate random number of files
checkpoint scatter:
    output:
        directory('scatter')
    shell:
        '''
        mkdir {output}
        N=$(( $RANDOM % 10))
        for j in $(seq 1 $N); do echo -n $j > {output}/$j.txt; done
        '''

# collect the results of processing unknown number of files
# and merge them together into one file:

def aggregate_input(wildcards):
    '''
    aggregate the file names of the random number of files
    generated at the scatter step
    '''
    checkpoint_output = checkpoints.scatter.get(**wildcards).output[0]
    return expand('scatter_copy_head/{i}_head.txt',
           i=glob_wildcards(os.path.join(checkpoint_output, '{i}.txt')).i)


# process these unknown number of files
rule scatter_copy:
    output:
        txt = 'scatter_copy/{i}_copy.txt',
    input:
        txt = 'scatter/{i}.txt',
    shell:
        '''
        cp -f {input.txt} {output.txt}
        echo -n "_copy" >> {output.txt}
        '''

# process scatter_copy output
rule scatter_copy_head:
    output:
        txt = 'scatter_copy_head/{i}_head.txt',
    input:
        txt = 'scatter_copy/{i}_copy.txt',
    shell:
        '''
        cp -f {input.txt} {output.txt}
        echo "_head" >> {output.txt}
        '''


rule scatter_copy_head_collect:
    output:
        combined = 'scatter_copy_head_collect/all.txt',
    input:
        aggregate_input
    shell:
        '''
        cat {input} > {output.combined}
        '''
#+end_src
******** Benchmark aggregation
:PROPERTIES:
:ID:       a16fe567-bb8c-466b-8ea6-18814290089c
:END:
- Snakemake
  #+begin_src snakemake

###   Benchmark   ###
#+begin_src snakemake

onsuccess:
    shell("""
        bash {cfdna_wgs_scriptdir}/agg_bench.sh {benchdir} {qcdir}/agg_bench.tsv
        """)
#+end_src

#+begin_src bash :tangle ./scripts/agg_bench.sh
# For unit testing
indir="test/benchmark"
output="test/analysis/qc/bench_agg.tsv"

if [ -f $output ]; then rm $output; fi

for file in $indir/*
do
    base=$(basename $file)
    cat $file | awk -v OFS='\t' -v var=$base 'NR>1 {print var,$0}' >> $output
done

sed -i '1i\process\tfloat_sec\trun_time\tmax_rss\tmax_vms\tmax_uss\tmax_pss\tio_in\tio_out\tmean_load\tcpu_time' $output

#+end_src


******** Install and setup
:PROPERTIES:
:ID:       96e6d2fa-1496-4886-85aa-aa4d9927b3a8
:END:
  - via mambaforge https://snakemake.readthedocs.io/en/stable/tutorial/setup.html
    #+begin_src bash
conda init bash
/bin/bash
conda activate base
conda install -n base -c conda-forge mamba
y
mamba create -c conda-forge -c bioconda -n snakemake snakemake
y
conda activate snakemake
snakemake --help
#+end_src
  - via miniconda
    - [[https://docs.anaconda.com/anaconda/install/multi-user/][install multi-user miniconda]]
  - add singularity
    -
******** Make rulegraph DAG
:PROPERTIES:
:ID:       03ca5168-79ed-472c-83cc-4a0f1521e15d
:END:
- https://stackoverflow.com/questions/57530914/snakemake-forceall-dag-results-in-mysterius-error-stdin-syntax-error-in/57531183#57531183

******** Optimization
:PROPERTIES:
:ID:       a55bdd4f-75bf-4d2e-9d30-7b2028b28c40
:END:
- https://www.embl.org/groups/bioinformatics-rome/blog/2022/05/snakemake-profile-5-handling-memory-and-timeout-errors/
- https://carpentries-incubator.github.io/snakemake-novice-bioinformatics/09-performance/index.html
- note snakemake bug in versions <7- can't do resources call from command line like
******** Rename by dict                                            :smk_rule:
:PROPERTIES:
:ID:       5afd0800-5862-4d6b-b3be-104845873050
:END:

- Snakemake
#+begin_src snakemake
rule rename:
    params:
        old_sample_id=lambda wcs: sampledict[wcs.f],
    output:
        read1=config["fq_symlink_dir"] + "/{f}_R1.fastq.gz",
        read2=config["fq_symlink_dir"] + "/{f}_R2.fastq.gz",
    shell:
        """
        if [ -f {output.read1} ]; then \\rm {output.read1}; fi
        if [ -f {output.read2} ]; then \\rm {output.read2}; fi
        ln -s --relative "{config[raw_fq_dir]}/{params.old_sample_id}_R1.fastq.gz" {output.read1}
        ln -s --relative "{config[raw_fq_dir]}/{params.old_sample_id}_R2.fastq.gz" {output.read2}
        """
#+end_src



******** Resource restriction
:PROPERTIES:
:ID:       e1b1bd6f-036f-4238-9207-c395d2973728
:END:
- https://stackoverflow.com/questions/51977436/restrict-number-of-jobs-by-a-rule-in-snakemake
- https://github.com/snakemake/snakemake/issues/1069
******** Run
:PROPERTIES:
:ID:       e337c265-7a31-405e-995b-7b943b8f225c
:END:
  --lint
  --rulegraph
  - https://www.google.com/search?q=snakemake+run+specific+rule
  - docker - https://snakemake.readthedocs.io/en/stable/snakefiles/deployment.html?highlight=docker#running-jobs-in-containers
- syntax for running shell https://stackoverflow.com/questions/45553762/recommended-way-to-do-multiple-shell-commands-with-shell/49533645#49533645
- https://stackoverflow.com/questions/17126996/emacs-mode-for-snakemake
- check md5 https://stackoverflow.com/questions/65907256/snakemake-use-checksums-instead-of-timestamps
******** Run menu
:PROPERTIES:
:ID:       24dc829c-1027-47e0-b9b1-af51f533906c
:header-args:python: :tangle ./tools/python/menu.py
:END:
#+begin_src python
#!/usr/bin/env python3
import os
import sp
import yaml

def call_shell_function(function_name, repo_dir):
    script_path = f"{repo_dir}/tools/shell/source.sh"
    command = f'source {script_path}; {function_name}'
    sp.run(command, shell=True, executable='/bin/bash')

# Load the configuration from the YAML file
with open('config.yaml', 'r') as f:
    config = yaml.safe_load(f)

# Get the repo_dir from the configuration
repo_dir = config['repo_dir']


def shell_while_loop():
    command = ('while sleep 2; do /usr/bin/emacs --batch -l org -eval '
               '\'(org-babel-tangle-file "card-rad-bio.org")\' && '
               'snakemake --dry-run --configfile config/${HOSTNAME}.yaml '
               '--cores 1 --snakefile workflow/int.smk; done')
    try:
        sp.run(command, shell=True, executable='/bin/bash', check=True)
    except KeyboardInterrupt:
        print("\nLoop interrupted. Returning to menu.")

def submenu():
    while True:
        print("\nSubmenu")
        print("1. Option 1")
        print("2. Option 2")
        print("b. Back to main menu")

        choice = input("Enter number of choice: ")

        if choice == '1':
            print("Executing option 1 in submenu")
        elif choice == '2':
            print("Executing option 2 in submenu")
        elif choice.lower() == 'b':
            print("Returning to main menu")
            break
        else:
            print("Invalid choice")

def main():
    while True:
        print("\nMPNST Repo Menu")
        print("1. Update conda")
        print("2. Execute function two")
        print("3. Open submenu")
        print("e Exit")

        choice = input("Enter number of choice: ")

        if choice == '1':
            call_shell_function('conda_update')
        elif choice == '2':
            call_shell_function('function_two')
        elif choice == '3':
            submenu()
        elif choice.lower() == 'e':
            print("Exiting.")
            break
        else:
            print("Invalid choice")

if __name__ == '__main__':
    main()

#+end_src


******** Snakemake install and setup
:PROPERTIES:
:ID:       9d8f60fa-7f81-4353-885d-0b4596374a09
:END:

- via mambaforge https://snakemake.readthedocs.io/en/stable/tutorial/setup.html
  #+begin_src bash
conda init bash
/bin/bash
conda activate base
conda install -n base -c conda-forge mamba
y
mamba create -c conda-forge -c bioconda -n snakemake snakemake
y
conda activate snakemake
snakemake --help
#+end_src
- via miniconda
  - [[https://docs.anaconda.com/anaconda/install/multi-user/][install multi-user miniconda]]
- add singularity
  -


******** Symlink input fastqs
:PROPERTIES:
:ID:       a29b0034-e47e-49de-8cd6-fd7ed138fd2c
:END:
#+begin_src snakemake
rule symlink_inputs:
    container: default_container,
    input:
        lambda wildcards: cfdna_wgs_lib_dict[wildcards.library],
    output:
        read1 = cfdna_wgs_fastqs + "/{library}_raw_R1.fastq.gz",
        read2 = cfdna_wgs_fastqs + "/{library}_raw_R2.fastq.gz",
    params:
        outdir = cfdna_wgs_fastqs,
        script = cfdna_wgs_scriptdir + "/symlink.sh",
    shell:
        """
        {params.script} \
        {input} \
        {output.read1} \
        {output.read2} \
        {params.outdir}
        """
#+end_src
#+begin_src bash :tangle ./scripts/symlink.sh
#!/usr/bin/env bash
set -o errexit   # abort on nonzero exitstatus
set -o nounset   # abort on unbound variable
set -o pipefail  # don't hide errors within pipes

# Script variables
input_read1="${1}"
output_read1="${2}"
output_read2="${3}"
outdir="${4}"

mkdir -p $outdir

input_read2="$(echo $input_read1 | sed "s/_R1/_R2/g")"

ln -sf --relative ${input_read1} ${output_read1}
ln -sf --relative ${input_read2} ${output_read2}
#+end_src



******** Writing snakefiles
:PROPERTIES:
:ID:       5319f0fe-13a0-48cb-ac0c-7b9d0c14c5de
:END:

https://stackoverflow.com/questions/50413374/glob-wildcards-on-multiple-directories-with-different-file-names
- Input functions
  - https://carpentries-incubator.github.io/snakemake-novice-bioinformatics/09-input_functions/index.html
- [[id:f20681eb-de70-4540-a9ba-63de0c800321][Python dictionaries]]
- https://stackoverflow.com/questions/56042158/snakemake-correct-syntax-for-accessing-dictionary-values
- python dict for names https://stackoverflow.com/questions/50413374/glob-wildcards-on-multiple-directories-with-different-file-names
- Run rule on all files in dir https://snakemake.readthedocs.io/en/stable/project_info/faq.html#how-do-i-run-my-rule-on-all-files-of-a-certain-directory
- To pass character vector to R snakemake rule https://stackoverflow.com/questions/13840207/character-vector-as-an-argument-to-r-script
- R package management in snakemake rules
  - https://github.com/lachlandeer/snakemake-econ-r
- https://lachlandeer.github.io/snakemake-econ-r-tutorial/logging-output-and-errors.html
- https://stackoverflow.com/questions/69483414/unspecified-syntax-error-in-snakemake-rule
- test workflow output- https://stackoverflow.com/questions/50198628/snakemake-confusion-on-how-to-access-config-files-properly
- workaround for using snakemake vars in shell script https://stackoverflow.com/a/49533645/6106936
- https://github.com/snakemake/snakemake/issues/971
- Configuration files
  - [[id:2d51112e-b2a4-41c5-bbd9-d9fc85cc59c5][YAML document markup language]]
  - Using config variables
    - https://lachlandeer.github.io/snakemake-econ-r-tutorial/config-files.html
  - can do multiple config files- see https://stackoverflow.com/questions/62696099/snakemake-multiple-config-files

******* Demo :demo
:PROPERTIES:
:ID:       06145f3c-c177-472d-9bac-11ff715c8024
:END:

******** Development
:PROPERTIES:
:ID:       b16b1ad1-19a4-44e9-814a-a6e9416f5320
:END:
- if not config["heavy_compute"]:
    - ATAC_LIBS = ['lib121']

******* [[id:271b4d5f-727e-496e-b835-8fe9f8655655][Bioinformatics project module]]
:PROPERTIES:
:ID:       aaeb1e92-7ee5-40bf-babd-c2a19c20492d
:END:
******* Style
:PROPERTIES:
:ID:       3964a700-f2bb-4e35-9d4e-4b07603c4d95
:END:
- Configuration
  - tabular- declare per-unit identifiers and index in snakefile preamble. /E.g./ # units = pd.read_table("bin/units_test.tsv").set_index("sample", drop=False)
    - needs import pandas
  - YAML files
    - subdivide labels. /E.g./
      ref:
        index:
      rather than ref_index:
      (use as ref = config["ref"]["index"])
    - Favor parameterizing only a main data directory and then writing subpaths directly in rules. /E.g/ config["data_dir"] + "/qc" rather than config["qc_dir"].
    - Use boolean setters in the config.
      - /E.g./
        - in config: call_variants: false
        - and in rule all:         lambda wildcards: "analysis/09a_variant_annot/all.merged.filt.PASS.snpeff.vcf.gz.tbi" if config["call_variants"] else [],
- Externalize all scripts from workflow and allow independent script execution
- Each rule has logfile defined in workflow directed to log_dir
- Software generated log files are redirected to log_dir
- Repos have MWE for each snakefile

******* Local YAS (prefix smk.)
:PROPERTIES:
:ID:       44d21b98-0a61-43db-937f-65ff5a5d27d3
:END:
******** See also [[id:83ab8d81-d8b9-4430-b639-2cbe92ec49b4][Python YAS]]
******** smk.rule.py                                                    :yas:
:PROPERTIES:
:ID:       930a22e1-af7a-41d5-bd6d-31cf659eb726
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/smk.rule.py
# -*- mode: snippet -*-
# key: smk.rule.py
# expand-env: ((yas-indent-line 'none))
# --
,#+begin_src snakemake
rule ${1:$$(replace-regexp-in-string " " "_" yas-text)}:
    input: ${2: <INPUT>},
    log: f"{log_dir}/$1.log",
    output: ${3: <OUTPUT>},
    params: script = f"{${3:$$(replace-regexp-in-string " " "_" yas-text)}}/$1.py",
    shell:
        """
        python {params.script} {input} {output} > {log} 2>&1
        """
,#+end_src

#+begin_src python :tangle ./scripts/$1.py
,#+end_src

#+end_src
******** R rule smk.rule.r
:PROPERTIES:
:ID:       928c57a9-dd2b-427b-b1c4-191e6321d133
:END:
#+name: smk.rule.r
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/smk.rule.r
# -*- mode: snippet -*-
# key: smk.rule.r
# expand-env: ((yas-indent-line 'none))
# --
,#+begin_src snakemake
rule ${1:$$(replace-regexp-in-string " " "_" yas-text)}:
    input: ${2: <INPUT>},
    log: f"{log_dir}/$1.log",
    output: ${3: <OUTPUT>},
    params: script = f"{${3:$$(replace-regexp-in-string " " "_" yas-text)}}/$1.R",
    shell:
        """
        Rscript {params.script} {input} {output} > {log} 2>&1
        """
,#+end_src

#+begin_src R :tangle ./scripts/$1.R
,#+end_src

#+end_src


******** Operating snakemake file org-mode tree (YAS)
:PROPERTIES:
:ID:       8a7cdf48-a132-45e9-a5da-18e2d5fad643
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/smk
# -*- mode: snippet -*-
# key: smk
# expand-env: ((yas-indent-line 'none))
# --
`(make-string (org-current-level) ?*)` [[file:./workflow/$2.smk][Snakefile]]:smk:
:PROPERTIES:
:header-args:snakemake: :tangle ./workflow/${2: SNAKEFILE NAME}.smk
:END:
`(make-string (+ 1 (org-current-level)) ?*)` Smk preamble
,#+begin_src snakemake

,#+end_src
`(make-string (+ 1 (org-current-level)) ?*)` Smk rules
`(make-string (+ 2 (org-current-level)) ?*)` All rule
,#+begin_src snakemake
rule all:
    input:

,#+end_src
- add rules with smk.rule
`(make-string (+ 1 (org-current-level)) ?*)` Dev
:PROPERTIES:
:header-args:snakemake: :tangle no
:END:
`(make-string (+ 2 (org-current-level)) ?*)` Ideas
:PROPERTIES:
:header-args:snakemake: :tangle no
:END:
#+end_src
******** Integration testing
:PROPERTIES:
:ID:       c5e4cb9c-433f-4565-8284-27b6e3e4f978
:END:

#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/smk_int
# -*- mode: snippet -*-
# key: smk_int
# expand-env: ((yas-indent-line 'none))
# --
`(make-string (org-current-level) ?*)` [[file:./workflow/int_test.smk][Snakefile]]:smk:
:PROPERTIES:
:header-args:snakemake: :tangle ./workflow/int_test.smk
:END:
`(make-string (+ 1 (org-current-level)) ?*)` Preamble
,#+begin_src snakemake
# Python setup
import numpy as np
import pandas as pd
import re
,#+end_src
`(make-string (+ 1 (org-current-level)) ?*)` All rule
`(make-string (+ 1 (org-current-level)) ?*)` Symlink fastqs
`(make-string (+ 1 (org-current-level)) ?*)` Includes statements
#+end_src
******** Bash rule smk.rule.bash
:PROPERTIES:
:ID:       5ac79198-801a-4ab9-82df-88402cb63e4d
:END:
#+name: smk.rule.bash
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/smk.rule.bash
# -*- mode: snippet -*-
# key: smk.rule.bash
# expand-env: ((yas-indent-line 'none))
# --
,#+begin_src snakemake
rule ${1:$$(downcase(replace-regexp-in-string " " "_" yas-text))}:
    input: ${2: <INPUT>},
    log: f"{log_dir}/$1.log",
    output: ${3: <OUTPUT>},
    params: script = f"{${3:$$(replace-regexp-in-string " " "_" yas-text)}}/$1.sh",
    shell:
        """
        {params.script} {input} {output} > {log} 2>&1
        """
,#+end_src

#+begin_src bash :tangle ./scripts/$1.sh
#!/usr/bin/env bash
,#+end_src
#+end_src
#+begin_src bash :tangle no
# -*- mode: snippet -*-
# key: smk.rule.bash
# expand-env: ((yas-indent-line 'none))
# --
`(make-string (org-current-level) ?*)` ${12: <RULE DESCRIPTIVE ORG NAME>}    :smk_rule:
- [[./workflow/${1: <SNAKEFILE BASENAME>}.smk::rule $3_$4][Snakemake] $0
  ,#+begin_src snakemake
# ${2:<DESCRIPTIVE COMMENT>}
rule ${3: <SNAKEFILE ID>}_${4:<RULE WORKFLOW NAME>}:
    benchmark: logdir + "/{$7}_$3_$4.benchmark.txt",
    container: $3_container,
    input: ${5: <INPUT PATH PARAMETER>} + "/${6: <INPUT PATH PREFIX>}/{${7: <UNIT ID>}}_${8:<INPUT SUFFIX}",
    log: logdir + "/{$7}_$3_$4.log",
    output: ${9: <OUTPUT PATH PARAMETER>} + "/${10: <OUTPUT PATH PREFIX>}/{$7}_${11:<OUTPUT SUFFIX}",
    params:
        script = $3_scriptdir + "/$4.sh",
        threads = $3_threads,
    shell:
        """
        {params.script} \
        {input} \
        {output} &> {log}
        """
,#+end_src
- [[file:./scripts/${4:$(downcase yas-text)}.sh][Shell script]]
  ,#+begin_src bash :tangle ./scripts/${4:$(downcase yas-text)}.sh
#!/usr/bin/env bash
input=\$1
output=\$2
,#+end_src
#+end_src
******** Make Rule
:PROPERTIES:
:ID:       a4783f28-5b50-450c-8a24-050407aae927
:END:

#+name: smk.rule
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/smk.rule
# -*- mode: snippet -*-
# key: smk.rule
# expand-env: ((yas-indent-line 'none))
# --
smk.rule.${1:$$(yas-choose-value '("bash" "r"))}
#+end_src

******** Insert snakemake file org-mode tree
:PROPERTIES:
:ID:       46270062-e3f4-46c9-9d71-5868376e495b
:END:
#+name: smk
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/smk
# -*- mode: snippet -*-
# key: smk
# expand-env: ((yas-indent-line 'none))
# --
`(make-string (org-current-level) ?*)` $3 :smk:
:PROPERTIES:
:header-args:snakemake: :tangle ./workflow/${1: SNAKEFILE NAME}.smk
:END:
[[file:./workflow/$1.smk][Link to Snakefile]]
[[46270062-e3f4-46c9-9d71-5868376e495b][yas]]
`(make-string (+ 1 (org-current-level)) ?*)` Preamble
,#+begin_src snakemake
# ${3: <ORG DESCRIPTIVE TITLE>}
,#+end_src
`(make-string (+ 1 (org-current-level)) ?*)` Use smk.rule
`(make-string (+ 1 (org-current-level)) ?*)` Dev
:PROPERTIES:
:header-args:snakemake: :tangle no
:END:
`(make-string (+ 1 (org-current-level)) ?*)` Ideas
:PROPERTIES:
:header-args:snakemake: :tangle no
:END:
#+end_src
******** smk.rulegraph                                                  :yas:
:PROPERTIES:
:ID:       6832b456-5ad2-4f2f-afe0-ae7d16a1301f
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/smk.rulegraph
# -*- mode: snippet -*-
# key: smk.rulegraph
# expand-env: ((yas-indent-line 'none))
# --
#+ATTR_ORG: :width 800px
[[file:resources/$1_smk.png]]
#+end_src
******** smk.org.rule (builds org-mode framework to write snakemake code blocks)
:PROPERTIES:
:ID:       475b3e12-219d-4e12-9f51-8f29e15bd505
:END:
#+name: smk.org.rule
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/smk.org.rule
# -*- mode: snippet -*-
# key: smk.org.rule
# expand-env: ((yas-indent-line 'none))
# --
`(make-string (org-current-level) ?*)` ${2: <RULE DESCRIPTIVE NAME>}    :smk_rule:
- Snakemake
  ,#+begin_src snakemake
rule ${1:$$(replace-regexp-in-string " " "_" yas-text)}:
    benchmark: bench_dir + "/$1.benchmark",
    container:
    input:
    log: log_dir + "/$1.log",
    output:
smk.$0
#+end_src

******** smk.rule (general format for snakemake rule)
:PROPERTIES:
:ID:       9b2d96d7-19ca-423e-bb39-538878edf8b6
:END:
#+name: smk.rule
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/smk.rule
# -*- mode: snippet -*-
# key: smk.rule
# expand-env: ((yas-indent-line 'none))
# --
,#+begin_src snakemake
rule ${1:$$(downcase(replace-regexp-in-string " " "_" yas-text))}:
    input:
    log: f"{log_dir}/$1.log",
    output:
    params: script = $1
    shell:
        """
        """
$0
,#+end_src
#+end_src

******** code.smk (make a snakemake code block in org-mode)
:PROPERTIES:
:ID:       77ddc53c-24c4-4620-997f-234a10e5c116
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/code.smk
# -*- mode: snippet -*-
# key: code.smk
# expand-env: ((yas-indent-line 'none))
# --
,#+begin_src snakemake
$0
,#+end_src
#+end_src
******** smk.rscript                                                    :yas:
:PROPERTIES:
:ID:       f1e9b827-677e-4e25-b59d-8b12f46ba4b8
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/smk.rscript
# -*- mode: snippet -*-
# key: smk.rscript
# expand-env: ((yas-indent-line 'none))
# --
    params:
        script = f"{$2_script_dir}/${1:$$(replace-regexp-in-string " " "_" yas-text)}.R"
    shell:
        """
        Rscript {params.script} \
        {input} \
        {output} > {log} 2>&1
        """
,#+end_src
- [[file:./scripts/$1.R][Rscript]]
  ,#+begin_src R :tangle ./scripts/$1.R
r.script$0
,#+end_src
#+end_src
******** smk.bashscript                                                 :yas:
:PROPERTIES:
:ID:       1ff4f7b8-0868-420b-ba58-ec244ad2ca2c
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/smk.bashscript
# -*- mode: snippet -*-
# key: smk.bashscript
# expand-env: ((yas-indent-line 'none))
# --
    params:
        script = script_dir + "/${1:$$(replace-regexp-in-string " " "_" yas-text)}.sh"
    shell:
        """
        {params.script} \
        {input} \
        {output} &> {log}
        """
,#+end_src
#+begin_src bash :tangle ./scripts/$1.sh
$0
,#+end_src
#+end_src

******* [[https://snakemake.readthedocs.io/en/stable/index.html][Documentation]]
:PROPERTIES:
:ID:       e5f73949-e240-4d51-a150-6dbbc28e43e3
:END:
- https://snakemake-wrappers.readthedocs.io/en/stable/wrappers.html
- [[Snakemake Tutorial][Snakemake Tutorial]]
******* Ideas
:PROPERTIES:
:ID:       1854dffb-e8db-4c8d-8138-99a92aff98bd
:END:
set emacs buffers of smk windows to a smaller text size default
******* General reference
:PROPERTIES:
:ID:       7bebcaa9-bf1f-48fe-af02-e58c80def8da
:END:
- https://snakepipes.readthedocs.io/en/latest/content/workflows/mRNA-seq.html#mrna-seq

- https://github.com/aomlomics/tourmaline
- https://carpentries-incubator.github.io/snakemake-novice-bioinformatics/
- https://swcarpentry.github.io/r-novice-inflammation/05-cmdline/index.html
- https://carpentries-incubator.github.io/snakemake-novice-bioinformatics/
- #+PROPERTY: header-args:bash :tangle-mode (identity #o777)
- ideas
  `(make-string (+ 2 (org-current-level)) ?*)` Run commands
  ,#+begin_src bash
  conda activate snakemake

  snakemake \
    --cores $threads \
    --printshellcmds \
    --snakefile workflow/$1
  ,#+end_src
- Standards and best practice
  - https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html#snakefiles-best-practices
- https://endrebak.gitbooks.io/the-snakemake-book/content/
- https://academic.oup.com/bioinformatics/article/28/19/2520/290322
- https://www.biostars.org/p/9469533/
- https://stackoverflow.com/questions/64949149/is-it-possible-to-add-a-conditional-statement-in-snakemakes-rule-all
- https://stackoverflow.com/questions/54400171/how-to-use-list-in-snakemake-tabular-configuration-for-describing-of-sequencing
- https://github.com/ngs-docs/2020-ggg-201b-rnaseq/blob/latest/rnaseq-workflow.Rmd
- https://angus.readthedocs.io/en/2019/snakemake_for_automation.html
- https://pages.charlesreid1.com/how-do-i-snakemake/converting/
- http://ivory.idyll.org/blog/2020-snakemake-hacks-collections-files.html
- http://origin.research.jetbrains.org/files/material/5ec245b4e907c.pdf
- https://f1000research.com/articles/10-33/v2
- [ ] https://lachlandeer.github.io/snakemake-econ-r-tutorial/config-files.html
- https://github.com/snakemake-workflows/rna-seq-star-deseq2/blob/master/workflow/rules/diffexp.smk
- https://github.com/csoneson/ARMOR
- https://github.com/slowkow/snakefiles/blob/master/kallisto/Snakefile
- https://lachlandeer.github.io/snakemake-econ-r-tutorial/initial-steps-with-snakemake.html
- for repos, git ignore the singularity build
- https://github.com/EnvGen/snakemake-workflows
******** Tutorials and guides
:PROPERTIES:
:ID:       a9d1e5dd-f707-4ab8-ae32-934f9d647fd7
:END:
- https://reproducibility.sschmeier.com/index.html

***** SSH file transfer protocol (SFTP)
:PROPERTIES:
:ID:       47231197-201d-4e0e-b1a6-a984f06da261
:END:

:PROPERTIES:
:ID:       16e5e605-ba2c-46e5-a330-8cf3e5393092
:END:
[[id:cd047f76-f15b-415c-9767-21692d1e4ec6][Drain WGS data transfer]]


https://carpentries-incubator.github.io/workflows-snakemake/
- what's the difference b/w command line --cores and in-rule threads?
- https://stackoverflow.com/questions/56024818/conditional-execution-of-multiplexed-analysis-with-snakemake
***** syncthing
:PROPERTIES:
:ID:       813113ec-e094-4557-9bad-5bacc8d9df84
:END:
- ip is http://127.0.0.1:8384
***** Timeshift
:PROPERTIES:
:ID:       4bf6dcdd-bf0b-4269-9e07-2bebbd0af694
:END:
- https://ostechnix.com/how-to-backup-and-restore-linux-system-with-timeshift/
- https://github.com/teejee2008/timeshift
***** tramp
:PROPERTIES:
:ID:       17551e34-13c7-4a19-89ac-5377c9bcd8fe
:END:
https://www.google.com/search?q=emacs+waiting+for+prompts+from+shell&oq=emacs+waiting+for+prompts+from+shell+&aqs=chrome..69i57.47179j0j1&sourceid=chrome&ie=UTF-8
  - [currently not working] to goodle drive- - https://www.gnu.org/software/tramp/#Using-Google-Drive
***** trash http://hasseg.org/trash/
:PROPERTIES:
:ID:       22519779-0606-4e0f-bf31-b90be55342c5
:END:
***** Vim
:PROPERTIES:
:ID:       2a61d815-adf5-4405-a868-18fca52d0a8e
:END:
- https://www.freecodecamp.org/news/learn-vim-beginners-tutorial/

***** [[https://vimium.github.io/][vimium]]
:PROPERTIES:
:ID:       d56355e6-c5da-4ba4-a994-4122268cba98
:END:
- save link with "yf"
***** virtualbox
:PROPERTIES:
:ID:       147fb935-7526-497f-ab84-2b7903ea996e
:END:
- https://itsfoss.com/install-windows-10-virtualbox-linux/
- [[https://www.virtualbox.org/manual/][documentation]]
- processes
  - install
    - post-install guest additions CD
- https://www.google.com/search?q=virtualbox+linux+guest+additions
***** VLC
:PROPERTIES:
:ID:       b0f8e7f9-bca4-4e2f-99b3-1c81d2efa154
:END:
  - https://webapps.stackexchange.com/questions/tagged/google-contacts?sort=votes&pageSize=15
  - [[https://apple.stackexchange.com/questions/127386/how-do-i-vary-the-playback-speed-in-vlc-using-keyboard-shortcuts][VLC playback]]
    |--------------+---------------|
    | Faster       | CMD + =       |
    | Slower       | CMD -         |
    | Jump back    | CMD ALT LEFT  |
    | Jump forward | CMD ALT RIGHT |
- VLC
  - https://webapps.stackexchange.com/questions/tagged/google-contacts?sort=votes&pageSize=15
  - [[https://apple.stackexchange.com/questions/127386/how-do-i-vary-the-playback-speed-in-vlc-using-keyboard-shortcuts][VLC playback]]
    |--------------+---------------|
    | Faster       | CMD + =       |
    | Slower       | CMD -         |
    | Jump back    | CMD ALT LEFT  |
    | Jump forward | CMD ALT RIGHT |
***** wine
:PROPERTIES:
:ID:       710134b1-c7e2-472b-8e93-7377205e13de
:END:
#+begin_src bash
sudo apt update
#+end_src
***** xdg-utils
:PROPERTIES:
:ID:       05e700d9-77cc-4aef-b310-164c267274d0
:END:
- Don't do e.g. alias libreoffice='libreoffice & exit' as this prevents xdg-open from working
- "desktop" entries
  - ~/.local/share/applications
  - /usr/share/applications
  - https://wiki.archlinux.org/title/Desktop_entries
- https://wiki.archlinux.org/title/XDG_MIME_Applications#:~:text=The%20XDG%20Shared%20MIME%2Dinfo,from%20shared%2Dmime%2Dinfo.
- https://unix.stackexchange.com/questions/36380/how-to-properly-and-easily-configure-xdg-open-without-any-environment
- local defaults list at ~/.config/mimeapps.list
- $ xdg-mime default Thunar.desktop inode/directory
- application interactions, xdg
  - https://wiki.archlinux.org/title/Xdg-utils
***** youtube-dl
:PROPERTIES:
:ID:       e3686637-787c-47f2-b358-cf8c938ad606
:END:
#+begin_src bash
sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl
sudo chmod a+rx /usr/local/bin/youtube-dl

#+end_src
https://github.com/ytdl-org/youtube-dl/blob/master/README.md#readme
***** Zotero
:PROPERTIES:
:ID:       25D1FA26-1865-4BFC-845C-8D1B1830EE13
:END:
:LOGBOOK:
CLOCK: [2020-01-16 Thu 08:16]--[2020-01-16 Thu 08:45] =>  0:29
CLOCK: [2019-03-04 Mon 14:59]--[2019-03-04 Mon 15:17] =>  0:18
:END:
- Processes
  - https://www.google.com/search?q=zotero+extract+pdf+annotations
- plugins
  - https://github.com/willsALMANJ/Zutilo
  - zotfile
  - better biblatex
- [[https://www.zotero.org/support/][documentation]]
- https://www.google.com/search?q=zotfile+sync+files&oq=zotfile+sync+files&aqs=chrome..69i57.4295j0j4&client=ubuntu&sourceid=chrome&ie=UTF-8
- Add-ons
  - Better BibTex
    - auto-exports to [[file:~/data/library/bib.bib]]
    - [[https://retorque.re/zotero-better-bibtex/][documentation]]
    - [[https://github.com/retorquere/zotero-better-bibtex][repo]]
  - [[http://zotfile.com/][ZotFile]]
    - Renames files
    - Allows custom file location at [[file:~/data/library/]]
- Performance- manual entry lag
  - [[https://forums.zotero.org/discussion/16733/manual-citation-entry-clunky][No answers, but question asked]]
****** Ansible install zotero
:PROPERTIES:
:ID:       cc61d5d6-981d-4013-a571-1cc15cf758bc
:END:
#+begin_src yaml
    - name: Check if Zotero is already installed
      command: ls /opt/Zotero_linux-x86_64/zotero
      register: zotero_installed
      failed_when: false
      changed_when: false

    - name: Download Zotero tarball
      get_url:
        url: "https://www.zotero.org/download/client/dl?channel=release&platform=linux-x86_64&version=7.0.11"
        dest: "/tmp/zotero.tar.bz2"
      when: zotero_installed.rc != 0

    - name: Extract Zotero
      ansible.builtin.unarchive:
        src: "/tmp/zotero.tar.bz2"
        dest: "/opt/"
        remote_src: yes
      when: zotero_installed.rc != 0
      become: yes

    - name: Create symlink for Zotero in /usr/local/bin
      file:
        src: /opt/Zotero_linux-x86_64/zotero
        dest: /usr/local/bin/zotero
        state: link
      become: yes

#+end_src

***** Globus
:PROPERTIES:
:ID:       e6aab15d-36b0-4b08-93b8-ef9f6254d950
:END:
-
- [[https://docs.globus.org/cli/][cli]]
  - [[https://docs.globus.org/cli/reference/][documentation]]
    - https://docs.globus.org/how-to/globus-connect-personal-linux/#globus-connect-personal-cli
**** Google
:PROPERTIES:
:ID:       bc60974d-3e95-4d60-8240-a3a2a7b5d36d
:END:
https://www.freecodecamp.org/news/use-google-search-tips/
https://superuser.com/questions/691189/totally-unable-to-switch-google-accounts
**** Cloud computing
:PROPERTIES:
:ID:       6422f98c-0da2-4eac-afd5-282900bfc0db
:END:
- AWS
  - getting location for scp
    - https://stackoverflow.com/questions/38679346/get-public-ip-address-on-current-ec2-instance
**** Virtualization
:PROPERTIES:
:ID:       b98b8294-293e-494b-b187-508b95f219fd
:END:
- docker
  - http://blog.adnansiddiqi.me/getting-started-with-docker/?utm_source=r_webdev_dockerphp&utm_medium=reddit&utm_campaign=c_r_webdev_dockerphp
**** Software hierarchical list by purpose
:PROPERTIES:
:ID:       e62e8746-512b-4b14-9e63-7cd119093975
:END:
https://github.com/xournalpp/xournalpp
- by application
  - pdf ocr
    - https://softwarerecs.stackexchange.com/questions/3412/free-ocr-software-that-makes-a-pdf-searchable-with-searchable-text-at-the-right
- https://unix.stackexchange.com/questions/28803/how-can-i-reduce-a-videos-size-with-ffmpeg/491918

- capture screen to gif
  - https://www.cockos.com/licecap/
- https://softwarerecs.stackexchange.com/questions/3412/free-ocr-software-that-makes-a-pdf-searchable-with-searchable-text-at-the-right
***** [[id:16DB2FD8-1988-48E4-8D8D-E69398823A70][LINK TO Operating Systems]]
:PROPERTIES:
:ID:       23319fff-191b-4581-bf37-9fd716a347dc
:END:
***** Package managers
:PROPERTIES:
:ID:       89fadb82-99b8-4db8-aa5e-e6e1c0c707eb
:END:
****** [[id:b16d0202-8d35-472b-b538-87a7d6a6cef7][LINK TO Conda]]
:PROPERTIES:
:CREATED:  [2021-11-15 Mon 12:12]
:ID:       19ac2879-7f14-41ab-b08d-9a3964f3d6d5
:END:
***** By application
:PROPERTIES:
:ID:       c18758a1-5db9-4ffe-8cc5-91c172a47331
:END:

****** Images
:PROPERTIES:
:ID:       57027e14-5ca6-4fdd-a50c-dcb98f81da39
:END:
https://imagemagick.org/script/montage.php
- capture screen to gif
  - https://www.cockos.com/licecap/
******* imagemagick
:PROPERTIES:
:ID:       9b764756-e8af-4ef8-91c3-5e52bbc6ee33
:END:
#+begin_src bash
for file in ~/Pre-PACE\ Images/*.pdf;
do
    base=$(basename -s .pdf "$file")
    echo $base
    convert -units PixelsPerInch "$file" -density 600 "${base}.tiff"
done
#+end_src

- https://askubuntu.com/questions/573246/quick-way-to-calculate-dimension-in-inch-for-photos-in-ubuntu
- https://askubuntu.com/questions/591733/rotate-images-from-terminal
- https://unix.stackexchange.com/questions/406454/how-to-get-the-dpi-of-an-image-file-png
****** Text editors
:PROPERTIES:
:ID:       e5de88cc-837e-45cb-b68d-e529a92a35d5
:END:
  - vim https://www.reddit.com/r/linux4noobs/comments/iy3mcc/vim_cheatsheet_for_noobs_with_corrections/
****** Data storage and transfer
:PROPERTIES:
:ID:       40a77a9b-24f3-44a3-97bf-fbf64d4e43e7
:END:

***** Version Control
:PROPERTIES:
:ID:       A9EE8CE0-ED58-4127-8B57-B53AE680B441
:END:
****** Web-based
:PROPERTIES:
:ID:       b2cb376f-bc11-430d-b22e-dd1e6e17f9b4
:END:
  - GitHub
    - Contributions
      - https://guides.github.com/activities/forking/
      - [[https://help.github.com/articles/fork-a-repo/][Forking]] allows for posting
      - [[https://help.github.com/articles/cloning-a-repository/][Cloning]] allows for work on a project
    - [[https://opensource.guide/][GitHub open source guide]]
      - [[https://opensource.guide/how-to-contribute/#anatomy-of-an-open-source-project][Anatomy of an open source project]]
        - People
          - Author
          - Owner
          - Maintainers
          - Contributors
          - Community members
        - Documentation
          - License
          - Readme- guidance for using the project
          - Contributing
          - Code of conduct
        - Tools to organize discussion
          - Issue tracker
          - Pull requests
          - Discussion forums
          - Chat
****** [[id:E56ADCB0-F6DD-4D58-8B68-CEDF7DC176E6][Git]]
:PROPERTIES:
:ID:       1f7c938f-dc02-41a6-bb00-9faa209c9e30
:END:
****** Emacs vc-mode
:PROPERTIES:
:ID:       9a8e4060-08df-4c6a-923c-4f3129c3754d
:END:
***** Operating Systems
:PROPERTIES:
:ID:       16DB2FD8-1988-48E4-8D8D-E69398823A70
:END:

where are osx dameons?
- Windows
  - http://stackoverflow.com/questions/7195503/setting-up-a-cron-job-in-windows
- Containers and virtual machines
  - [[https://stackoverflow.com/questions/16047306/how-is-docker-different-from-a-normal-virtual-machine][Docker vs. virtual machine]]
    - VMs have only virtual access to kernal through hypervisor
    - containers run apps natively on real kernal
    - Docker image contains only the differences from the base
    - Docker shares the kernal, VM does not
    - Containers have only libraries and settings to make software work
    - https://github.com/wsargent/docker-cheat-sheet
    - Containers can share kernal with other containers
    - https://www.docker.com/what-container
      - [[file:compend.org_imgs/20170828_091936_19148Pqg.png]]
  - Virtual Box
    - copying a VM- go to export appliance
    - in VirtualBox, double-press <CMD> to tab out to mac programs

****** image development
:PROPERTIES:
:CREATED:  [2019-05-29 Wed 14:47]
:ID:       82b8ccaa-3bb3-4a71-8123-bce4f20c5242
:END:
:LOGBOOK:
CLOCK: [2019-05-29 Wed 14:47]--[2019-05-29 Wed 15:05] =>  0:18
:END:

****** UNIX-based                                           :software:career:
:PROPERTIES:
:ID:       BDC42DA2-A632-4FB7-A586-E100B2A045DC
:CREATED:  [2019-08-15 Thu 16:17]
:END:
:LOGBOOK:
CLOCK: [2021-08-20 Fri 11:06]--[2021-08-20 Fri 11:09] =>  0:03
CLOCK: [2020-12-15 Tue 06:51]--[2020-12-15 Tue 07:08] =>  0:17
CLOCK: [2020-07-13 Mon 08:52]--[2020-07-13 Mon 09:04] =>  0:12
CLOCK: [2020-06-25 Thu 07:47]--[2020-06-25 Thu 08:13] =>  0:26
CLOCK: [2020-02-12 Wed 10:15]--[2020-02-12 Wed 10:19] =>  0:04
CLOCK: [2019-09-18 Wed 14:02]--[2019-09-18 Wed 14:40] =>  0:38
CLOCK: [2019-08-30 Fri 09:48]--[2019-08-30 Fri 09:53] =>  0:05
CLOCK: [2019-08-15 Thu 16:15]--[2019-08-15 Thu 16:45] =>  0:30
CLOCK: [2019-05-21 Tue 10:42]--[2019-05-21 Tue 11:04] =>  0:22
CLOCK: [2019-05-15 Wed 16:15]--[2019-05-15 Wed 19:33] =>  3:18
CLOCK: [2019-03-06 Wed 10:15]--[2019-03-06 Wed 12:14] =>  1:59
CLOCK: [2019-03-06 Wed 09:30]--[2019-03-06 Wed 10:00] =>  0:30
CLOCK: [2019-01-12 Sat 08:41]--[2019-01-12 Sat 08:51] =>  0:10
CLOCK: [2018-09-10 Mon 14:04]--[2018-09-10 Mon 14:43] =>  0:39
CLOCK: [2018-04-28 Sat 18:04]--[2018-04-28 Sat 18:05] =>  0:01
CLOCK: [2018-04-28 Sat 17:43]--[2018-04-28 Sat 17:45] =>  0:02
CLOCK: [2017-11-29 Wed 14:14]--[2017-11-29 Wed 15:00] =>  0:46
CLOCK: [2017-10-25 Wed 10:37]--[2017-10-25 Wed 10:48] =>  0:11
CLOCK: [2017-10-25 Wed 09:48]--[2017-10-25 Wed 10:23] =>  0:35
CLOCK: [2017-10-12 Thu 13:37]--[2017-10-12 Thu 13:40] =>  0:03
CLOCK: [2017-08-07 Mon 08:42]--[2017-08-07 Mon 09:14] =>  0:32
:END:
- https://docs.monadical.com/s/system-monitoring-tools
- https://github.com/autokey/autokey
- https://www.freecodecamp.org/news/linux-server-course-system-configuration-and-operation/
- https://stackoverflow.com/questions/49598797/remove-pdf-annotations-via-command-line

******* Processes
:PROPERTIES:
:ID:       0f7af99f-aee7-4572-97cb-2ab0a6adcfbd
:END:
- mount
  - https://unix.stackexchange.com/questions/53542/how-to-determine-the-filesystem-of-an-unmounted-device
  - https://unix.stackexchange.com/questions/18925/how-to-mount-a-device-in-linux
  - remove nfs stale file handle https://unix.stackexchange.com/questions/36297/how-can-i-resolve-a-stale-nfs-handle
  - umount https://stackoverflow.com/questions/7878707/how-to-unmount-a-busy-device
- https://www.google.com/search?q=linux+command+line+convert+jpg+to+pdf
- https://www.google.com/search?q=linux+change+rm+to+recycle+bin
  - https://github.com/andreafrancia/trash-cli
- https://www.google.com/search?q=linux+get+server+specs
- files
  - prevent delete
    - w/ chattr
      - sudo chattr +i <FILE> (remove with -i)
      - for dirs, sudo chattr -R +i <DIR>
    - https://www.google.com/search?q=linux+protect+files+from+delete
  - opening
    - https://forum.artixlinux.org/index.php/topic,1129.0.html
  - decompressing
    - https://www.reddit.com/r/linuxmasterrace/comments/et9e36/best_function_ever/
  - convert
    - https://askubuntu.com/questions/493584/convert-images-to-pdf
    - png to pdf- use ImageMagick convert command
  - merge pdfs
    - https://askubuntu.com/questions/2799/how-to-merge-several-pdf-files
- backup
  - https://www.reddit.com/r/commandline/comments/fr6the/linuxtimemachine_rsyncbased_osxlike_time_machine/
- storage setup and manipulations
  - http://www.rodsbooks.com/gdisk/walkthrough.html
- reporting
  - https://github.com/Heholord/FalconStats/tree/master
- create an interface
  - https://www.reddit.com/r/commandline/comments/f8nxyx/bash_how_is_it_possible_to_create_an_interface/
- install
  - UNetbootin https://tuxboot.org/installation/
- https://superuser.com/questions/185880/how-to-convert-a-pdf-document-to-png
******* Documentation and general education
:PROPERTIES:
:ID:       0aed9c3f-c216-40e8-a80d-7bc54443ef5c
:END:

  - general education- https://www.reddit.com/r/linux4noobs/comments/fntvl7/between_linux_essentials_linux_and_lpic1_which/
  - https://refspecs.linuxfoundation.org/
******* interfaces
:PROPERTIES:
:ID:       48801280-4d0f-4da3-a5da-6c661add36cd
:END:
  - https://github.com/tbodt/ish/projects/7
  - https://github.com/Airblader/i3
******* variables
:PROPERTIES:
:ID:       03fe412e-42fb-4fd8-b951-28562140b8a8
:END:
  - PATH
    - https://unix.stackexchange.com/questions/26047/how-to-correctly-add-a-path-to-path
      - note on config files where environmental variables can be set:
        - ~/.bashrc is config for interactive bash
        - ~/.profile / ~/.bash_profile- see https://askubuntu.com/questions/298532/why-wont-environment-variables-added-to-profile-show-up-in-screen
    - [[https://unix.stackexchange.com/questions/3809/how-can-i-make-a-program-executable-from-everywhere][How can I make a program executable from everywhere]]
  - Permissions
    - [[https://www.csun.edu/~csunitr/guides/unixpermissions.html][user permissions]]
    - common chmods
      - 600- owner read/write only
      - 660- owner plus group read/write
      - 664 everyone read / write
      - see [[https://mail.google.com/mail/u/0/#search/hiseq3000/15628d36aa827e42][this email]] from Paul at GTAC
      - [[http://stackoverflow.com/questions/3740152/how-to-set-chmod-for-a-folder-and-all-of-its-subfolders-and-files-in-linux-ubunt][How do I set chmod for a folder and all of its subfolders and files in Linux Ubuntu Terminal? {closed}]]
  - Symbolic links
    - [[https://stackoverflow.com/questions/16017500/how-to-see-full-symlink-path][see path with readlink -f]]
    - [[https://stackoverflow.com/questions/1727280/is-there-a-way-to-edit-a-symlink-without-deleting-it-first][stack: create and edit symlinks]]- ln -s /location/to/link linkname
    - @ files are symlinks?https://unix.stackexchange.com/questions/191717/what-does-the-symbol-mean-on-filenames

******* commands
:PROPERTIES:
:ID:       56b7a8f4-25d7-41a2-a0b5-cdb8a86481cc
:END:
  |----------------------+-------------------------------------|
  | function             | command                             |
  |----------------------+-------------------------------------|
  | mount partition      | udisksctl mount -b /dev/<PARTITION> |
  |                      |                                     |
  | unzip .bz2           | tar --bzip2 -xvf <FILE>             |
  | see cores            | [[https://unix.stackexchange.com/questions/218074/how-to-know-number-of-cores-of-a-system-in-linux][lscpu]]                               |
  | see systemd services | systemctl list-units --type=service |
  | see ubuntu version   | lsb_release -a                      |
- https://unix.stackexchange.com/questions/49786/finding-all-storage-devices-attached-to-a-linux-machine
******* X Window System
:PROPERTIES:
:ID:       bc5ab32a-387d-400a-b72c-ac29d743493f
:END:
- https://unix.stackexchange.com/questions/227876/how-to-set-custom-resolution-using-xrandr-when-the-resolution-is-not-available-i
******* documentation and general education
:PROPERTIES:
:ID:       ec0fbb20-4909-4ab7-8ba2-c48836743d01
:END:
- [[https://help.ubuntu.com/community/KeyboardShortcuts][linux keyboard shortcuts]]
- https://linustechtips.com/main/
- https://www.kernel.org/doc/html/latest/admin-guide/index.html
- general education- https://www.reddit.com/r/linux4noobs/comments/fntvl7/between_linux_essentials_linux_and_lpic1_which/
- https://refspecs.linuxfoundation.org/
******* Tools
:PROPERTIES:
:ID:       6057b49e-f8d4-42fb-8fec-5a80a802dd92
:END:
- tail - https://blog.robertelder.org/intro-to-tail-command/
- ifconfig
  - [[file:/usr/share/man/man8/ifconfig.8.gz]]
- gnu parallel
  - https://www.msi.umn.edu/support/faq/how-can-i-use-gnu-parallel-run-lot-commands-parallel
  - https://www.biostars.org/p/63816/
  - https://www.biostars.org/p/216905/
  - https://www.gnu.org/software/parallel/man.html#EXAMPLE:-Working-as-xargs--n1.-Argument-appending
******** trash-cli
:PROPERTIES:
:ID:       fe8ca086-cd69-4f40-a96d-3e99678c400e
:END:
- https://www.google.com/search?q=trash-cli+linux
#+begin_src bash
#
# Install
cd /opt
sudo git clone https://github.com/andreafrancia/trash-cli.git
cd trash-cli
sudo python setup.py install
#
#
#+end_src
******* ideas
:PROPERTIES:
:ID:       51710d48-bcbb-4709-bd5e-9774546bbbda
:END:
- linux it certification
  - https://training.linuxfoundation.org/announcements/upcoming-entry-level-it-certification-from-the-linux-foundation-to-provide-an-onramp-to-an-it-career/?SSAID=389818&sscid=91k4_ilkkv
- https://github.com/Fmstrat/winapps
******* processes
:PROPERTIES:
:ID:       3973f50f-db8f-4a82-8a8e-212d3e0b03af
:END:
- account management
  - https://www.google.com/search?q=unix+create+user
******* UNIX tools
:PROPERTIES:
:ID:       ca6d1cc3-2489-4616-8125-3ed27a3c3740
:END:
:LOGBOOK:
CLOCK: [2020-06-25 Thu 08:25]--[2020-06-25 Thu 08:30] =>  0:05
:END:
- execute interactive woman calls
  #+begin_src emacs-lisp
(defmacro with-minibuffer-input (form &rest inputs)
  (declare (indent 1))
  `(minibuffer-with-setup-hook
       (lambda ()
         (minibuffer-input-provider ',inputs))
     ,form))

(defun minibuffer-input-provider (inputs)
  (let ((hook (make-symbol "hook")))
    (fset hook (lambda ()
                 (remove-hook 'post-command-hook hook)
                 (when inputs
                   (when (= 0 (minibuffer-depth))
                     (error "Too many inputs"))
                   (when (cdr inputs)
                     (add-hook 'post-command-hook hook))
                   (insert (pop inputs))
                   (exit-minibuffer))))
    (add-hook 'post-command-hook hook)))
#+end_src
- https://github.com/denisidoro/navi
- awk
  - [[https://stackoverflow.com/questions/47091464/print-for-loop-input-filename-on-piped-awk-output][file name as variable]]
  - commands
    |----------------+------------------------------------|
    | function       | command                            |
    |----------------+------------------------------------|
    | <35>           | <35>                               |
    | set delimiters | 'BEGIN {FS="<DELIM>";OFS="<DELIM>" |
    |                |                                    |
  - processes
    - https://www.google.com/search?q=awk+pass+variable
    - [[https://stackoverflow.com/questions/19149731/use-awk-to-find-average-of-a-column][find average]]
    - https://www.google.com/search?q=awk+print+except+first
    - sorting
      - [[https://stackoverflow.com/questions/17048188/how-to-use-awk-sort-by-column-3][sort column]]
      - [[https://stackoverflow.com/questions/5917576/sort-a-text-file-by-line-length-including-spaces][by line length]]
    - variables
      - [[https://stackoverflow.com/questions/19075671/how-do-i-use-shell-variables-in-an-awk-script][external from shell]]
      - https://www.linuxnix.com/awk-scripting-learn-awk-built-in-variables-with-examples/
    - [[https://stackoverflow.com/questions/17001849/awk-partly-string-match-if-column-word-partly-matches][stack: awk partly string match (if column/word partly matches)]]
  - standards and best practice
  - documentation
    - [[http://www.tutorialspoint.com/awk/awk_basic_examples.htm][AWK - Basic Examples]]
  - applications
    - [[http://reasoniamhere.com/2013/09/16/awk-gtf-how-to-analyze-a-transcriptome-like-a-pro-part-1/][AWK GTF! How to Analyze a Transcriptome Like a Pro]]
  - reference
    - [[file:~/.basecamp/emacs/public_yasnippets/org-mode/software]]
- cron
  - commands
    | function                          | command                                   |
    |-----------------------------------+-------------------------------------------|
    | access user-specific crontab file | env EDITOR=nano sudo crontab -e -u <USER> |
    | see jobs                          | sudo crontab -u <USER> -l                 |
    | create job                        | sudo crontab -u <USER> -e                 |
  - [[https://stackoverflow.com/questions/4984725/how-to-test-a-weekly-cron-job][Test]]
  - [[https://askubuntu.com/questions/419548/how-to-set-up-a-root-cron-job-properly?noredirect=1&lq=1][Access root]]
  - [[https://crontab.guru/every-week][Guide to times]]
  - [[https://ole.michelsen.dk/blog/schedule-jobs-with-crontab-on-mac-osx.html][On macos]]
  - https://opensource.com/article/17/11/how-use-cron-linux
- curl
  - https://www.reddit.com/r/commandline/comments/am28qh/try_curl_httpwttrin_image_of_a_shell/
- cut
- du
  - - https://stackoverflow.com/questions/15141588/exclude-all-permission-denied-messages-from-du
- head and tail
  - to trim file header lines
    - e.g.: tail -n +2 file.txt > file.stdout
- https://github.com/tqdm/tqdm/blob/master/README.rst
- https://www.reddit.com/r/commandline/comments/7ejk45/what_are_some_of_awesome_curl_web_commands/
- https://www.reddit.com/r/commandline/comments/ad6ryp/10_tools_to_power_up_your_command_line_dev/
- http://www.theunixschool.com/p/awk-sed.html
- ls
  - [[https://unix.stackexchange.com/questions/48492/list-only-regular-files-but-not-directories-in-current-directory][List only regular files (but not directories) in current directory]]
  - file size w/ ls -l --block-size=M
- [[https://askubuntu.com/questions/185661/hide-files-ending-in-tilde][ls- hide files ending in tilde]]
- mail
  -
- make
  - - https://stackoverflow.com/questions/3239343/make-install-but-not-to-default-directories
- [[- https://www.xpdfreader.com/pdftotext-man.html][pdftotext]]
- pigz
  - https://zlib.net/pigz/
- rsync
  - [[https://rsync.samba.org/]]
  - commands
    |----------+---------|
    | function | command |
    |----------+---------|
    | <35>     | <35>    |
    |          |         |
  - processes
  - standards and best practice
  - [[https://rsync.samba.org/documentation.html][documentation]]
  - applications
  - reference
    - [[file:~/.basecamp/emacs/public_yasnippets/org-mode/software]]
- [[https://www.gnu.org/software/sed/][sed]]
  - https://www.google.com/search?q=sed+replace+space+with+tab
  - [[https://stackoverflow.com/questions/19151954/how-to-use-variables-in-a-command-in-sed][use shell variables]]
  - [[https://stackoverflow.com/questions/5410757/how-to-delete-from-a-text-file-all-lines-that-contain-a-specific-string][delete lines with pattern]]
  - [[https://unix.stackexchange.com/questions/99350/how-to-insert-text-before-the-first-line-of-a-file#:~:text=14%20Answers&text=Use%20sed%20's%20insert%20(%20i,text%20in%20the%20preceding%20line.&text=Also%20note%20that%20some%20non,effect%20as%20with%20GNU%20sed%20).&text=Echo%20is%20used%20to%20get%20the%20text.][insert before first line]]
  - https://www.google.com/search?q=sed+remove+first+line
  - https://www.google.com/search?q=sed+remove+lines+containting+string
  - [[https://www.youtube.com/watch?v=3cLbeYQ2Veg][youtube: sed commands in linux]]
  - [[http://www.brunolinux.com/02-The_Terminal/Find_and%2520Replace_with_Sed.html][Find and replace with SED]]
  - Then, using sed: sed -e '5,10d;12d' filename (deletes lines 5-10 and 12)
  - https://www.google.com/search?q=sed+add+above+first+line
- ssh
  - https://superuser.com/questions/8077/how-do-i-set-up-ssh-so-i-dont-have-to-type-my-password
  - https://stackoverflow.com/questions/12715233/why-can-i-ping-a-server-but-not-connect-via-ssh
  - https://serverfault.com/questions/334448/why-is-ssh-password-authentication-a-security-risk
  - https://dev.to/zduey/how-to-set-up-an-ssh-server-on-a-home-computer
- to concat csvs- https://www.quora.com/How-do-you-combine-multiple-csv-files-into-a-single-file-using-the-command-line
- unzip - https://askubuntu.com/questions/994731/how-to-skip-unzipping-a-file-that-already-exists
- Unison
  - commands
    |----------+---------|
    | function | command |
    |----------+---------|
    | <35>     | <35>    |
    |          |         |
  - processes
  - [[https://www.cis.upenn.edu/~bcpierce/unison/download/releases/stable/unison-manual.html][documentation]]
  - applications
- X11
  - https://www.windowmaker.org/
******** grep
:PROPERTIES:
:ID:       e4cb764e-f58e-42e7-bf0a-1b2c033a97af
:END:
- grep
-
********* Processes
:PROPERTIES:
:ID:       ef591f16-12ea-4249-af54-61f348e1c919
:END:
- [[https://www.google.com/search?q=grep+through+multiple+files+in+a+directory][google:grep through multiple files in a directory]]
- https://www.thegeekstuff.com/2011/10/grep-or-and-not-operators/
- https://unix.stackexchange.com/questions/37313/how-do-i-grep-for-multiple-patterns-with-pattern-having-a-pipe-character/37316
-
******** gunzip / gzip
:PROPERTIES:
:ID:       ac06809f-10b9-4b79-98f6-7ed6fb5f9232
:END:
- https://www.google.com/search?q=gzip+force
- https://www.google.com/search?q=gunzip+keep+source
******* Linux                                               :software:career:
:PROPERTIES:
:CREATED:  [2020-01-09 Thu 15:46]
:ID:       cd560390-aa1e-4c9e-8317-08610e5de42a
:END:
default applications defined in - [[file:~/.config/mimeapps.list]]
https://www.reddit.com/r/commandline/comments/1epjppl/10_cli_tools_that_made_the_biggest_impact_on/
******** Linux cookbook
********* APT
******** Processes- see [[id:b33a7727-70b2-4743-a8cf-025a0803c3cc][Ubuntu Processes]]
:PROPERTIES:
:ID:       523b0a71-a7b3-48af-be83-35f64616f844
:END:
******** Ubuntu                                                    :software:
:PROPERTIES:
:ID:       c28ef36f-5b5c-4789-90da-270e56fc4898
:CREATED:  [2019-06-20 Thu 10:34]
:END:
:LOGBOOK:
CLOCK: [2022-05-20 Fri 08:13]--[2022-05-20 Fri 08:39] =>  0:26
CLOCK: [2019-07-18 Thu 16:09]--[2019-07-18 Thu 16:25] =>  0:16
CLOCK: [2019-06-20 Thu 10:34]--[2019-06-20 Thu 11:49] =>  1:15
CLOCK: [2019-06-20 Thu 08:31]--[2019-06-20 Thu 10:30] =>  1:59
CLOCK: [2019-06-15 Sat 09:34]--[2019-06-15 Sat 09:46] =>  0:12
CLOCK: [2019-06-06 Thu 11:27]--[2019-06-06 Thu 11:57] =>  0:30
CLOCK: [2019-06-04 Tue 17:34]--[2019-06-04 Tue 17:38] =>  0:04
CLOCK: [2019-06-02 Sun 08:37]--[2019-06-02 Sun 08:49] =>  0:12
CLOCK: [2019-06-01 Sat 09:36]--[2019-06-01 Sat 09:40] =>  0:04
CLOCK: [2019-08-13 Tue 12:17]--[2019-08-13 Tue 12:36] =>  0:19
CLOCK: [2019-08-12 Mon 13:28]--[2019-08-12 Mon 14:21] =>  0:53
CLOCK: [2019-07-18 Thu 16:09]--[2019-07-18 Thu 16:25] =>  0:16
CLOCK: [2019-06-20 Thu 10:34]--[2019-06-20 Thu 11:49] =>  1:15
CLOCK: [2019-06-20 Thu 08:31]--[2019-06-20 Thu 10:30] =>  1:59
CLOCK: [2019-06-15 Sat 09:34]--[2019-06-15 Sat 09:46] =>  0:12
CLOCK: [2019-06-06 Thu 11:27]--[2019-06-06 Thu 11:57] =>  0:30
CLOCK: [2019-06-04 Tue 17:34]--[2019-06-04 Tue 17:38] =>  0:04
CLOCK: [2019-06-02 Sun 08:37]--[2019-06-02 Sun 08:49] =>  0:12
CLOCK: [2019-06-01 Sat 09:36]--[2019-06-01 Sat 09:40] =>  0:04
:END:
https://swaywm.org/
https://stackoverflow.com/questions/3958343/how-can-i-set-a-default-font-inconsolata-in-my-emacs-el-in-ubuntu
https://vitux.com/how-to-change-cursor-size-on-ubuntu-desktop/
https://www.reddit.com/r/linux4noobs/comments/114w615/tutorial_creating_quick_and_dirty_desktop_files/
********* Processes
:PROPERTIES:
:ID:       b33a7727-70b2-4743-a8cf-025a0803c3cc
:END:
- make remap caps and alt permanent ([[file:~/.xmodmap]])
  - https://superuser.com/questions/277990/how-do-i-swap-alt-and-windows-keys-with-xmodmap
  - https://unix.stackexchange.com/questions/107566/how-to-swap-ctrl-and-capslock-using-xmodmap
********** 0 Flat
:PROPERTIES:
:ID:       1301df69-90cf-415c-97b3-7ec334671315
:END:
*********** See which program opens which file
:PROPERTIES:
:ID:       ccad8232-1159-401f-bd38-0458525d498f
:END:
#+begin_src bash :results replace :cache no
xdg-mime query filetype ~/frontiers.svg
xdg-mime query default image/svg+xml
#+end_src

#+RESULTS[8c065581b173de73b587e41ceaedeb08eeebe78a]:
| image/svg+xml         |
| org.gnome.eog.desktop |
*********** Change which program opens which file
:PROPERTIES:
:ID:       232f595b-11fa-4887-8e13-eb2c573bb4ac
:END:
#+begin_src bash :results replace
xdg-mime default org.inkscape.Inkscape.desktop image/svg+xml
xdg-mime query default image/svg+xml
#+end_src

#+RESULTS[4d08d758a783b3fa112f4dd7483da67128c98e52]:
: org.inkscape.Inkscape.desktop

*********** Screenshot with scrot
:PROPERTIES:
:ID:       d5df9f10-7158-40bc-bfd7-2fe1efa39bb0
:END:
- [[https://man.archlinux.org/man/scrot.1][documentation]]
#+begin_src bash
scrot -s -f /tmp/test.png
#+end_src

*********** Install arial font
:PROPERTIES:
:ID:       199eec67-eca2-42eb-b50a-d9dcfddda881
:END:
#+begin_src bash
sudo apt update
sudo apt install ttf-mscorefonts-installer
fc-cache -f -v
fc-list | grep -i arial || true
#+end_src

*********** Change file opening assosications in mime
:PROPERTIES:
:ID:       099eb771-93c8-47fb-8f8e-7330574b37da
:END:
https://askubuntu.com/questions/204823/how-do-you-change-the-default-document-viewer-to-okular
*********** battery optimization
:PROPERTIES:
:ID:       408b8349-f711-4ff9-bd34-50d5c42fb92a
:END:
https://www.reddit.com/r/linux4noobs/comments/zdjqc9/battery_life_on_linux_sucks_out_of_the_box_i_got/
********** Devices
:PROPERTIES:
:ID:       016761e2-2f39-4cdd-81d6-9b59589595bc
:END:
  - https://askubuntu.com/questions/56155/how-can-i-change-brightness-through-terminal
- persistent new monitor config
    - https://askubuntu.com/questions/754231/how-do-i-save-my-new-resolution-setting-with-xrandr
- https://askubuntu.com/questions/62249/how-do-you-change-brightness-color-and-sharpness-from-command-line
- https://askubuntu.com/questions/149054/how-to-change-lcd-brightness-from-command-line-or-via-script
- audio https://askubuntu.com/questions/998336/disable-and-enable-audio-output-from-the-command-line

********** keyboard remapping
:PROPERTIES:
:ID:       46cb2ebb-0651-42d8-8ef2-d4da5dac57a2
:END:
  - https://askubuntu.com/questions/321510/set-context-menu-key-to-function-as-right-control
- https://askubuntu.com/questions/80254/how-do-i-turn-off-caps-lock-the-lock-not-the-key-by-command-line
********** clipboard
:PROPERTIES:
:ID:       ebc6984b-a4ed-4dcc-8909-3f5b5fd26998
:END:
  - https://askubuntu.com/questions/382767/how-to-pipe-dump-clipboard-contents-to-a-file
- https://www.google.com/search?q=linux+add+to+path
- https://unix.stackexchange.com/questions/1519/how-do-i-delete-a-file-whose-name-begins-with-hyphen-a-k-a-dash-or-minus
********** Miscellaneous
:PROPERTIES:
:ID:       150b951d-ea1c-407d-8729-fa3e1cf6e6bc
:END:
- https://askubuntu.com/questions/3697/how-do-i-install-fonts
- https://www.how2shout.com/how-to/how-to-install-ubuntu-linux-on-android-without-root.html
********** File system navigation
:PROPERTIES:
:ID:       51308164-ec4b-4765-8e1c-9d03a5e50e92
:END:
- https://www.google.com/search?q=linux+see+largest+files+in+all+subdirectories
- Find
  - find / -xdev -type f -size +1G 2>&1 | grep -v "Permission denied"
  - https://stackoverflow.com/questions/12522269/how-to-find-the-largest-file-in-a-directory-and-its-subdirectories
- find large files sudo du -a /home | sort -n -r | head -n 10
- Search
  - Recursively search subdirectories
    - [[https://askubuntu.com/questions/307876/how-to-search-for-files-recursively-into-subdirectories][How to Search for Files Recursively into Subdirectories]]
    - [[https://stackoverflow.com/questions/1987926/how-do-i-grep-recursively][Recursively search subdirectories with grep -r "<SEARCH>" .]]
********** Installs
:PROPERTIES:
:ID:       20caab14-d223-416e-8917-b19e4ad9a1aa
:END:
- https://victoria.dev/verbose/how-to-set-up-a-fresh-ubuntu-desktop-using-only-dotfiles-and-bash-scripts/

- https://unix.stackexchange.com/questions/159094/how-to-install-a-deb-file-by-dpkg-i-or-by-apt
********** Sysadmin
:PROPERTIES:
:ID:       25e57644-f710-41ba-8bf4-d6ee9cc2c9c6
:END:
*********** Power management
:PROPERTIES:
:ID:       4acf4f7b-607d-457c-b3dc-6534523895f4
:END:
- power management - https://askubuntu.com/questions/1078939/ubuntu-18-04-battery-life

*********** Default behavior
:PROPERTIES:
:ID:       2dd15aeb-6460-44b8-86a7-2d845ebbfff5
:END:
- set software to open files
  - https://help.ubuntu.com/community/AddingMimeTypes
  - https://askubuntu.com/questions/90214/how-do-i-set-the-default-program
  - in file:~/repos/dotfiles
*********** systemd (system daemons)
:PROPERTIES:
:ID:       06a7bc5a-03b2-433c-950c-5ecddf06e0ab
:END:
  - emacs client
    - [[file:~/.config/systemd/user/emacs.service]]
    - https://www.emacswiki.org/emacs/EmacsAsDaemon#toc2
  - box rclone mount
    - https://www.jamescoyle.net/how-to/3116-rclone-systemd-startup-mount-script
    - [[file:/usr/share/man/man1/fusermount]]
    - [[file:/etc/systemd/system/rclone.service]]
    - https://www.google.com/search?q="rclone"+"box"+"systemd"+"daemon"+"mount"
  - Google drive sync via insync
    - [ ] document start process, systemd
  - general
    - https://www.tutorialdocs.com/article/learn-systemd-commands-in-20-minutes.html
    - https://www.linode.com/docs/quick-answers/linux/start-service-at-boot/


*********** Connections
:PROPERTIES:
:ID:       c8618dfb-d439-4062-8bd0-c2061adcfc03
:END:
- allow access to local via ssh
  - sudo ufw allow ssh
  - sudo ufw enable
  - ifconfig -a (not lo, for wifi is like wlp3s0), use inet
  - can test on local
- ports and firewall https://www.cyberciti.biz/faq/how-to-open-firewall-port-on-ubuntu-linux-12-04-14-04-lts/

*********** Boot
:PROPERTIES:
:ID:       9038acc6-e265-4d85-a313-9b203ab30876
:END:
- https://www.linode.com/docs/quick-answers/linux/start-service-at-boot/

*********** Disks and mounts
:PROPERTIES:
:ID:       39b0161e-4636-4b18-b687-4e63e30c58a2
:END:
- https://askubuntu.com/questions/381261/file-system-and-mount-point
- https://help.ubuntu.com/community/DiskSpace
- https://askubuntu.com/questions/33697/how-do-i-add-swap-after-system-installation
- swap
  - [[https://stackoverflow.com/questions/33412987/what-is-the-meaning-of-running-out-of-swap][stack: What is the meaning of running out of swap? {closed}]]
  - swapon -s
  - http://www.thegeekstuff.com/2010/08/how-to-add-swap-space/?utm_source=feedburner
  - https://www.computerhope.com/unix/mkswap.htm
- https://askubuntu.com/questions/283559/how-can-i-run-disk-utility-in-terminal-via-a-comand-line
- https://unix.stackexchange.com/questions/53542/how-to-determine-the-filesystem-of-an-unmounted-device
- https://unix.stackexchange.com/questions/18925/how-to-mount-a-device-in-linux
*********** Miscellaneous
:PROPERTIES:
:ID:       0371c28f-01be-4a97-b6ff-b8d44ba10354
:END:
- https://askubuntu.com/questions/113419/how-can-i-reset-path-to-its-default-value-in-ubuntu

- restore default bash profile files, here for .bashrc
  #+begin_src bash
# Make temporary backup of current .bashrc
cp ${HOME}/.bashrc /tmp/

# Replace current with default .bashrc from /etc/skel
cp /etc/skel/.bashrc ${HOME}/.bashrc
#+end_src
  - reference https://askubuntu.com/questions/404424/how-do-i-restore-bashrc-to-its-default
- for dir sizes, use ncdu
- https://unix.stackexchange.com/questions/87908/how-do-you-empty-the-buffers-and-cache-on-a-linux-system
*********** system restore
:PROPERTIES:
:ID:       c6b8fecd-0da7-4246-8ded-6ac016d42305
:END:
  - https://github.com/teejee2008/timeshift
*********** users and groups
:PROPERTIES:
:ID:       2c0b0cef-7551-4e6b-b7a6-1ad9d80460a1
:END:
    | function                  | command                   |
    |---------------------------+---------------------------|
    | list users                |                           |
    | list groups               |                           |
    | list group members        | getent group <GROUPNAME>  |
    | add user                  | useradd <USERNAME>        |
    | set password              | passwd <USERNAME>         |
    | add group                 | groupadd <GROUPNAME>      |
    | add user to group         | usermod -g <GROUP> <USER> |
    | change user primary group |                           |

*********** System description queries
:PROPERTIES:
:ID:       f3db8e59-cdc9-4f17-8e35-1c0c5f5b2626
:END:
- https://unix.stackexchange.com/questions/218074/how-to-know-number-of-cores-of-a-system-in-linux

- https://www.google.com/search?q=ubuntu+see+disk+space
********* General reference
:PROPERTIES:
:ID:       ea015c16-b999-4079-8cc9-eb98c694ed25
:END:
- https://support.displaylink.com/knowledgebase/articles/675136-how-to-configure-displaylink-displays-on-ubuntu

- structure
  - df disks
    - spaces for RAM
      - /run
      - /run/shm
********* [[id:1628b46e-4838-4f11-bc85-cb4d757e96f6][My computer setup]]
:PROPERTIES:
:ID:       85b23b2f-5635-4e17-9a69-0d978d394994
:END:
********* Server build
:PROPERTIES:
:ID:       BCD2D984-7185-47C0-9ECB-B1F40314595C
:END:

- [ ] server-linux build
  - https://www.reddit.com/r/IWantToLearn/comments/87brq8/iwtl_how_to_build_a_home_server/?st=jfjrnjjw&sh=775fb75f
  - https://www.reddit.com/r/buildapc/comments/6g40g4/i_dedicated_my_last_3_years_to_buildapc/
  - hackintosh-compatible hardware? https://www.google.com/search?q=cheapest+hackintosh+hardware&rlz=1CDGOYI_enUS769US769&oq=cheapest+hackintosh+hardware&aqs=chrome..69i57.20469j0j4&hl=en-US&sourceid=chrome-mobile&ie=UTF-8
    - - https://www.reddit.com/r/buildapc/comments/2lhvjr/build_complete_hackintosh_with_a_side_of_gaming/
  - [[https://askubuntu.com/questions/647495/which-is-most-timemachine-like-backup-program-for-ubuntu][stack:Which is Most TimeMachine-like Backup Program for Ubuntu?]]
  - https://askubuntu.com/questions/308897/convert-ubuntu-physical-machine-to-virtual-machine
  - https://askubuntu.com/questions/32499/migrate-from-a-virtual-machine-vm-to-a-physical-system?rq=1

********** Work build
:PROPERTIES:
:ID:       6C960771-38BB-4A48-95ED-576D79547489
:END:
:LOGBOOK:
CLOCK: [2018-11-25 Sun 11:39]--[2018-11-25 Sun 13:37] =>  1:58
CLOCK: [2018-11-16 Fri 08:26]--[2018-11-16 Fri 11:24] =>  2:58
CLOCK: [2018-11-15 Thu 15:00]--[2018-11-15 Thu 15:34] =>  0:34
CLOCK: [2018-10-29 Mon 15:17]--[2018-10-29 Mon 16:43] =>  1:26
CLOCK: [2018-10-29 Mon 13:55]--[2018-10-29 Mon 14:24] =>  0:29
:END:
- WebDAV setup
  - https://linuxize.com/post/how-to-set-up-apache-virtual-hosts-on-ubuntu-18-04/
  - https://linuxconfig.org/webdav-server-setup-on-ubuntu-linux
  - http://10.21.36.114/index.html
  - Process
    - Designate location
    - Enable modules
    - Configure
  - stack
    - apache2
  - https://www.digitalocean.com/community/tutorials/how-to-configure-webdav-access-with-apache-on-ubuntu-14-04
    - Glossary
      - Apache is a web server
      - "WebDAV is an extension of the HTTP protocol that allows users to manage files on servers"
    -
- hardware
- stack
  - ubuntu 18.04 LTS
    - [[https://help.ubuntu.com/lts/serverguide/index.html.en][Documentation]]
      - [[https://help.ubuntu.com/lts/serverguide/openssh-server.html.en][OpenSSH Server]]
- [ ] connection
  - remote desktop
  - ssh jeff@10.21.36.114
  - keys?
  - stack
    - [[https://www.openssh.com/manual.html][openssh]]
- [ ] data synchronization
  - stack
    - [[https://rclone.org/box/][rclone]]
    - [[https://wustl.app.box.com/folder/0][wustl box]]
  - [ ] sync library box storage with rclone
  - [ ] sync project work with github
    - - https://pages.github.com/
    - limit project directories to 1 gig https://help.github.com/articles/what-is-my-disk-quota/
  - chron sync wrapper
- [ ] os maintenance
  - daemons
    - cron work see ~/cron
      - [ ] scheduled reports
        - https://www.linux.com/blog/linux-101-check-disk-space-command
      - notes and resources
        - [[https://help.ubuntu.com/community/CronHowto][Ubuntu documentation CronHowto]]
      - ideas
        - https://www.google.com/search?q=best+cron+job+examples&oq=best+cron+job+examples&aqs=chrome..69i57.11620j1j9&sourceid=chrome&ie=UTF-8
  - [ ] keyboard layout control
  - [ ] directory management
    - see [[file:~/Box%20Sync/personal/maintenance/maintenance.org::*Information%20Maintenance][Information Maintenance]]
    - [[http://www.pathname.com/fhs/pub/fhs-2.3.pdf][file system hierarchy standard]]
    - https://unix.stackexchange.com/questions/15230/file-and-directory-naming-conventions
      - "remember as you think up a structure that permissions are hierarchical. In order for somebody to have permissions on a given folder, they need to have at least execute permissions on every folder ABOVE that folder. If you have anything in your home directory that you share, it needs to be near the top"
    - https://unix.stackexchange.com/questions/201768/storing-shell-scripts
  - RESUME w/ weekly system report script- exit code 2
- [ ] work-linux time machine and portability
- [ ] export
- [ ] backup work machine
- ideas
  - [ ] change rm to direct to del folder
- [X] past work
  - [X] setup key pair with macos
    - see https://www.thegeekstuff.com/2008/11/3-steps-to-perform-ssh-login-without-password-using-ssh-keygen-ssh-copy-id
    - also alias to work-linux [[file:~/.bash_profile]]

*********** update
:PROPERTIES:
:ID:       66803E55-A70F-4D49-A4D6-31520A3617DC
:END:

*********** Connections
:PROPERTIES:
:ID:       449D6647-FF79-48FE-8649-DD2DEF23FB93
:CREATED:  [2019-03-17 Sun 15:46]
:END:

- [ ] connections
  - [ ] remote desktop or ssh gui
    - https://www.makeuseof.com/tag/ubuntu-remote-desktop-builtin-vnc-compatible-dead-easy/
  - [ ] wine windows

********* Ideas
:PROPERTIES:
:ID:       c8c52c75-195d-48dd-85ff-0ca43524dd7f
:END:
- [ ] setup printer interface
  - https://ubuntuforums.org/showthread.php?t=1900967
- [ ] setup terminal emulator mouseless copy
  - https://stackoverflow.com/questions/3348800/gnome-terminal-how-to-copy-selection-to-clipboard-automatically/3432302
  - https://www.google.com/search?q=gnome-terminal+vim+copy+paste&oq=gnome-terminal+vim+copy&aqs=chrome.1.69i57j0.5563j0j7&client=ubuntu&sourceid=chrome&ie=UTF-8
  - https://www.google.com/search?q=tmux+mouseless+vim+copy&oq=tmux+mouseless+vim+copy&aqs=chrome..69i57j69i64.21772j0j7&client=ubuntu&sourceid=chrome&ie=UTF-8
  - need copy paste out of gnome terminal into X clipboard
    - https://askubuntu.com/questions/413436/copy-current-terminal-prompt-to-clipboard
  - https://wiki.termux.com/wiki/Main_Page
  - https://unix.stackexchange.com/questions/91863/terminal-copy-from-cli-without-using-mouse

- [ ] setup low power procedure for macbook linux
- https://www.google.com/search?q=libreoffice+save+new+slide+layout
- get better highlightin on ubuntu menus
- linux portable OS
  - through git repo calls
    - ~/.emacs.d
    - ~/org
    -
- I3 control panel?
- https://www.reddit.com/r/i3wm/comments/a00s8p/made_myself_a_pretty_popup_cheat_sheet/
- how to vc and sync config files
- https://www.google.com/search?q=libreoffice+save+new+slide+layout
- get better highlightin on ubuntu menus
- linux portable OS
  - through git repo calls
    - ~/.emacs.d
    - ~/org
    -
- I3 control panel?
- https://www.reddit.com/r/i3wm/comments/a00s8p/made_myself_a_pretty_popup_cheat_sheet/
- [ ] setup terminal emulator mouseless copy
  - https://stackoverflow.com/questions/3348800/gnome-terminal-how-to-copy-selection-to-clipboard-automatically/3432302
  - https://www.google.com/search?q=gnome-terminal+vim+copy+paste&oq=gnome-terminal+vim+copy&aqs=chrome.1.69i57j0.5563j0j7&client=ubuntu&sourceid=chrome&ie=UTF-8
  - https://www.google.com/search?q=tmux+mouseless+vim+copy&oq=tmux+mouseless+vim+copy&aqs=chrome..69i57j69i64.21772j0j7&client=ubuntu&sourceid=chrome&ie=UTF-8
  - need copy paste out of gnome terminal into X clipboard
    - https://askubuntu.com/questions/413436/copy-current-terminal-prompt-to-clipboard
  - https://wiki.termux.com/wiki/Main_Page
  - https://unix.stackexchange.com/questions/91863/terminal-copy-from-cli-without-using-mouse
- https://www.reddit.com/r/commandline/comments/ceo8lt/ideas_for_good_use_of_the_caps_lock_key/
- http://n-o-d-e.net/post/141489192021/how-to-create-a-handheld-linux-terminal-v2
- linux external brain project
********** USB build
:PROPERTIES:
:ID:       D367D5DD-4E6E-43EC-A1FF-F3F14B24D2D9
:END:

- porteus
  - [[http://porteus.org/][hoempage]]
- - linux
  - toolbox
    - OS with apps
    - 7zip
    - gparted
    - emacs for all OS
  - show battery life



******** General and miscellaneous
:PROPERTIES:
:ID:       4eb4af79-483e-40d4-92e6-5c52b5aeabca
:END:
- https://www.reddit.com/r/commandline/comments/wwib48/good_alternatives_to_man_pages_to_learn_concise/
- https://www.ventoy.net/en/index.html
- https://linuxjourney.com/
- https://www.reddit.com/r/linux4noobs/comments/qwp95g/most_noobs_would_benefit_from_reading_the_linux/
- https://www.kernel.org/doc/html/latest/admin-guide/index.html
- https://www.reddit.com/r/linux4noobs/comments/p4198y/i_recently_find_out_this_command_line_tool_called/
- https://github.com/cheesecakeufo/komorebi#what-is-komorebi
- https://training.linuxfoundation.org/announcements/upcoming-entry-level-it-certification-from-the-linux-foundation-to-provide-an-onramp-to-an-it-career/?SSAID=389818&sscid=91k4_ilkkv
- [[https://help.ubuntu.com/community/KeyboardShortcuts][linux keyboard shortcuts]]
- https://linustechtips.com/main/
******* MacOS
:PROPERTIES:
:ID:       80A0FABE-EB39-4BFC-8478-8044E6D84761
:END:

- http://www.theinstructional.com/guides/disk-management-from-the-command-line-part-2
- https://www.howtogeek.com/312755/what-is-the-process-windowserver-and-why-is-it-running-on-my-mac/
- [[https://apple.stackexchange.com/questions/294013/how-to-allow-install-of-non-app-store-or-identified-developers-on-macos-sierra?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa][How to allow install of non app store or identified developers on MacOS Sierra]]
- Command Table
  | Function             | Command                   | Notes                                                                                                               |
  |----------------------+---------------------------+---------------------------------------------------------------------------------------------------------------------|
  |                      |                           | <20>                                                                                                                |
  | List process to kill | ps -A\ grep -m1 <PROCESS> | https://stackoverflow.com/questions/11546765/how-to-get-the-pid-of-a-process-by-giving-the-process-name-in-mac-os-x |
  | Kill process         | kill -9 <PROCESS ID>      | http://blog.houen.net/kill-program-mac-os-x-terminal/                                                               |
  |                      |                           |                                                                                                                     |
- https://stackoverflow.com/questions/17935301/how-to-force-mac-os-to-open-search-with-google-in-chrome
- Window management
  - Default layouts
    - https://github.com/jigish/slate
    - http://autumnapps.com/breeze/
    - https://apple.stackexchange.com/questions/3133/how-do-i-make-windows-save-their-position-on-screen-after-re-attaching-a-display
- [[http://osxdaily.com/2010/06/09/screen-capture-in-mac-os-x/][Screen capture]]
- https://apple.stackexchange.com/questions/55432/keyboard-shortcut-for-restoring-applications-from-the-mac-os-x-dock
- hide dock: <CMD>+<ALT>+d
- [[http://www.chriswrites.com/how-to-view-and-kill-processes-using-the-terminal-in-mac-os-x/][How to View and Kill Processes Using the Terminal in Mac OS X]]
- Check out the brew edit command
http://www.mitchchn.me/2014/os-x-terminal/

  - osx
    - [[http://apple.stackexchange.com/?tab=featured][mac stack exchange]]
    - [[http://zmjones.com/mac-setup/][setting up osx for data analysis]]
    - [[http://osxdaily.com/2009/02/25/show-hidden-files-in-os-x/][hidden files]]

******* General reference
:PROPERTIES:
:ID:       234aa816-28c7-4a09-bdc0-0116322d0b9c
:END:
- https://www.reddit.com/r/commandline/comments/ka6izh/open_book_study_group_for_the_linux_command_line/
- https://blog.robertelder.org/commandline
- guides, tutorials, cheatsheets
  - http://www.ee.surrey.ac.uk/Teaching/Unix/
  - [[http://linuxcommand.org/][LinuxCommand.org]]
  - [[http://korflab.ucdavis.edu/Unix_and_Perl/current.html][UC Davis Unix and Perl for biologists]]
  - http://www.chm.bris.ac.uk/compres/unix/index.html
  - http://www.commandlinefu.com/commands/browse
  - [[http://catb.org/jargon/html/U/Unix.html][Unix name origin]]
  - [[https://sanctum.geek.nz/arabesque/unix-as-ide-introduction/][Unix as IDE: Introduction]]
  - [[http://cecs.wright.edu/~p/mateti/Courses/333/Top/index.html][Wright State CEG 333: Introduction to Unix]]
  - [[http://www.commandlinefu.com/commands/browse/sort-by-votes][commandlinefu]]
  - [[https://unix.stackexchange.com/questions/12762/how-do-i-temporarily-bypass-an-alias-in-tcsh][How do I temporarily bypass an alias in tcsh?]]
  - [[https://unix.stackexchange.com/][stack: unix]]
  - [[https://en.wikibooks.org/wiki/Guide_to_Unix][wikibooks: unix]]
  - http://www.thegeekstuff.com/
  - https://sneak.berlin/20191011/stupid-unix-tricks/
- standards and best practices
  - POSIX
  - naming conventions- [[https://unix.stackexchange.com/questions/49008/for-filenames-are-underscores-or-dashes-more-common-in-unix-file-names][stack: For filenames, are underscores or dashes more common in Unix file names? {closed}]]
- file structure
  - https://unix.stackexchange.com/questions/4186/what-is-usr-local-bin
- POSIX
  - [[https://github.com/dylanaraps/pure-sh-bible][pure sh bible]]
******* Ideas
:PROPERTIES:
:ID:       1ddc60ab-106c-4c31-835e-c36e54427b13
:END:
- idea for citrix script- - https://www.reddit.com/r/commandline/comments/fyla88/ux_design_principles_for_command_line_interfaces/
- ideas- check disk space https://www.cyberciti.biz/tips/shell-script-to-watch-the-disk-space.html
- GNU - [[https://www.gnu.org/help/help.html][Helping GNU]]
- [[https://www.reddit.com/r/commandline/comments/7d5fwa/jobson_automatically_turn_commandline/][reddit: automatically turn command-line applications into webapps]]

***** Text file
:PROPERTIES:
:ID:       757b5966-a944-4e73-99b3-561afd93e5ac
:END:
***** [[id:670ed8f4-bb93-4d93-b9ea-a142a599169f][pdf files]]
:PROPERTIES:
:ID:       4bc3532d-09d0-4098-be6a-c02d4cbb5070
:END:

**** Software engineering                                               :ref:
:PROPERTIES:
:ID:       d4c65ebf-8abd-4876-8b79-08ae9fcc50c2
:END:
https://abseil.io/resources/swe-book
***** DevOps
:PROPERTIES:
:ID:       c99a9302-4af9-480a-8314-5938cc0f2454
:END:
[[id:4e160919-3df9-4a0e-afb0-66d2f1828fd4][Org-mode literate programming for devops]]
***** General reference
:PROPERTIES:
:ID:       e3b5ab14-c098-495f-89e7-3f02a02799d6
:END:
  - Miscellaneous
    - [[http://powazek.com/posts/1655][Programmers are Tiny Gods]]
  - Concepts
    - Design and architecture
      - https://en.wikipedia.org/wiki/Infrastructure_as_code#Tools
      - https://en.wikipedia.org/wiki/Big_ball_of_mud
      - https://en.m.wikipedia.org/wiki/Information_hiding
  - [[https://www.reddit.com/r/IWantToLearn/comments/8o7uli/iwtl_how_to_design_and_create_mobile_apps_and/][Reddit: IWTL how to design and create mobile apps and games from scratch]]
  - General guides
    - [[https://www.reddit.com/r/IWantToLearn/comments/8o7uli/iwtl_how_to_design_and_create_mobile_apps_and/][Reddit: IWTL how to design and create mobile apps and games from scratch]]
  - Open source software development for science- cite:nowogrodzki2019
  - Continuous integration / continuous delivery (CI/CD)
    - https://github.blog/2019-08-08-github-actions-now-supports-ci-cd/?WT.mc_id=devto-blog-yolasors
  - [[id:0b4dfeac-fc55-47b1-956c-38fb19eba7ff][Data science project management]]
  - Recommended practices
    - https://simonwillison.net/2022/Oct/1/software-engineering-practices/
    - http://pixelscommander.com/wp-content/uploads/2014/12/P10.pdf
  - Software development models
    - Agile
    - Scrum
    - Waterfall
    - https://www.reddit.com/r/programming/comments/ag7vh4/detecting_agile_bullshit_from_the_us_department/
  - User experience
    - https://www.freecodecamp.org/news/use-user-reseach-to-create-the-perfect-ui-design/
    - https://www.reddit.com/r/commandline/comments/fyla88/ux_design_principles_for_command_line_interfaces/
***** Software testing
:PROPERTIES:
:ID:       152ce4e0-a31e-4227-be4f-3bbf4fd10f17
:END:
- Test levels
  - Integration testing
  - Unit test
    - unit testing
      - https://docs.python.org/3/library/unittest.html
- https://codeutopia.net/blog/2015/03/01/unit-testing-tdd-and-bdd/
- test-driven development :: requirements converted to test cases
**** General reference
:PROPERTIES:
:ID:       2b950539-24e7-4f71-9ead-d2060720462a
:END:
- recommendations
  - https://softwarerecs.stackexchange.com/questions?sort=votes
  - https://softwarerecs.stackexchange.com/questions?sort=votes
- GPL-3 licensing
- https://www.amazon.com/Hackers-Painters-Big-Ideas-Computer/dp/1449389554
- [[https://ianskerrett.wordpress.com/2017/04/19/iot-developer-trends-2017-edition/][Who uses what- Eclipse survey]]
**** Ideas
:PROPERTIES:
:ID:       9df4eaea-272d-414e-a2b2-589025889290
:END:
- https://www.reddit.com/r/commandline/comments/xt0b1i/awesome_tui_tools/
- - https://github.com/eudaldgr/youtube-dl
- yaml cannot do variable placeholders- https://stackoverflow.com/questions/41620674/use-placeholders-in-yaml/41620747#41620747
  - some workarounds https://stackoverflow.com/questions/2063616/how-to-reference-a-yaml-setting-from-elsewhere-in-the-same-yaml-file
- https://yaml.org/spec/1.2.2/
**** Emacs                                                              :ref:
:PROPERTIES:
:ID:       a49abc44-8e71-4a1a-bd35-a77849427c94
:END:
https://joostkremers.github.io/ebib/
https://github.com/jamescherti/minimal-emacs.d
https://lambdaland.org/posts/2024-12-14_emacs_catchup/
***** [[id:88337952-4c36-402e-882f-6ccd6c7ff6a1][Org-mode and Emacs cookbook]]
***** Processes
:PROPERTIES:
:ID:       55964bf9-dba0-44b4-9b78-1ec6731822b0
:END:
****** 0 Flat                                                          :flat:
:PROPERTIES:
:ID:       8d6e65d5-aa51-4dfa-804f-8ce9126f8ae9
:END:
- make minibuffer window
  #+begin_src emacs-lisp
(make-frame '((minibuffer . only)))
#+end_src

******* Backup
:PROPERTIES:
:ID:       b781b0bf-9382-414f-9e2c-4c17c61e2a73
:END:
- https://www.reddit.com/r/emacs/comments/10l2glx/is_there_a_way_to_keep_backup_files_without/

******* Code indentation
:PROPERTIES:
:ID:       ecb54a80-b177-4c9e-a3c9-47d1f680c7ac
:END:
- Code indentation
  - https://stackoverflow.com/questions/18778894/emacs-24-3-python-cant-guess-python-indent-offset-using-defaults-4/51966682
******* Create global keybinding
:PROPERTIES:
:ID:       7d013a0d-4e46-47da-a570-dbd6b86493d8
:END:
[[https://www.google.com/search?q=emacs+create+global+keybinding][google:emacs create global keybinding]]

(global-set-key (kbd "C-c r") 'replace-string)
******* Creating bibtex entries
:PROPERTIES:
:ID:       dff4145a-8b64-458a-bb79-19c41792455c
:END:
- https://www.reddit.com/r/emacs/comments/y36uf2/replicating_zoteroconnector_functionality_in/
******* [[https://www.google.com/search?q=emacs+open+file+location+instead+of+file][google:emacs open file location instead of file]]
:PROPERTIES:
:ID:       11bcaec4-fdfa-4c2d-93f8-46fed7694db9
:END:
******* If exists, then
#+begin_src emacs-lisp

(defun load-file-if-exists (file)
  (if (file-exists-p file)
      (progn
	(load-file file)
	(message "Loaded %s" file))
    (message "File %s was not found" file)))

(load-file-if-exists "~/.emacs.d/public_config.el")
(load-file-if-exists "~/.emacs.d/private_config.el")
#+end_src
******* Install
I install a more recent, non-apt emacs version from https://ftp.wayne.edu/gnu/emacs/ (v29.4 as of [2024-07-05 Fri]).
  #+begin_src bash
cd /tmp

wget https://mirrors.ocf.berkeley.edu/gnu/emacs/emacs-29.4.tar.xz

tar -xf /tmp/emacs-29.4.tar.xz

sudo apt-get install -y \
    libwebp-dev xaw3dg libxpm4 libpng16-16 zlib1g libjpeg8 libtiff5 libgif7 librsvg2-2 librsvg2-dev \
    libsqlite3-dev liblcms2-dev imagemagick libmagickwand-dev pkg-config libxaw7-dev libgpm-dev \
    libgconf-2-4 libgconf2-dev libm17n-dev libotf-dev libxft-dev libsystemd-dev libjansson-dev \
    libtree-sitter-dev libgtk-3-dev libwebkit2gtk-4.0-dev libacl1-dev

cd /tmp/emacs-29.4

./configure --prefix=/usr/local --with-xwidgets --with-imagemagick

make

sudo make install

#+end_src
******* Jupyter integration
:PROPERTIES:
:ID:       87aa79ac-8a7b-43fb-b291-340fa4e7ebb3
:END:
- https://www.reddit.com/r/emacs/comments/13qmo1u/jupyter_in_the_emacs_universe/
:PROPERTIES:
:ID:       5d29a241-3165-4a3b-a88c-c3fe122d2ff9
:END:
******* Launching applications
:PROPERTIES:
:ID:       c5af6642-dbe2-43df-b672-eea684e96de6
:END:
- https://lchsk.com/launching-applications-from-emacs
******* Line wrap https://www.reddit.com/r/emacs/comments/1n5s5g/perhaps_a_stupid_question_enforcing_a_line_width/
:PROPERTIES:
:ID:       c748276e-4756-40ec-a1d1-33dbc16c211f
:END:

******* LLM integration
:PROPERTIES:
:ID:       43b84eb3-717d-4850-a62c-dec6db2909c3
:END:
https://www.reddit.com/r/emacs/comments/185n3yo/emacs_meets_chatgpt_for_flawless_grammar_and/
******* Make mu
:PROPERTIES:
:ID:       e28c7c07-f71d-47e0-9e1b-2721872aae73
:END:
#+begin_src emacs-lisp
(defun insert-mu ()
  "Insert the Greek letter mu."
  (interactive)
  (insert "\u03BC"))

(global-set-key (kbd "C-c m") 'insert-mu)

#+end_src
μ
******* Modify write permission from within buffer w/ C-x C-q
:PROPERTIES:
:ID:       19e68685-1e50-4b8f-9da0-61f9b8565153
:END:
https://unix.stackexchange.com/questions/47724/how-to-modify-write-permission-on-current-buffer-in-emacs
******* Paste line n times
:PROPERTIES:
:ID:       634ccd44-6f57-40c5-8868-a890cb4f3248
:END:
- https://www.google.com/search?q=emacs+paste+line+n+times
******* Python linting in emacs
:PROPERTIES:
:ID:       ad70c5be-29a9-4077-a18b-c3f7eb97029b
:END:
- https://www.google.com/search?q=python+linting+in+emacs&oq=python+linting+in+emacs&aqs=chrome..69i57.11381j0j4&sourceid=chrome-mobile&ie=UTF-8
******* R linting in emacs
:PROPERTIES:
:ID:       e2bf9fdc-9745-4081-997b-d73d9949d408
:END:
- https://www.google.com/search?q=r+linting+in+emacs&sxsrf=ALiCzsZVGCOPi3tH5qIIUWdvxCGB6HalWw%3A1661434268625&ei=nHkHY6zsJbyD0PEP7Lm8kAM&oq=r+linting+in+emacs&gs_lcp=ChNtb2JpbGUtZ3dzLXdpei1zZXJwEAMyBwgAEB4QogQyBQgAEKIEOgcIABBHELADSgQIQRgAUI0SWN4dYP0laAFwAXgAgAGwAYgB2waSAQMwLjeYAQCgAQHIAQjAAQE&sclient=mobile-gws-wiz-serp
******* Rmd integration
:PROPERTIES:
:ID:       e33cbb04-6299-4a46-bcbd-116bdd72e99d
:END:
- https://plantarum.ca/2021/10/03/emacs-tutorial-rmarkdown/
******* Set fringe color
:PROPERTIES:
:ID:       5510fe9b-8878-4ac6-86be-6035043b31f3
:END:
- https://www.google.com/search?q=emacs+set+fringe+color
******* sql integration
:PROPERTIES:
:ID:       44347009-ee09-4cf1-9786-f0106a378a2e
:END:
- https://www.reddit.com/r/emacs/comments/15lad2v/extending_emacs_29_sqlitemode_cell_navigation_edit/

******* Syntax highlighting
:PROPERTIES:
:ID:       feee4e46-5654-42c1-ab94-ebb3c59d6d10
:END:
https://wilkesley.org/~ian/xah/emacs/elisp_syntax_coloring.html
******* systemd server start
:PROPERTIES:
:ID:       c70cfb48-b027-4b4f-8e0c-5fbc3d4222a0
:END:
[[https://www.google.com/search?q=emacs+systemd+server+start][google:emacs systemd server start]]
******* Tangle on save
:PROPERTIES:
:ID:       9c204dc9-be19-4699-bbb6-af0ac05fd3fc
:END:
https://github.com/yilkalargaw/org-auto-tangle/blob/master/org-auto-tangle.el
[[https://www.google.com/search?q=emacs+org-mode+tangle+on+save][google:emacs org-mode tangle on save]]
******* Widget buttons
:PROPERTIES:
:ID:       b4829129-9568-49d5-89bf-f58d5b707ee4
:END:
https://www.reddit.com/r/emacs/comments/18mvqez/how_can_i_create_inputs_and_buttons_like_the/
****** REPLs
- https://www.reddit.com/r/emacs/comments/1hsky98/universal_repls_in_emacs_by_means_of_lsp_or/
****** Appearance
:PROPERTIES:
:ID:       990e6299-2050-44ad-ab5e-e95ac1b03c12
:END:
#+BEGIN_SRC emacs-lisp
    ;; Window Appearace
    ;;  Remove bars:
    (menu-bar-mode -1)
    (tool-bar-mode -1)
    (scroll-bar-mode -1)
    ;;
    ;;  Set finge color to background
(defun my-tone-down-fringes ()
  (set-face-attribute 'fringe nil
                      :foreground (face-foreground 'default)
                      :background (or (face-background 'default) 'unspecified)))

    ;; (defun my-tone-down-fringes ()
    ;;   (set-face-attribute 'fringe nil
    ;;                       :foreground (face-foreground 'default)
    ;;                       :background (face-background 'default)))
    ;;  (custom-set-faces '(fringe ((t (:background "black")))))
    ;; to resolve "cannot decrease the face height more..."
    ;;; solution from (define-key special-event-map [config-changed-event] #'ignore)
    (define-key special-event-map [config-changed-event] #'ignore)
    ;;
    ;; Syntax highlighting
    ;;  When enabled, any matching parenthesis is highlighted
    (show-paren-mode)
    ;;  Enables highlighting of the region whenever the mark is active
    (transient-mark-mode 1)
    ;;
    ;; Lines
    ;;  Enable visual line mode (?t):
    (global-visual-line-mode 1)
    ;;  Toggle line highlighting in all buffers
    (global-hl-line-mode t)
    ;;  line numbers
    ;;(global-display-line-numbers-mode 0)
    ;;
    ;;    Disable line numbers in certain modes with hook
    (dolist (mode '(org-mode-hook
                    term-mode-hook
                    shell-mode-hook
                    eshell-mode-hook))
      (add-hook mode (lambda () (display-line-numbers-mode 0))))
    ;;
    ;;
    ;; UTF-8
    (prefer-coding-system 'utf-8)
    (set-default-coding-systems 'utf-8)
    (setq locale-coding-system 'utf-8)
    (set-selection-coding-system 'utf-8)
    (set-terminal-coding-system 'utf-8)
    (set-keyboard-coding-system 'utf-8)
    ;;
    (setq-default indicate-empty-lines t)
    ;;
    ;;Font
    (load-theme 'manoj-dark)
    (set-face-attribute 'default nil :height 110)
    (when (eq system-type 'darwin)
      (set-face-attribute 'default nil :height 125))

    ;; (set-face-attribute 'default nil :font "Monaco-20" )

  ;; (custom-set-faces
  ;;  '(default ((t (:inherit nil :stipple nil :background "#000000" :foreground "#a3ecd9" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 115 :width normal :family "Hack")))))

    ;;(custom-set-faces
     ;; custom-set-faces was added by Custom.
     ;; If you edit it by hand, you could mess it up, so be careful.
     ;; Your init file should contain only one such instance.
     ;; If there is more than one, they won't work right.
    ;; '(default ((t (:height 100 :family "Hack")))))

    ;;
    ;;  ?
    (column-number-mode)
    ;; ?Fix broken face inheritance
    (let ((faces (face-list)))
      (dolist (face faces)
        (let ((inh (face-attribute face :inherit)))
          (when (not (memq inh faces))
            (set-face-attribute face nil :inherit nil)))))

    ;; Disabled
    ;; (turn-off-auto-fill)
    ;;
    (use-package rainbow-delimiters
      :hook (prog-mode . rainbow-delimiters-mode))
#+END_SRC
- https://gist.githubusercontent.com/rougier/8d5a712aa43e3cc69e7b0e325c84eab4/raw/f35fa854ab651a0799a8bf8fc4b78c9168b57241/nano.el
- https://stackoverflow.com/questions/14760567/emacs-auto-load-color-theme-by-time
- https://kitchingroup.cheme.cmu.edu/blog/2017/04/07/Object-oriented-font-locking-in-emacs-lisp/
- font lock mods for highlighting text
    - http://emacs.stackexchange.com/questions/5889/how-to-highlight-text-permanently-in-org-mode
    - http://emacs.stackexchange.com/questions/12814/extending-org-mode-with-more-markups
    - https://www.gnu.org/software/emacs/manual/html_node/emacs/Highlight-Interactively.html#Highlight-Interactively
    - http://stackoverflow.com/questions/3579895/whats-the-font-lock-mode-for-in-emacs
    - https://www.emacswiki.org/emacs/FontLockMode
    - http://emacs.stackexchange.com/questions/9840/how-to-use-font-lock-to-highlight-end-of-line-comments
    - http://stackoverflow.com/questions/20016634/highlight-selected-text-in-emacs-org-mode
- https://protesilaos.com/codelog/2023-06-03-emacs-spacious-padding/
- https://github.com/rougier/nano-emacs
- Appearance- [[https://www.reddit.com/r/emacs/comments/8nzbvj/how_your_emacs_looks_like/][reddit: How your "emacs" looks like?]]
- http://ergoemacs.org/emacs/emacs_playing_with_color_theme.html
- https://codeberg.org/joostkremers/visual-fill-column
- https://www.reddit.com/r/emacs/comments/1ata3o3/emacs_modern_minibuffer_packages_vertico_consult/
- https://xenodium.com/my-emacs-eye-candy/
- https://www.reddit.com/r/emacs/comments/13y4gg0/nano_modeline_10_now_with_buttons/
- https://github.com/rougier/nano-emacs
- https://xenodium.com/my-emacs-eye-candy/
[[id:5510fe9b-8878-4ac6-86be-6035043b31f3][Set fringe color]]
- https://github.com/Likhon-baRoy/.emacs.d
- https://www.reddit.com/r/orgmode/comments/z9ysi0/examples_of_good_org_mode_styling/
- https://www.reddit.com/r/emacs/comments/yj42fr/toolbar_on_the_header_line_with_svglib_buttons/
- unicode - to add special chars- http://ergoemacs.org/emacs/emacs_n_unicode.html
- hack fonts
  - https://www.reddit.com/r/emacs/comments/bhr19v/unable_to_use_hack_font_in_emacs262/
- https://www.reddit.com/r/emacs/comments/ujuokl/my_take_on_dotemacsorg/
- https://lepisma.xyz/2017/10/28/ricing-org-mode/
- https://github.com/joostkremers/writeroom-mode
- https://www.reddit.com/r/emacs/comments/td9t7w/enhanced_my_coding_experience_with_svgtagmode/

******* Show or identify whitespace
:PROPERTIES:
:ID:       340af0cc-4211-4ae2-8bb2-4acdb1e2de2b
:END:
- https://www.emacswiki.org/emacs/ShowWhiteSpace
******* Mod line
:PROPERTIES:
:ID:       ba7b149f-24b8-4aa7-8634-1797050d77a1
:END:
- https://www.reddit.com/r/emacs/comments/13y4gg0/nano_modeline_10_now_with_buttons/
https://github.com/konrad1977/punch-line?tab=readme-ov-file
https://www.reddit.com/r/emacs/comments/18gjtk8/your_favoritemost_usefull_modeline_segments/
https://github.com/tarsius/moody
******* Themes
:PROPERTIES:
:ID:       e0089b9b-694c-4ffb-b105-732b54451f92
:END:

#+begin_src emacs-lisp

;; Load Leuven theme
(load-theme 'leuven t)

;; Customize the highlighted line color for readability
(custom-set-faces
 '(hl-line ((t (:background "#d7d7ff"))))  ;; Choose a soft, readable color
 '(region ((t (:background "#d7d7ff" :foreground "black")))))  ;; Adjust selected region color


(custom-set-faces
 '(hl-line ((t (:background "#b0c4de"))))  ;; A medium slate blue for better contrast
 '(region ((t (:background "#b0c4de" :foreground "black")))))  ;; Adjust selected region color

;; (custom-set-faces
;;  '(hl-line ((t (:background "#a9a9a9"))))  ;; Darker gray for high contrast
;;  '(region ((t (:background "#a9a9a9" :foreground "black")))))  ;; Adjust selected region color

(custom-set-faces
 '(hl-line ((t (:background "#3f444a"))))  ;; Darker background for high contrast similar to minibuffer
 '(region ((t (:background "#3f444a" :foreground "white")))))  ;; Match region highlight with minibuffer contrast

#+end_src
- https://github.com/doomemacs/themes/tree/screenshots
#+begin_src emacs-lisp


(use-package spacemacs-theme
  :defer t
  :init (load-theme 'spacemacs-dark t))


#+end_src
#+begin_src emacs-lisp
(load-theme 'reverse)
#+end_src
#+begin_src emacs-lisp
(use-package doom-themes
  :ensure t
  :config
  ;; Global settings (defaults)
  (setq doom-themes-enable-bold t    ; if nil, bold is universally disabled
        doom-themes-enable-italic t) ; if nil, italics is universally disabled
  (load-theme 'doom-acario-dark t)

  ;; Enable flashing mode-line on errors
  (doom-themes-visual-bell-config)
  ;; Enable custom neotree theme (all-the-icons must be installed!)
  (doom-themes-neotree-config)
  ;; or for treemacs users
  (setq doom-themes-treemacs-theme "doom-atom") ; use "doom-colors" for less minimal icon theme
  (doom-themes-treemacs-config)
  ;; Corrects (and improves) org-mode's native fontification.
  (doom-themes-org-config))
#+end_src
****** Bash IDE
:PROPERTIES:
:ID:       f2557e40-0d81-438a-93e9-6917a40c1d8e
:END:
  - bash-completion https://github.com/szermatt/emacs-bash-completion
    #+begin_src emacs-lisp
;; (use-package bash-completion)

;;         (autoload 'bash-completion-dynamic-complete
;;           "bash-completion"
;;           "BASH completion hook")
;;         (add-hook 'shell-dynamic-complete-functions
;;           'bash-completion-dynamic-complete)

;;(bash-completion-dynamic-complete-nocomint COMP-START COMP-POS DYNAMIC-TABLE)


    #+end_src
  - https://github.com/riscy/shx-for-emacs#from-melpa
    #+begin_src emacs-lisp
(use-package shx)
#+end_src
  - ideas
    - https://github.com/p3r7/friendly-shell
  - https://www.eigenbahn.com/2020/07/07/emacs-remote-shell-interpreter-conf
  - https://www.masteringemacs.org/article/running-shells-in-emacs-overview
    #+begin_src emacs-lisp
  ;;https://stackoverflow.com/questions/12224909/is-there-a-way-to-get-my-emacs-to-recognize-my-bash-aliases-and-custom-functions
  (setq shell-file-name "bash")
  (setq shell-command-switch "-ic")
  #+end_src
    #+begin_src emacs-lisp
  (setq comint-scroll-to-bottom-on-output t)
  #+end_src
- https://github.com/riscy/shx-for-emacs#from-melpa
- https://www.youtube.com/watch?app=desktop&v=9xLeqwl_7n0&ab_channel=EmacsConfandEmacshangouts
- https://xenodium.com/yasnippet-in-emacs-eshell/
- [[id:eecd8a09-89dd-4cb7-99ed-719eb3890597][emacs-native-shell-complete]]
- shells
  - https://www.reddit.com/r/emacs/comments/r2p12t/eshellmode/
  - - https://emacs.stackexchange.com/questions/50539/sending-code-to-an-ansi-term-via-isend-mode-how-to-modify-default-buffer-chosen
  - [[https://emacs.stackexchange.com/questions/43711/displaying-a-second-buffer-with-a-shell][see send-line-to-region-and-step]]
  - https://github.com/riscy/shx-for-emacs#description
  - eshell
    - https://old.reddit.com/r/emacs/comments/cyu4is/anyone_actually_using_eshells_smart_display/
  - https://old.reddit.com/r/emacs/comments/cyu4is/anyone_actually_using_eshells_smart_display/
- https://github.com/manateelazycat/aweshell
- bash-completion https://github.com/szermatt/emacs-bash-completion
    #+begin_src emacs-lisp
;; (use-package bash-completion)

;;         (autoload 'bash-completion-dynamic-complete
;;           "bash-completion"
;;           "BASH completion hook")
;;         (add-hook 'shell-dynamic-complete-functions
;;           'bash-completion-dynamic-complete)

;;(bash-completion-dynamic-complete-nocomint COMP-START COMP-POS DYNAMIC-TABLE)


   #+end_src

- https://superuser.com/questions/1698921/how-to-step-through-a-shell-script-line-by-line-and-send-each-line-to-the-termin
- bash linting - http://www.skybert.net/emacs/bash-linting-in-emacs/
- https://www.reddit.com/r/emacs/comments/x2mmfc/from_vanilla_emacs_to_bash_ide_in_17_minutes/

- https://www.emacswiki.org/emacs/essh.el
- essh.el- tools to send lines in emacs to shell
  - https://www.emacswiki.org/emacs/essh.el
- [[id:2501e2dd-b2ca-4bea-a313-3a0a758144e4][essh.el in my config]]
- [[id:fc0d7670-9357-4209-a699-88d05157bcea][bash-completion package]]
- [[id:f73673dd-e2fe-4228-97c5-efcabcf8f69b][shx package]]
- https://github.com/p3r7/friendly-shell
- https://www.eigenbahn.com/2020/07/07/emacs-remote-shell-interpreter-conf
- https://www.masteringemacs.org/article/running-shells-in-emacs-overview
- https://stackoverflow.com/questions/12224909/is-there-a-way-to-get-my-emacs-to-recognize-my-bash-aliases-and-custom-functions


#+begin_src emacs-lisp
;;https://emacs.stackexchange.com/questions/37887/send-region-to-shell-in-another-buffer
(defun tws-region-to-process (arg beg end)
  "Send the current region to a process buffer.
The first time it's called, will prompt for the buffer to
send to. Subsequent calls send to the same buffer, unless a
prefix argument is used (C-u), or the buffer no longer has an
active process."
  (interactive "P\nr")
  (if (or arg ;; user asks for selection
          (not (boundp 'tws-process-target)) ;; target not set
          ;; or target is not set to an active process:
          (not (process-live-p (get-buffer-process
                                tws-process-target))))
      (setq tws-process-target
            (completing-read
             "Process: "
             (seq-map (lambda (el) (buffer-name (process-buffer el)))
                      (process-list)))))
  (process-send-region tws-process-target beg end))
#+end_src
****** Bibtex
:PROPERTIES:
:ID:       b9213e5b-1c3a-4da0-a648-10eed94179c4
:END:
- https://www.erichgrunewald.com/posts/emacs-lisp-functions-for-easy-bib-te-x-insertions/

****** Code tangle
:PROPERTIES:
:ID:       c204a6b5-a8cf-4d9e-b624-c076f6ed18b1
:END:
#+begin_src bash
#!/usr/bin/env bash

# Notes:
#
#  This script is built from the Emacs Org-mode file in my repository at
#  https://github.com/jeszyman/basecamp/basecamp.org. The script is rebuilt
#  whenever that Org-mode file is tangled, and any changes made directly
#  here in this file will be reverted.

#+end_src
- https://www.youtube.com/watch?app=desktop&v=D3FzMPZm7vY&ab_channel=DistroTube
****** Completion frameworks
:PROPERTIES:
:ID:       b67dea45-0f1c-44b7-a76d-efc6dd1f2a75
:END:
  - auto indent after written https://unix.stackexchange.com/questions/162057/can-i-have-emacs-automatically-indent-my-whole-code-after-it-is-all-written
- https://github.com/minad/corfu
- https://github.com/oantolin/embark  
- 29. Abbrevs
  #+BEGIN_SRC emacs-lisp
(setq-default abbrev-mode t)
;; save abbreviations upon exiting xemacs
(setq save-abbrevs 'silent)
;; set the file storing the abbreviations
(setq abbrev-file-name "~/.emacs.d/my-abbreviations.el")
;; reads the abbreviations file on startup
(quietly-read-abbrev-file)
#+END_SRC
  - http://pragmaticemacs.com/emacs/use-abbreviations-to-expand-text/#:~:text=Emacs%20has%20the%20ability%20to,teh%E2%80%9D%20for%20%E2%80%9Cthe%E2%80%9D.
- https://emacsnotes.wordpress.com/2018/05/27/keyboard-macros-build-custom-commands-with-the-emacs-command-language/
- https://www.reddit.com/r/emacs/comments/yzgfas/autocorrect_the_ign_ing_typo/
- https://www.lucacambiaghi.com/vanilla-emacs/readme.html#h:06E0EA9F-7CF4-4B99-8A4A-2C63A4F8A6B6
- [[id:dab8038b-67bd-413e-88d5-25d168f29e9b][key-chord]]
******* Capture templates
:PROPERTIES:
:ID:       a3520e71-8dbb-409a-b618-d312405aab81
:END:
- https://www.reddit.com/r/emacs/comments/fzuv4f/my_prettified_orgcapture/
- capture template formatting
  - [[https://emacs.stackexchange.com/questions/27486/orgmode-capture-template-adding-sub-headers][stack: orgmode capture template adding subheaders]]
  - org capture template notes
    - https://emacs.stackexchange.com/search?q=%5Borg-mode%5D+capture
    - https://emacs.stackexchange.com/questions/27486/orgmode-capture-template-adding-sub-headers
    - https://www.youtube.com/watch?v=Af4NVJbNAB4&list=PLVtKhBrRV_ZkPnBtt_TD1Cs9PJlU0IIdE&index=13
    - [[http://sachachua.com/blog/2008/01/outlining-your-notes-with-org/][sacha: outlining notes with org]]
  - [[https://www.reddit.com/r/emacs/comments/5jhwlu/getting_things_from_outside_emacs_into/][reddit: org capture setups]]
  - https://www.reddit.com/r/emacs/comments/7zqc7b/share_your_org_capture_templates/

****** Config and admin
:PROPERTIES:
:ID:       0df2f01d-54a1-45a2-a7aa-272d6fcf7bf8
:END:
- https://github.com/karthink/.emacs.d/blob/master/lisp/setup-dired.el
- https://www.reddit.com/r/emacs/comments/1h1zyhz/emacs_a_basic_and_capable_configuration/
- https://github.com/Likhon-baRoy/.emacs.d
- [[http://emacs.stackexchange.com/questions/28772/manage-same-init-file-for-linux-and-windows][same init for multiple platforms]]
- https://emacs.stackexchange.com/questions/293/what-should-shouldnt-i-do-when-keeping-emacs-and-emacs-d-in-version-control

- https://alhassy.github.io/emacs.d/
- https://sachachua.com/dotemacs/index.html#babel-init
- https://www.reddit.com/r/emacs/comments/ujuokl/my_take_on_dotemacsorg/
- https://www.reddit.com/r/emacs/comments/1azmh4j/nearly_halfed_my_config_with_new_emacs_30/
- https://www.reddit.com/r/emacs/comments/10a42eo/nondevelopers_who_started_without_other/
- https://github.com/joshpetit/dotfiles
- https://alhassy.github.io/emacs.d/
- [[id:EF8F2A3C-F614-4B7F-9CF6-084BDFE2A241][Customization]]
- profiling and optimization
  - https://stackoverflow.com/questions/5762098/how-do-i-profile-my-emacs-configuration
- [[https://superuser.com/questions/637979/install-emacs-without-sudo][Install emacs on server]]
- https://github.com/ianpan870102/.emacs.d/blob/master/config.org
- linux setup using apt
  - https://docs.docker.com/install/linux/linux-postinstall/
- [[https://superuser.com/questions/637979/install-emacs-without-sudo][Server install how to]]
- https://askubuntu.com/questions/598985/how-to-upgrade-to-the-latest-emacs
- Init file examples
  - https://gitlab.com/Kaligule/emacs-config/-/blob/master/config.org
  - https://github.com/wasamasa/dotemacs/blob/master/init.org
  - https://github.com/pprevos/EmacsLife/blob/master/InitFiles.org
  - [[http://pages.sachachua.com/.emacs.d/Sacha.html][Chua emacs config]]
  - https://github.com/c02y/dotemacs.d/blob/master/init.el#L182-L207
  - https://ogbe.net/emacsconfig.html
  - "init file bankrupcy"
  - .emacs configs
    - http://pages.sachachua.com/.emacs.d/Sacha.html
    - https://www.reddit.com/r/emacs/comments/585n3j/i_have_created_a_list_of_people_with_nice_config/
  - https://www.emacswiki.org/emacs/RobertAdesamConfig
  - https://github.com/grettke/home/blob/master/ALEC.txt#L3256
  - http://nullman.net/emacs/files/init-emacs.org
  - https://github.com/KaratasFurkan/.emacs.d
  - https://github.com/senny/emacs.d/blob/master/init.el
  - https://muto.ca/posts/my-emacs-configuration.html
  - https://www.reddit.com/r/emacs/comments/m9zxw6/444_days_of_literate_configuration_450_days_using/
- https://config.phundrak.com/emacs/
******* configuration and Init
:PROPERTIES:
:ID:       efe58eb5-c583-4fa8-90e5-346216d70940
:END:
- https://alhassy.github.io/emacs.d/
- https://gitlab.com/Kaligule/emacs-config/-/blob/master/config.org
- https://github.com/wasamasa/dotemacs/blob/master/init.org
- https://github.com/pprevos/EmacsLife/blob/master/InitFiles.org
- [[http://pages.sachachua.com/.emacs.d/Sacha.html][Chua emacs config]]
- https://github.com/c02y/dotemacs.d/blob/master/init.el#L182-L207
- https://ogbe.net/emacsconfig.html
- "init file bankrupcy"
- .emacs configs
 - http://pages.sachachua.com/.emacs.d/Sacha.html
 - https://www.reddit.com/r/emacs/comments/585n3j/i_have_created_a_list_of_people_with_nice_config/
- https://www.emacswiki.org/emacs/RobertAdesamConfig
- https://github.com/grettke/home/blob/master/ALEC.txt#L3256
- http://nullman.net/emacs/files/init-emacs.org
- https://github.com/KaratasFurkan/.emacs.d
- https://github.com/senny/emacs.d/blob/master/init.el
- https://muto.ca/posts/my-emacs-configuration.html
- https://www.reddit.com/r/emacs/comments/m9zxw6/444_days_of_literate_configuration_450_days_using/
- https://github.com/DiamondBond/emacs
****** Debugging, troubleshooting
- https://www.reddit.com/r/emacs/comments/1hsxub9/how_to_know_what_is_slowing_down_emacs/
- 27.6 Running Debuggers
  - Debugging
    - - https://www.reddit.com/r/emacs/comments/6uc7g5/just_figured_out_why_emacs_pauses_sometimes/
    - - M-x toggle-debug-on-error
    - https://www.reddit.com/r/emacs/comments/2dmv85/invalid_search_bound_wrong_side_of_point_whenever/
  - bactrace with (setq debug-on-error t)
- Troubleshooting- M-x profiler-start / profiler-report
****** Emacs as a genreal IDE
:PROPERTIES:
:ID:       704f27f2-f861-4156-8a38-079ce51080c7
:END:
- [[https://www.reddit.com/r/emacs/comments/ba9j65/what_plugins_do_you_use_to_make_emacs_like_other/][What plugins do you use to make Emacs like other higher level editors? (VSCode, Sublime, etc)]]

https://ochicken.net/projects/workspace/
https://emacsrocks.com/e13.html
https://www.reddit.com/r/emacs/comments/17gqjsy/using_ruff_format_with_emacs_to_reformat_python/
- https://github.com/alhassy/repl-driven-development
- [[id:340af0cc-4211-4ae2-8bb2-4acdb1e2de2b][Show or identify whitespace]]
****** Emacs as shell IDE
:PROPERTIES:
:ID:       5857e608-7dbc-4cf2-93fd-6e786e2b0c11
:END:
#+begin_src emacs-lisp
;;https://emacs.stackexchange.com/questions/37887/send-region-to-shell-in-another-buffer
(defun tws-region-to-process (arg beg end)
  "Send the current region to a process buffer.
The first time it's called, will prompt for the buffer to
send to. Subsequent calls send to the same buffer, unless a
prefix argument is used (C-u), or the buffer no longer has an
active process."
  (interactive "P\nr")
  (if (or arg ;; user asks for selection
          (not (boundp 'tws-process-target)) ;; target not set
          ;; or target is not set to an active process:
          (not (process-live-p (get-buffer-process
                                tws-process-target))))
      (setq tws-process-target
            (completing-read
             "Process: "
             (seq-map (lambda (el) (buffer-name (process-buffer el)))
                      (process-list)))))
  (process-send-region tws-process-target beg end))
#+end_src
- [[http://ergoemacs.org/emacs/emacs_shell_vs_terminal.html][Why Run Shell in Emacs?]]
- https://www.reddit.com/r/emacs/comments/1ext5f0/help_me_make_mx_shell_better_by_making_comint/
- use windows for bash script and *shell*
- Use essh.el commands to pipe line-by-line to *shell*
  - C-c C-p pipe line to shell and skip
- Other useful shell functionality
  - put output of one-liner into current buffer: C-u M-!
  - https://www.emacswiki.org/emacs/EshellRedirection
- shells
  - https://www.reddit.com/r/emacs/comments/r2p12t/eshellmode/
  - - https://emacs.stackexchange.com/questions/50539/sending-code-to-an-ansi-term-via-isend-mode-how-to-modify-default-buffer-chosen
  - [[https://emacs.stackexchange.com/questions/43711/displaying-a-second-buffer-with-a-shell][see send-line-to-region-and-step]]
  - https://github.com/riscy/shx-for-emacs#description
  - eshell
    - https://old.reddit.com/r/emacs/comments/cyu4is/anyone_actually_using_eshells_smart_display/
  - https://old.reddit.com/r/emacs/comments/cyu4is/anyone_actually_using_eshells_smart_display/
- https://www.reddit.com/r/emacs/comments/onpv90/emacs_as_shell_script_ide/
- name shell by starting with C-u M-x
- https://github.com/manateelazycat/aweshell/blob/master/README.md
- [[http://ergoemacs.org/emacs/emacs_shell_vs_terminal.html][Why Run Shell in Emacs?]]
checkout tramp
https://www.gnu.org/software/tramp/#Overview

#+BEGIN_SRC emacs-lisp

;; ;; TEST remove projectile global mode for SSH login:

;; (setq projectile-mode-line nil)

;; (setq tramp-ssh-controlmaster-options "-o ControlPath=%%C -o
;; ControlMaster=auto -o ControlPersist=no")


;; ;; essh.el
;; ;; ------------------------------------------------------------------ ;;
;; ;; TO INSTALL:                                                        ;;
;; ;; 1. add essh.el in your load-path.                                  ;;
;; ;;                                                                    ;;
;; ;; 2. add to your .emacs file:                                        ;;
;; ;;                                                                    ;;
;; (require 'essh)                                                    ;;
;; (defun essh-sh-hook ()                                             ;;
;;   (define-key sh-mode-map "\C-c\C-r" 'pipe-region-to-shell)        ;;
;;   (define-key sh-mode-map "\C-c\C-b" 'pipe-buffer-to-shell)        ;;
;; ;;  (define-key sh-mode-map "\C-c\C-j" 'pipe-line-to-shell)          ;;
;;   (define-key sh-mode-map "C-RET" 'pipe-line-to-shell)          ;;
;;   (define-key sh-mode-map "\C-c\C-n" 'pipe-line-to-shell-and-step) ;;
;;   (define-key sh-mode-map "\C-c\C-f" 'pipe-function-to-shell)      ;;
;;   (define-key sh-mode-map "\C-c\C-d" 'shell-cd-current-directory)) ;;
;; (add-hook 'sh-mode-hook 'essh-sh-hook)                             ;;
;; ;; ------------------------------------------------------------------ ;;

;; ;;  path?
;; (setenv "PATH" (concat "/opt/local/bin/:" (getenv "PATH")))

;; ;; https://www.youtube.com/watch?v=FRu8SRWuUko


;; (when (memq window-system '(mac ns))
;;   (exec-path-from-shell-initialize))

#+END_SRC
****** Emacs custom development
:PROPERTIES:
:ID:       e5bf7c5d-80dc-4ee8-bccd-775be35ee7ad
:END:
- https://jmonlong.github.io/Hippocamplus/emacs/
- https://www.google.com/search?q=emacs+change+keybinding
- https://www.reddit.com/r/emacs/comments/mqtwzx/creating_custom_minor_modes_learning_emacs_lisp_7/
****** Emacs for literate scientific notebooks
:PROPERTIES:
:ID:       011e15b9-66d4-4b3f-adaf-a95941f9e502
:END:
- https://github.com/rougier/notebook-mode
- https://github.com/lf-araujo/workbenchless  
****** Emacs Interfaces
:PROPERTIES:
:ID:       0c0667a7-dcb3-4ef8-98c1-8fa1b9cc3116
:END:
- web
  - https://github.com/karlicoss/cloudmacs
  - https://emacs.stackexchange.com/questions/40829/cannot-open-new-chrome-tab-by-browse-url-chrome-newtab
  - https://github.com/karlicoss/cloudmacs
- [currently not working] to goodle drive- https://www.gnu.org/software/tramp/#Using-Google-Drive

- docker
  - https://github.com/JAremko/docker-emacs
  - https://github.com/Silex/docker.el
  - https://github.com/Silex/docker.el
  - https://github.com/spotify/dockerfile-mode
- web
  - https://github.com/karlicoss/cloudmacs
  - https://emacs.stackexchange.com/questions/40829/cannot-open-new-chrome-tab-by-browse-url-chrome-newtab
  - https://github.com/karlicoss/cloudmacs


****** Emacs - Python integration
:PROPERTIES:
:ID:       e7806712-9607-4b78-8662-80a2659c203d
:END:
- https://blog.serghei.pl/posts/emacs-python-ide/
- python
  - https://realpython.com/emacs-the-best-python-editor/
  - https://www.reddit.com/r/emacs/comments/d2mhx7/nonprogrammer_here_looking_to_learn_python_should/
#+begin_src emacs-lisp
(defun my-python-mode-hook ()
  (setq comint-scroll-to-bottom-on-output 'others))

(add-hook 'python-mode-hook 'my-python-mode-hook)

#+end_src
- https://realpython.com/emacs-the-best-python-editor/
- https://www.reddit.com/r/emacs/comments/d2mhx7/nonprogrammer_here_looking_to_learn_python_should/
****** Emacs shell IDE
:PROPERTIES:
:ID:       07b8634c-70a6-4a99-90b5-0f5083ccaf04
:END:
https://www.reddit.com/r/emacs/comments/17rghxv/emacs_as_a_replacement_tmux/
- interfaces
****** Emacs sql
leuvenleuven
https://chatgpt.com/c/9d4cfab7-2187-4059-8b07-c72bc5ec5a83
https://chatgpt.com/c/ebb82c55-d5ab-41ff-a465-7969099eb4b6
#+begin_src bash :tangle /tmp/inventory.sql
-- Create a table
CREATE TABLE inventory (
    id INTEGER PRIMARY KEY,
    item_name TEXT NOT NULL,
    quantity INTEGER NOT NULL,
    price REAL
);

-- Insert some items
INSERT INTO inventory (item_name, quantity, price) VALUES
('Laptop', 10, 999.99),
('Mouse', 50, 19.99),
('Keyboard', 20, 49.99);

#+end_src

#+begin_src bash
rm /tmp/inventory.db
sqlite3 /tmp/inventory.db < /tmp/inventory.sql

#+end_src

#+begin_src emacs-lisp
(use-package org
  :ensure t)

(use-package sql
  :ensure t)

(use-package emacsql-sqlite
  :ensure t)

#+end_src

#+begin_src emacs-lisp
(setq sql-connection-alist
      '((inventorydb (sql-product 'sqlite)
                     (sql-database "/tmp/inventory.db"))))

#+end_src

#+begin_src emacs-lisp
(sql-connect 'inventorydb)
#+end_src

#+begin_src emacs-lisp :results replace
(getenv "PATH")
#+end_src

#+RESULTS[f5376e146c3942662a5a80d2c7cab7184b0a5a6c]:
: /opt/miniconda3/condabin:/home/jeszyman/repos/biotools/tools/shell:/home/jeszyman/repos/basecamp/tools/shell:/home/jeszyman/repos/basecamp-private/tools/shell:/home/jeszyman/.local/bin:/home/jeszyman/bin:/opt/Zotero_linux-x86_64:/usr/local/texlive/2019/bin/x86_64-linux:/usr/local/go/bin:/usr/local/go/bin:/usr/local/go/bin:/opt/miniconda3/bin:/usr/local/texlive/2021/bin/x86_64-linux:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin:/opt/miniconda3/bin:/home/jeszyman/go/bin:/opt/miniconda3/bin:/opt/mambaforge/bin:/home/jeszyman/repos/basecamp/tools/shell

#+begin_src emacs-lisp :results replace
(setq sql-sqlite-program "/usr/bin/sqlite3")

#+end_src

#+RESULTS[2e9eff6798e9fb446e453f8e7958c341af050a70]:
: /usr/bin/sqlite3


#+begin_src emacs-lisp
(org-link-set-parameters
 "sql"
 :follow (lambda (query)
           (let ((sql-database 'inventorydb))
             (sql-sqlite)
             (sql-send-string query))))

#+end_src


[[sql:SELECT * FROM inventory WHERE id=1][View Laptop Details]]
[[sql:SELECT * FROM inventory WHERE id=2][View Mouse Details]]
[[sql:SELECT * FROM inventory WHERE id=3][View Keyboard Details]]




#+begin_src bash
cd /tmp/
sqlite3 /tmp/inventory.db
SELECT * FROM inventory;

#+end_src

#+begin_src emacs-lisp :cache no
(sql-connect 'inventorydb)

#+end_src

#+RESULTS[6445df855829774eeb9ad002abbc2f24a92f64e1]:
: #<buffer *SQL: <inventorydb>*>


#+begin_src emacs-lisp
(require 'sql)
(require 'org)

;; Set SQLite program explicitly
(setq sql-sqlite-program "/usr/bin/sqlite3")

;; Set up SQL connections
(setq sql-connection-alist
      '((inventorydb (sql-product 'sqlite)
                     (sql-database "/tmp/inventory.db"))))

;; Function to check and establish the connection
(defun my-sql-connect ()
  (unless (comint-check-proc "*SQL*")
    (sql-connect 'inventorydb)))

;; Define custom Org mode link type for SQL queries
(org-link-set-parameters
 "sql"
 :follow (lambda (query)
           (my-sql-connect)
           (sql-send-string query)))

#+end_src

#+begin_src emacs-lisp
(require 'sql)
(require 'org)

;; Set SQLite program explicitly
(setq sql-sqlite-program "/usr/bin/sqlite3")

;; Set up SQL connections
(setq sql-connection-alist
      '((inventorydb (sql-product 'sqlite)
                     (sql-database "/tmp/inventory.db"))))

;; Function to check and establish the connection
(defun my-sql-connect ()
  (unless (comint-check-proc "*SQL*")
    (sql-connect 'inventorydb)))

;; Define custom Org mode link type for SQL queries
(org-link-set-parameters
 "sql"
 :follow (lambda (query)
           (my-sql-connect)
           (sql-send-string ".headers on")
           (sql-send-string query)))

#+end_src

#+begin_src emacs-lisp
(require 'sql)
(require 'org)

;; Set SQLite program explicitly
(setq sql-sqlite-program "/usr/bin/sqlite3")

;; Set up SQL connections
(setq sql-connection-alist
      '((inventorydb (sql-product 'sqlite)
                     (sql-database "/tmp/inventory.db"))))

;; Function to check and establish the connection
(defun my-sql-connect ()
  (unless (comint-check-proc "*SQL*")
    (sql-connect 'inventorydb)))

;; Define custom Org mode link type for SQL queries
(org-link-set-parameters
 "sql"
 :follow (lambda (query)
           (my-sql-connect)
           (sql-send-string ".mode column")
           (sql-send-string ".headers on")
           (sql-send-string query)))

#+end_src

#+begin_src emacs-lisp
(require 'sql)
(require 'org)

;; Set SQLite program explicitly
(setq sql-sqlite-program "/usr/bin/sqlite3")

;; Set up SQL connections
(setq sql-connection-alist
      '((inventorydb (sql-product 'sqlite)
                     (sql-database "/tmp/inventory.db"))))

;; Function to check and establish the connection
(defun my-sql-connect ()
  (unless (comint-check-proc "*SQL*")
    (sql-connect 'inventorydb)))

;; Define custom Org mode link type for SQL queries
(org-link-set-parameters
 "sql"
 :follow (lambda (query)
           (my-sql-connect)
           (sql-send-string ".mode column")
           (sql-send-string ".headers on")
           (sql-send-string "")
           (sql-send-string query)))

#+end_src

#+begin_src emacs-lisp
(require 'sql)
(require 'org)

;; Set SQLite program explicitly
(setq sql-sqlite-program "/usr/bin/sqlite3")

;; Set up SQL connections
(setq sql-connection-alist
      '((inventorydb (sql-product 'sqlite)
                     (sql-database "/tmp/inventory.db"))))

;; Function to check and establish the connection
(defun my-sql-connect ()
  (unless (comint-check-proc "*SQL*")
    (sql-connect 'inventorydb)))

;; Define custom Org mode link type for SQL queries
(org-link-set-parameters
 "sql"
 :follow (lambda (query)
           (my-sql-connect)
           (sql-send-string ".mode column\n.headers on\n")
           (sql-send-string query)))

#+end_src


###

 Create and populate the inventory database
#+begin_src bash :tangle /tmp/inventory.sql
-- Create a table
CREATE TABLE inventory (
    id INTEGER PRIMARY KEY,
    item_name TEXT NOT NULL,
    quantity INTEGER NOT NULL,
    price REAL
);

-- Insert some items
INSERT INTO inventory (item_name, quantity, price) VALUES
('Laptop', 10, 999.99),
('Mouse', 50, 19.99),
('Keyboard', 20, 49.99);
#+end_src

#+begin_src bash
rm /tmp/inventory.db
sqlite3 /tmp/inventory.db < /tmp/inventory.sql
#+end_src

 Create CSV file with additional data
#+begin_src org :tangle /tmp/additional_inventory.csv
id,item_name,quantity,price
4,Monitor,15,199.99
5,USB Cable,100,9.99
6,Headphones,25,89.99
#+end_src

 Import CSV data into the SQLite database
#+begin_src bash
sqlite3 -cmd ".mode csv" -cmd ".import /tmp/additional_inventory.csv inventory" /tmp/inventory.db
#+end_src

 Display the inventory data as an org table
#+begin_src bash :results replace
sqlite3 -header -csv /tmp/inventory.db "SELECT * FROM inventory;"
#+end_src

#+RESULTS[d168e3aa442c8f2659644c9140d9932a9215be0e]:
| id | item_name  | quantity |  price |
|  1 | Laptop     |       10 | 999.99 |
|  2 | Mouse      |       50 |  19.99 |
|  3 | Keyboard   |       20 |  49.99 |
|  4 | Monitor    |       15 | 199.99 |
|  5 | USB Cable  |      100 |   9.99 |
|  6 | Headphones |       25 |  89.99 |

****** Email
:PROPERTIES:
:ID:       ea517dbd-d9d1-4e9f-b72d-c45ed8b6e1f3
:END:
https://www.reddit.com/r/emacs/comments/1i0jgma/managing_microsoft_email_in_emacs/
https://github.com/pdobsan/oama
- email https://www.reddit.com/r/emacs/comments/yx1q69/how_to_set_up_email_step_by_step_guide_for/
****** External
:PROPERTIES:
:ID:       c56ee165-06f6-451b-8a5d-526e684367b6
:END:
  - emacs
    - https://stackoverflow.com/questions/1008750/ide-emacs-mode-for-shell-scripting-in-bash-sh-etc
    - http://www.skybert.net/emacs/bash-linting-in-emacs/
- https://www.emacswiki.org/emacs/ComintMode
- https://www.reddit.com/r/emacs/comments/ajwtcb/emacs_on_the_go/
- https://xenodium.com/seamless-command-line-utils/
- [[id:c5af6642-dbe2-43df-b672-eea684e96de6][Launching applications]]
- tramp gdrive
  - [currently not working] to goodle drive- https://www.gnu.org/software/tramp/#Using-Google-Drive
****** External file annotation and notes
:PROPERTIES:
:ID:       5c955ca9-331f-4206-bbfd-735401e2f33d
:END:
- https://www.youtube.com/watch?app=desktop&v=P02FD63gGco&ab_channel=DmitryM
****** File and directory manipulation and viewing in Dired
- See [[id:b3bd2685-ea78-4097-ae4c-e4a5e7a422ea][public configuration Dired settings]]
- Use casual-dired-tmenu
- https://sachachua.com/blog/2025/01/using-image-dired-to-browse-the-latest-screenshots-from-multiple-directories/  
****** Freehand drawing
https://www.reddit.com/r/emacs/comments/pk5ad6/draw_and_scribble_in_gnu_emacs/
****** GTD in Emacs
:PROPERTIES:
:ID:       c178c08c-ac3c-424d-8bae-ad96afc197df
:END:
https://github.com/rougier/emacs-gtd
https://daryl.wakatara.com/emacs-gtd-flow-evolved/#structure---para
- https://www.labri.fr/perso/nrougier/GTD/index.html
****** Human language and writing
:PROPERTIES:
:ID:       4dd5f63a-dc89-4d57-a3cc-90389dbd3528
:END:
- Spell check
  - https://github.com/minad/jinx
- https://chrismaiorana.com/my-freewrite-mode/
- https://github.com/pprevos/emacs-writing-studio
- https://www.reddit.com/r/emacs/comments/dtciau/is_there_any_way_i_can_integrate_emacs_with/

- Flyspell
      - [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Spelling.html][Flyspell]]
      - also [[https://www.emacswiki.org/emacs/FlySpell][see these]] which are added to init
      - https://www-sop.inria.fr/members/Manuel.Serrano/flyspell/flyspell.html
      - Commands
        | type       | function        | command |
        |------------+-----------------+---------|
        |            | suggest words   | M-$     |
        |            | add word        | i       |
        |            | check next word | M-s M-n |
        | minibuffer | add to dict     | i       |
- [[https://stackoverflow.com/a/10197062/6106936][input greek characters]]
https://www.reddit.com/r/emacs/comments/1b1s7wk/grammarly_in_emacs/
https://www.reddit.com/r/emacs/comments/1au10ha/i_want_to_learn_what_emacs_offers_for_editing/
- https://www.reddit.com/r/emacs/comments/dtciau/is_there_any_way_i_can_integrate_emacs_with/

[[id:dff4145a-8b64-458a-bb79-19c41792455c][Creating bibtex entries]]
[[id:634ccd44-6f57-40c5-8868-a890cb4f3248][Paste line n times]]
- https://www.reddit.com/r/emacs/comments/ysfcmx/advice_emacs_as_a_word_processor/
- cut whole line <C-S-backspace> runs the command kill-whole-line
- auto indent after written https://unix.stackexchange.com/questions/162057/can-i-have-emacs-automatically-indent-my-whole-code-after-it-is-all-written
- https://www.google.com/search?q=emacs+remove+line+breaks
- https://www.google.com/search?q=emacs+paste+without+line+breaks
- https://www.google.com/search?q=emacs+replace+multiple+spaces+with+one
- https://www.google.com/search?q=emacs+replace+regex+double+space
- select word at cursor https://emacs.stackexchange.com/questions/35069/best-way-to-select-a-word
******* Spell Check
:PROPERTIES:
:ID:       94AE454A-9369-46E4-914E-E6DC95E8FD16
:END:
#+BEGIN_SRC emacs-lisp

(setq ispell-program-name "aspell")

(add-to-list 'exec-path "/usr/local/bin")

(setq ispell-dictionary-alist
      '((nil
	 "[A-Za-z]" "[^A-Za-z]" "[']" nil
	 ("-B" "-d" "english" "--dict-dir"
	  "/Library/Application Support/cocoAspell/aspell6-en-6.0-0")
	 nil iso-8859-1)))

(setq ispell-personal-dictionary "~/.aspell.en.pws")

(setq ispell-program-name "aspell"
      ispell-dictionary "english"
      ispell-dictionary-alist
      (let ((default '("[A-Za-z]" "[^A-Za-z]" "[']" nil
                       ("-B" "-d" "english" "--dict-dir"
                        "/Library/Application Support/cocoAspell/aspell6-en-6.0-0")
                       nil iso-8859-1)))
        `((nil ,@default)
          ("english" ,@default))))
;; Flyspell
;;  Require flyspell for org-mode:

(add-hook 'org-mode-hook 'turn-on-flyspell)
(add-hook 'markdown-mode-hook 'flyspell-mode)
;; easy spell check
(global-set-key (kbd "<f8>") 'ispell-word)
(global-set-key (kbd "C-S-<f8>") 'flyspell-mode)
(global-set-key (kbd "C-M-<f8>") 'flyspell-buffer)
(global-set-key (kbd "C-<f8>") 'flyspell-check-previous-highlighted-word)
(defun flyspell-check-next-highlighted-word ()
  "Custom function to spell check next highlighted word"
  (interactive)
  (flyspell-goto-next-error)
  (ispell-word)
  )
(global-set-key (kbd "M-s M-n") 'flyspell-check-next-highlighted-word)

(add-to-list 'ispell-skip-region-alist '(":\\(PROPERTIES\\|LOGBOOK\\):" . ":END:"))
(add-to-list 'ispell-skip-region-alist '("#\\+BEGIN_SRC" . "#\\+END_SRC"))
#+END_SRC
****** Image manipulation
- http://yummymelon.com/devnull/announcing-casual-image.html
****** Integration with programming
:PROPERTIES:
:ID:       3b3db398-e82a-4a5d-b4cb-a8c10cc08aca
:END:
[[id:44347009-ee09-4cf1-9786-f0106a378a2e][sql integration]]
[[id:5d29a241-3165-4a3b-a88c-c3fe122d2ff9][Jupyter integration]]
[[id:e33cbb04-6299-4a46-bcbd-116bdd72e99d][Rmd integration]]
[[id:e7806712-9607-4b78-8662-80a2659c203d][Python integration]]
[[id:07b8634c-70a6-4a99-90b5-0f5083ccaf04][Emacs shell IDE]]
****** Interfaces
- https://github.com/emacs-slack/emacs-slack/
****** LaTeX integration
https://www.reddit.com/r/emacs/comments/1fw7jbb/karthink_emacs_latex/
****** llm integration
:PROPERTIES:
:ID:       907b0796-a3c5-4851-8cf7-272d6c9750d1
:END:
- https://github.com/chep/copilot-chat.el
- https://www.reddit.com/r/emacs/comments/17hvcsi/ellama_moved_to_llm_library_and_now_supports/
- https://melpa.org/#/chatgpt-shell
- https://www.reddit.com/r/emacs/comments/1459elk/llm_pal_ai_inside_emacs_via_lsp_locally_hosted/
- https://docs.khoj.dev/#/emacs
- https://github.com/ahyatt/llm
- https://github.com/dolmens/gptel-aibo
- https://www.reddit.com/r/emacs/comments/1gxuewa/llms_are_made_for_emacs_using_ellama_ollama_is/
****** Menus and interfaces
- https://github.com/oantolin/embark
- https://github.com/kickingvegas/casual
- http://yummymelon.com/devnull/announcing-casual-avy.html
****** Package management
- how to autoupdate packages?
- :ensure t should install package if not already present on local
- https://jwiegley.github.io/use-package/keywords/
- https://dev.to/deciduously/how-i-emacs-and-so-can-you-packages-m9p
- :diminish: keep off mod line
- https://jwiegley.github.io/use-package/keywords/
- https://www.reddit.com/r/emacs/comments/j2xezg/usepackage_best_practices/
****** Plain text diagraming
- see mermaid
- https://github.com/skuro/plantuml-mode
****** Popups
:PROPERTIES:
:ID:       c82504a2-5be4-4ec0-b2e4-bb7080561e05
:END:
https://www.emacswiki.org/emacs/PosTip
#+begin_src emacs-lisp
 (require 'pos-tip)
 (defun my-describe-function (function)
   "Display the full documentation of FUNCTION (a symbol) in tooltip."
   (interactive (list (function-called-at-point)))
   (if (null function)
       (pos-tip-show
        "** You didn't specify a function! **" '("red"))
     (pos-tip-show
      (with-temp-buffer
        (let ((standard-output (current-buffer))
              (help-xref-following t))
          (prin1 function)
          (princ " is ")
          (describe-function-1 function)
          (buffer-string)))
      nil nil nil 0)))
#+end_src

#+begin_src emacs-lisp
(defun convert-table-to-tsv-alist (file)
  (let ((alist '()))
    (with-temp-buffer
      (insert-file-contents file)
      (while (not (eobp))
        (let* ((line (buffer-substring-no-properties (line-beginning-position) (line-end-position)))
               (split-line (split-string line "\t")))
          (push (cons (nth 0 split-line) (nth 1 split-line)) alist))
        (forward-line 1)))
    alist))

(setq my-org-definitions (convert-table-to-tsv-alist "/tmp/definitions.tsv"))

(require 'popup)

(defun my-org-define-at-point ()
  (let* ((word (thing-at-point 'word t))
         (lowercase-word (downcase word))
         (definition (cdr (assoc lowercase-word
                                 (mapcar (lambda (pair)
                                           (cons (downcase (car pair)) (cdr pair)))
                                         my-org-definitions)))))
    (when definition
      (popup-tip definition :around t :height 20 :scroll-bar t :margin t))))

(add-hook 'org-mode-hook
          (lambda ()
            (setq-local eldoc-documentation-function 'my-org-define-at-point)
            (eldoc-mode 1)))

#+end_src
****** Private and hidden information 
- https://www.reddit.com/r/emacs/comments/1hwjkm4/emacs_passwords_how_are_people_managing_their/
****** Programming
:PROPERTIES:
:ID:       576ada02-11e2-48d8-95de-11e8c31dad9c
:END:
- https://www.reddit.com/r/emacs/comments/1czgkk0/emacs_as_code_navigation_tool/
- https://www.reddit.com/r/emacs/comments/1d3f5a7/do_you_use_tab_or_space_for_indenting_emacs_lisp/
- https://testing.googleblog.com/2023/11/write-clean-code-to-reduce-cognitive.html
- https://www.val.town/
- https://www.youtube.com/c/arjancodes
- https://abseil.io/resources/swe-book/html/ch02.html#blameless_postmortem_culture
- https://processing.org/
- https://blog.calebjay.com/posts/my-emacs-environment/#on-programming-in-emacs
******* Coding workflow
:PROPERTIES:
:ID:       0fb4f5fc-60a1-4f26-a49a-22d283840ff8
:END:
- https://www.reddit.com/r/emacs/comments/v0kv5d/my_emacs_workflow_as_a_software_engineer_and/
****** rectangle commands
:PROPERTIES:
:ID:       3007a4a2-78d2-4953-8f0f-de820ec814c8
:END:
- Selection
  - https://www.google.com/search?q=emacs+rectangle+paste
- http://xahlee.info/emacs/emacs/emacs_string-rectangle_ascii-art.html

****** Ricing
- ricing
  #+begin_src emacs-lisp
;(setq-default left-margin-width 2)
;(setq-default right-margin-width 2)
(set-fringe-mode 0)
#+end_src
  #+begin_src emacs-lisp
(setq line-spacing 0.05)
(setq header-line-format " ")
(setq org-startup-indented t
      ;;org-bullets-bullet-list '(" ") ;; no bullets, needs org-bullets package
      ;;org-ellipsis "  " ;; folding symbol
      ;;org-pretty-entities nil
      ;;org-hide-emphasis-markers t
      ;; show actually italicized text instead of /italicized text/
      org-agenda-block-separator ""
      ;;org-fontify-whole-heading-line t
      ;;org-fontify-done-headline t
      ;;org-fontify-quote-and-verse-blocks t
)
(setq org-agenda-remove-tags t)
#+end_src
****** Snippets and templating
:PROPERTIES:
:ID:       64c78e3f-2d73-4d63-88a2-cc5dca985b29
:END:
- https://www.reddit.com/r/emacs/comments/wdbk34/emacss_native_templating_and_snippet_fuctionality/

****** Terminal interface
:PROPERTIES:
:ID:       eaddf543-3698-4fa7-a977-3bc148bf03d3
:END:
- https://www.reddit.com/r/emacs/comments/vs3t76/emacs_as_your_terminal_multiplexer/
****** Version control, backup, and file saving
:PROPERTIES:
:ID:       9b204c0f-c3ef-4d7b-ae86-8ff197f5bf39
:END:
- https://stackoverflow.com/questions/15254414/how-to-silently-save-all-buffers-in-emacs
- https://alexpeits.github.io/emacs.d/#org4048a44
- simple vc push pull https://www.gnu.org/software/emacs/manual/html_node/emacs/Pulling-_002f-Pushing.html
****** White space and empty lines
http://xahlee.info/emacs/emacs/elisp_compact_empty_lines.html
****** Window and frame management
:PROPERTIES:
:ID:       1166a056-8f4a-4b18-9b27-2b670e735e70
:END:
- https://depp.brause.cc/shackle/
- https://karthinks.com/software/emacs-window-management-almanac/
https://www.reddit.com/r/emacs/comments/179t67l/window_management_share_your_displaybufferalist/
****** Working with source code
:PROPERTIES:
:ID:       da42e3d1-224c-4955-b949-9266e922b84b
:END:
- https://karthinks.com/software/a-consistent-structural-editing-interface/#example-a-lispy-lite-without-lispy
- [[https://www.google.com/search?q=org-mode+tangle+mkdir][google:org-mode tangle mkdir]]
- [[id:ecb54a80-b177-4c9e-a3c9-47d1f680c7ac][Code indentation]]
***** [[id:d7d54139-64d0-4cfe-ab3a-879b3617b226][Org-mode]]
***** Scripts
:PROPERTIES:
:ID:       14a9e27b-c960-42cb-b052-536eaf6a22da
:END:
****** org_export_to_beamer.sh
:PROPERTIES:
:ID:       3aa1ed51-12ed-4ca3-b0fb-6462c0a2ce5a
:END:
#+begin_src bash :tangle ./scripts/org_export_to_beamer.sh
emacsclient -e "(progn (find-file \"$1\") \
                       (org-id-goto \"$2\") \
                       (org-beamer-export-to-pdf nil t))"
#+end_src
***** General reference and miscellaneous
- https://arxiv.org/pdf/2008.06030
- https://www.reddit.com/r/emacs/comments/1h5c778/which_emacsconf_2024_talks_have_your_attention/
- https://www.reddit.com/r/planetemacs/comments/1gw5oqy/protesilaos_stavrou_tutorials_and_demos_of/
- https://emacsconf.org/2024/talks/
- https://lambdaland.org/posts/2024-05-30_top_emacs_packages/- https://www.reddit.com/r/emacs/comments/mqtwzx/creating_custom_minor_modes_learning_emacs_lisp_7/
- https://github.com/emacs-tw/awesome-emacs
- https://www.reddit.com/r/emacs/comments/1feaf37/minimal_emacsd_emacs_starter_kit_with_better/
- https://www.jamescherti.com/essential-emacs-packages/
- https://github.com/LaurenceWarne/reddit-emacs-tips-n-tricks/blob/master/out.md
- https://emacsconf.org/2021/all/
- https://sheer.tj/the_way_of_emacs.html
- [[https://www.youtube.com/c/SystemCrafters/videos?app=desktop&view=0&sort=p&flow=list][system crafters youtube]]
- reference snippet to install snapshot on ubunut
  #+begin_src bash :tangle no
sudo add-apt-repository ppa:ubuntu-elisp/ppa
sudo apt-get update
sudo apt-get install emacs-snapshot
#+end_src
- Emacs from Scratch
  -
  - https://www.reddit.com/r/emacs/comments/k5cqwb/emacs_ide_python_development_configuration_live/
- https://karthinks.com/software/batteries-included-with-emacs/
- https://www.reddit.com/user/publicvoit/
- https://github.com/alphapapa/unpackaged.el
- https://dougie.io/emacs/indentation/
- Tutorials and Challenges
  - [[https://blog.markhepburn.com/2013/12/07/andrew-hyatts-emacs-calc-tutorials][Andrew Hyatt's emacs calc tutorials]]
  - [[https://vimeo.com/search/sort:latest?q=vimgolf+in+emacs][golf in emacs]]
  - http://cestlaz.github.io/stories/emacs/
  - https://sachachua.com/blog/2019/06/2019-06-10-emacs-news/
  - guides
    - https://www.reddit.com/r/emacs/comments/bbb42t/whats_your_job_whats_your_daily_emacs_workflow/
    - [-] tuhdo
      - [X] https://tuhdo.github.io/emacs-tutor.html
      - [ ] https://tuhdo.github.io/emacs-tutor2.html
    - http://emacslife.com/
    - http://emacsrocks.com/
    - [[http://emacs.stackexchange.com/questions?sort=votes][emacs stack exchange questions by vote]]
    - [[https://pawelbx.github.io/emacs-theme-gallery/][nice emacs theme gallary]]
    - cite:bingmann2015
    - not useful
      - [[http://david.rothlis.net/emacs/howtolearn.html][Rothlisberger How to Learn Emacs]]
- config/init file examples
  - https://shreyas.ragavan.co/docs/emacs-config/
  - https://github.com/jzohrab/emacs.d/blob/master/init.el#L31
  - https://emacs.christianbaeuerlein.com/#org7a4a164
  - https://www.reddit.com/r/emacs/comments/eewwyh/officially_introducing_memacs/
  - https://jmonlong.github.io/Hippocamplus/emacs/
  - https://github.com/0pendev/dotfiles/blob/master/emacs/config.org
  - [[https://github.com/xgarrido/emacs-starter-kit/blob/master/starter-kit.org][github: xgarrido emacs starter kit]]
- [X] generate local byte-compiled elisp
  - if VC makes a newer .el, .elc will load, but with warning to recompile
  - http://ergoemacs.org/emacs/emacs_byte_compile.html
- cite:monnier2020
- https://bofh.org.uk/2019/02/25/baking-with-emacs/
- https://github.com/sunnyhasija/DOOMEmacs
- elisp
  - https://www.gnu.org/software/emacs/manual/html_mono/elisp.html
  - https://www.gnu.org/software/emacs/manual/html_node/eintr/index.html
  - https://exercism.org/tracks/emacs-lisp
  - https://old.reddit.com/r/emacs/comments/qcr432/elispemacs_tutorialbook_with_real_world_projects/

- [[https://www.reddit.com/r/emacs/comments/60nb8b/favorite_builtin_emacs_commands/][reddit: favorite emacs command]]
- https://github.com/rougier/svg-tag-mode
- https://www.reddit.com/r/emacs/comments/ta6s74/steveys_tech_talk_e39_a_guided_tour_of_emacs/
-
https://www.reddit.com/r/emacs/comments/ucldkz/are_we_living_in_the_golden_age_of_emacs/
- https://www.reddit.com/r/emacs/comments/1cvwqnc/maketabboxel/
- https://www.reddit.com/r/emacs/comments/1benj4g/things_you_do_in_emacs_that_will_make_nonemacs/
- Emacs use in science
  - https://github.com/rougier
****** General reference
:PROPERTIES:
:ID:       1ead3d35-2700-49fc-859e-d7e887d2f30e
:END:
- https://www.reddit.com/r/emacs/comments/1bkw1j6/use_information_theory_to_choose_better/
- https://www.reddit.com/r/emacs/comments/1bnj5xe/announcing_casual_an_opinionated_porcelain_for/
- https://karthinks.com/software/batteries-included-with-emacs/
- https://www.reddit.com/r/emacs/comments/wcupae/lets_share_your_top_3_packages_that_you_cant_live/


***** Ideas
- make a custom transient menu https://github.com/karthink/calc-transient/blob/master/calc-transient.el
#+begin_src emacs-lisp
  ;; (defun my/load-startup-files ()
  ;;   "Load specified files into buffers at startup."
  ;;   (find-file-noselect "~/repos/org/bib.bib")

  ;;   ;; Load all .org files in ~/repos/ and its immediate subdirectories
  ;;   (dolist (dir (directory-files "~/repos/" t "\\`[^.]"))
  ;;     (let ((org-files (directory-files dir t "\\.org\\'")))
  ;;       (dolist (file org-files)
  ;;         (find-file-noselect file))))

  ;;   ;; Add any additional files you want to load on startup below
  ;;   ;;(find-file-noselect "/path/to/another/file")
  ;; )

  ;; (add-hook 'after-init-hook 'my/load-startup-files)

#+end_src
****** Paste without line breaks
#+begin_src emacs-lisp
(defun paste-without-line-breaks ()
  "Paste the clipboard content without line breaks."
  (interactive)
  (let ((clipboard-content (current-kill 0)))
    (insert (replace-regexp-in-string "\n" " " clipboard-content))))

;; Bind to C-c v (you can change this to any key combination you prefer)
(global-set-key (kbd "C-c v") 'paste-without-line-breaks)
#+end_src
- https://claude.ai/chat/5c14d313-143c-4cd9-882a-0d59aa67c09e
- https://chatgpt.com/c/66f70956-8184-8005-b6ff-6c77e19ddcde
****** System checker
#+begin_src emacs-lisp
(defun my-ess-shell-display-buffer-in-new-frame (buffer alist)
  "Display the R shell buffer in a new frame."
  (let ((display-buffer-alist
         '(("*R*" display-buffer-pop-up-frame))))
    (display-buffer buffer alist)))

(advice-add 'ess-eval-region :around
            (lambda (orig-fun &rest args)
              "Send region and open the R buffer in a new frame."
              (let ((display-buffer-alist
                     '(("*R*" . (my-ess-shell-display-buffer-in-new-frame)))))
                (apply orig-fun args))))

(advice-add 'ess-eval-line :around
            (lambda (orig-fun &rest args)
              "Send line and open the R buffer in a new frame."
              (let ((display-buffer-alist
                     '(("*R*" . (my-ess-shell-display-buffer-in-new-frame)))))
                (apply orig-fun args))))

(advice-add 'ess-eval-paragraph :around
            (lambda (orig-fun &rest args)
              "Send paragraph and open the R buffer in a new frame."
              (let ((display-buffer-alist
                     '(("*R*" . (my-ess-shell-display-buffer-in-new-frame)))))
                (apply orig-fun args))))
#+end_src

#+begin_src emacs-lisp
(defun my-ess-shell-display-buffer-in-new-frame-and-return (buffer alist)
  "Display the R shell buffer in a new frame, then return to the original buffer."
  (let ((orig-buffer (current-buffer)))
    (let ((display-buffer-alist
           '(("*R*" display-buffer-pop-up-frame))))
      (display-buffer buffer alist))
    (select-frame-set-input-focus (window-frame (get-buffer-window orig-buffer)))))

(advice-add 'ess-eval-region :around
            (lambda (orig-fun &rest args)
              "Send region to R, open the R buffer in a new frame, and return to the original buffer."
              (let ((display-buffer-alist
                     '(("*R*" . (my-ess-shell-display-buffer-in-new-frame-and-return)))))
                (apply orig-fun args))))

(advice-add 'ess-eval-line :around
            (lambda (orig-fun &rest args)
              "Send line to R, open the R buffer in a new frame, and return to the original buffer."
              (let ((display-buffer-alist
                     '(("*R*" . (my-ess-shell-display-buffer-in-new-frame-and-return)))))
                (apply orig-fun args))))

(advice-add 'ess-eval-paragraph :around
            (lambda (orig-fun &rest args)
              "Send paragraph to R, open the R buffer in a new frame, and return to the original buffer."
              (let ((display-buffer-alist
                     '(("*R*" . (my-ess-shell-display-buffer-in-new-frame-and-return)))))
                (apply orig-fun args))))
#+end_src


https://claude.ai/chat/fdc4825f-2695-4349-9c6a-b41313905a07

https://chatgpt.com/c/6722326f-2360-8005-bb87-58ed4372e525
#+begin_src emacs-lisp
(defun create-or-update-test-buffer-in-new-frame-and-return ()
  "Create or update a buffer named '*Test Buffer*' in a new frame, insert 'THIS IS A TEST', then return focus to the original buffer."
  (let ((original-frame (selected-frame))
        (original-buffer (current-buffer))
        (buffer (get-buffer-create "*Test Buffer*")))
    ;; Create a new frame if the buffer does not already exist in another frame
    (unless (get-buffer-window buffer t)
      (select-frame (make-frame-command)))
    ;; Switch to the target buffer and insert/update content
    (switch-to-buffer buffer)
    (erase-buffer) ;; Clear the buffer before inserting new content
    (insert "THIS IS A TEST NEW")
    (insert (format "\n\nYasnippets are stored at: \n%s\n" yas-snippet-dirs))

;; Check if Yasnippet directories are readable and report back
    (dolist (dir yas-snippet-dirs)
      (if (file-readable-p dir)
          (insert (format "\nDirectory '%s' is readable.\n" dir))
        (insert (format "Directory '%s' is NOT readable.\n" dir))))

    ;; Return focus to the original frame and buffer
    (select-frame-set-input-focus original-frame)
    (switch-to-buffer original-buffer)))

(create-or-update-test-buffer-in-new-frame-and-return)

#+end_src

****** (org-link-open-buffer)
https://chatgpt.com/c/cc823a5b-e895-4a4e-b4a4-1b1a1f2716bb
#+begin_src emacs-lisp
(defun org-link-open-buffer (buffer-name)
  "Switch to a buffer with BUFFER-NAME."
  (switch-to-buffer buffer-name))

(org-link-set-parameters "buffer"
                         :follow (lambda (path) (org-link-open-buffer path)))

#+end_src

****** (run-gnome-ctrl)

#+begin_src emacs-lisp
(defun run-gnome-ctrl ()
  "Starts the Gnome Control Center application.

Example usage:
  (run-gnome-ctrl)"

  (start-process "gnome-control-center"
		 "*Messages*"
		 "env"
		 "XDG_CURRENT_DESKTOP=GNOME"
		 "gnome-control-center"))

#+end_src

Invoke by org-open-at-point like [[elisp:(run-gnome-ctrl)]]
***** Packages and modes
:PROPERTIES:
:ID:       60c3beed-f228-4707-9033-4cce38ca5b00
:END:
- https://github.com/alexluigit/dirvish
- https://www.masteringemacs.org/article/how-to-get-started-tree-sitter
****** Emacs packages                                                  :flat:
:PROPERTIES:
:ID:       a9ff4421-e3b7-47c1-8b65-bfc5a3b34e5d
:END:
******* prog-mode
#+begin_src emacs-lisp

(setq-default prettify-symbols-alist '(
                                       ("DONE"  ?✔)
                                       ))
(setq prettify-symbols-unprettify-at-point 'right-edge)
(add-hook 'org-mode-hook 'prettify-symbols-mode)
(global-prettify-symbols-mode t)

#+end_src
******* org-super-links
:PROPERTIES:
:ID:       61e008b3-507f-4f8f-9d79-8df0731ca190
:END:
#+begin_src emacs-lisp
;; Require the package
(require 'org-super-links)

;; Keybindings
(global-set-key (kbd "C-c s s") 'org-super-links-link)
(global-set-key (kbd "C-c s l") 'org-super-links-store-link)
(global-set-key (kbd "C-c s C-l") 'org-super-links-insert-link)

;; Configuration
(setq org-super-links-backlink-into-drawer nil
      org-super-links-backlink-prefix nil)
#+end_src
******* org-web-tools
:PROPERTIES:
:ID:       c968788a-5931-4941-9111-56db279d1494
:END:
https://github.com/alphapapa/org-web-tools
******* anki-editor
:PROPERTIES:
:ID:       037ae1d1-f3b6-4b63-8d43-4d642b947c71
:END:
- anki editor is working- save the .el https://github.com/anki-editor/anki-editor

 - General reference
   - https://yiufung.net/post/anki-org/
   - dependencies
     - [[https://github.com/FooSoft/anki-connect#installation][anki connect add-on]]
******** anki.cloze                                                     :yas:
:PROPERTIES:
:ID:       1c768948-d494-47ba-b5f3-2629c072e527
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/anki.cloze
# -*- mode: snippet -*-
# key: anki.cloze
# expand-env: ((yas-indent-line 'none))
# --
`(make-string (org-current-level) ?*)` ${2:(${(capitalize yas-text)})} :anki:
:PROPERTIES:
:ANKI_NOTE_TYPE: Cloze
:ANKI_DECK: ${1: <DECK>}
:END:
`(make-string (+ 1 (org-current-level)) ?*)` Text
$0
`(make-string (+ 1 (org-current-level)) ?*)` Extra
#+end_src


******* AUCTeX
:PROPERTIES:
:ID:       eb4a0bb3-2e8a-4bf5-9186-11f972b2e06d
:END:
[[file:~/repos/basecamp-private/basecamp-private.org::*AUCTeX][My AUCTeX setup]]
- documentation
  - [[https://www.gnu.org/software/auctex/manual/auctex/Folding.html][3.2 Folding Macros and Environments]]
- https://stackoverflow.com/questions/7587287/how-do-i-bind-latexmk-to-one-key-in-emacs-and-have-it-show-errors-if-there-are-a
- [[https://www.gnu.org/software/auctex/manual/auctex.html#Quick-Start][Quick start]]
- [[https://tex.stackexchange.com/questions/145318/how-to-make-auctex-not-prompt-me-on-c-c-c-c][stack:tex: How to make auctex not prompt me on C-c C-c]]
- [[https://tex.stackexchange.com/questions/20843/useful-shortcuts-or-key-bindings-or-predefined-commands-for-emacsauctex][stack:tex: Useful shortcuts or key bindings or predefined commands for emacs+AUCTeX]]
- [[https://www.gnu.org/software/auctex/manual/auctex.html#Quick-Start][documentation]]
- [[https://www.gnu.org/software/auctex/][website]]
- [[https://www.emacswiki.org/emacs/AUCTeX][EmacsWiki: AUCTeX]]
- https://piotrkazmierczak.com/2010/emacs-as-the-ultimate-latex-editor/
#+BEGIN_SRC emacs-lisp
(setq TeX-auto-save t)
(setq TeX-parse-self t)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(TeX-source-correlate-method (quote synctex))
 '(TeX-source-correlate-mode t)
 '(TeX-source-correlate-start-server t)
 '(TeX-view-program-selection (quote (((output-dvi has-no-display-manager) "dvi2tty") ((output-dvi style-pstricks) "dvips and gv") (output-pdf "Okular") (output-dvi "xdvi") (output-pdf "Evince") (output-html "xdg-open"))))
 '(delete-selection-mode nil)
 '(mark-even-if-inactive t)
 '(scroll-bar-mode (quote right))
 '(transient-mark-mode 1))

(setq TeX-save-query nil)
#+END_SRC

- documentation
  - [[https://www.gnu.org/software/auctex/manual/auctex/Folding.html][3.2 Folding Macros and Environments]]

- https://stackoverflow.com/questions/7587287/how-do-i-bind-latexmk-to-one-key-in-emacs-and-have-it-show-errors-if-there-are-a
- [[https://www.gnu.org/software/auctex/manual/auctex.html#Quick-Start][Quick start]]
- [[https://tex.stackexchange.com/questions/145318/how-to-make-auctex-not-prompt-me-on-c-c-c-c][stack:tex: How to make auctex not prompt me on C-c C-c]]
- [[https://tex.stackexchange.com/questions/20843/useful-shortcuts-or-key-bindings-or-predefined-commands-for-emacsauctex][stack:tex: Useful shortcuts or key bindings or predefined commands for emacs+AUCTeX]]
- [[https://www.gnu.org/software/auctex/manual/auctex.html#Quick-Start][documentation]]
- [[https://www.gnu.org/software/auctex/][website]]
- [[https://www.emacswiki.org/emacs/AUCTeX][EmacsWiki: AUCTeX]]
- https://piotrkazmierczak.com/2010/emacs-as-the-ultimate-latex-editor/
******* Company mode
:PROPERTIES:
:ID:       c65678fd-8df9-4f16-929c-c960c7441cd0
:END:
- company-modes
  - https://www.reddit.com/r/emacs/comments/c6w0zo/what_part_of_company_makes_all_those_strangely/
  - https://github.com/company-mode/company-mode
  - http://company-mode.github.io/
    #+begin_src emacs-lisp
;; (add-hook 'after-init-hook 'global-company-mode)
;; (with-eval-after-load 'company
;;   (add-to-list 'company-backends 'company-restclient)
;; ;;  (add-to-list 'company-backends 'company-auctex)
;;   (add-to-list 'company-backends 'company-anaconda))
;;   (setq company-auto-complete-chars nil)
;; ;;(add-hook 'python-mode-hook 'anaconda-mode)
#+end_src
- [[id:96FF9470-60C5-40AA-91E0-93B3B5983431][My Company-mode config]]
- preserve capitalization?
- https://www.reddit.com/r/emacs/comments/oh36yi/company_and_companyshell_super_slow_over_tramp/
- https://www.badykov.com/emacs/2020/05/05/async-company-mode-backend/

******* Conda mode
:PROPERTIES:
:ID:       d87d17a7-438d-4441-9eff-4b3813d24ad0
:END:
- https://github.com/necaris/conda.el
#+begin_src emacs-lisp
;;Anaconda support
(require 'conda)

;; if you want interactive shell support, include:
(conda-env-initialize-interactive-shells)
;; if you want eshell support, include:
(conda-env-initialize-eshell)
;; if you want auto-activation (see below for details), include:
(conda-env-autoactivate-mode t)

(custom-set-variables
 '(conda-anaconda-home "/opt/miniconda3/"))

(setq conda-env-home-directory (expand-file-name "/opt/miniconda3") ;
      conda-env-subdirectory "envs")

(setq conda-env-home-directory "/opt/miniconda3")
;;get current environment--from environment variable CONDA_DEFAULT_ENV
;;(conda-env-activate 'getenv "CONDA_DEFAULT_ENV")
;;(conda-env-autoactivate-mode t)
(setq-default mode-line-format (cons mode-line-format '(:exec conda-env-current-name)))

(setenv "WORKON_HOME" "/opt/miniconda3/envs")
(pyvenv-mode 1)
#+end_src
#+begin_src emacs-lisp
(setenv "CONDA_DEFAULT_ENV" "base")
(getenv "CONDA_DEFAULT_ENV")
#+end_src

- [[id:011ea19d-0394-46b4-b3f5-3f68e4af2912][My Conda mode config]]
- https://github.com/necaris/conda.el
******* Council / Ivy / Swiper
:PROPERTIES:
:ID:       b7e69b49-83c7-4571-8bc0-097f431ce1c5
:END:
https://www.google.com/search?q=emacs+swiper+can%27t+clear+minibuffer&oq=emacs+swiper+can%27t+clear+minibuffer&aqs=chrome..69i57.6992j0j1&sourceid=chrome&ie=UTF-8
https://oremacs.com/swiper/
https://sam217pa.github.io/2016/09/13/from-helm-to-ivy/
counsel-yank-pop

- search for spaces as double space
- http://oremacs.com/swiper/

https://www.reddit.com/r/emacs/comments/mdjrza/consult_key_features_and_some_tweaks/
[[id:dd893353-0e1c-4d77-85af-7121845298ed][My Council / ivy / swiper setup]]
******* org-edna
:PROPERTIES:
:ID:       2acfefa2-2fd1-465f-8c79-d14160de0284
:END:
blockers and counters are not respected in orgzly
https://chatgpt.com/c/673a1bcb-dbe0-8005-b289-3292f7066d63
https://www.nongnu.org/org-edna-el/
- id syntax- can be a linker with [[id: , but cannot have a name like [[ ][
#+begin_src emacs-lisp
(use-package org-edna
  :ensure t
  :config
  (org-edna-mode 1))
#+end_src



******* Eglot
:PROPERTIES:
:ID:       f81485ff-a59f-4016-b294-fd2dc74669f2
:END:
https://www.reddit.com/r/emacs/comments/17tm2cc/what_are_your_favorite_companion_packages_to_eglot/
https://joaotavora.github.io/eglot/#Setting-Up-LSP-Servers
https://www.reddit.com/r/emacs/comments/ye18nd/setting_up_eglot_for_python/
[[id:57a8362b-d3a7-410c-b137-b24f800e2edc][My eglot config]]
******* Elpy
:PROPERTIES:
:ID:       5cd6f647-11ba-445a-bcde-07493b0e4fae
:END:
- switches elpy from using flymake to flycheck for error-checking in Python files.
#+begin_src emacs-lisp
;; Enable Flycheck
(when (require 'flycheck nil t)
  (setq elpy-modules (delq 'elpy-module-flymake elpy-modules))
  (add-hook 'elpy-mode-hook 'flycheck-mode))
#+end_src

- [[id:79cc7fdf-5e4b-4d3a-ace2-60cae707f81b][My elpy config]]
- Processes
  - Use [[id:b16d0202-8d35-472b-b538-87a7d6a6cef7][conda]] environment - call with M-x https://elpy.readthedocs.io/en/latest/concepts.html#virtual-envs
- Reference
  - python elpy https://elpy.readthedocs.io/en/latest/editing.html
  - https://elpy.readthedocs.io/en/latest/ide.html#interactive-python
- https://emacs.stackexchange.com/questions/59979/elpy-configuration-setting-up-a-virtual-environment-and-pip-conflic-with-conda

******* emacs-native-shell-complete
:PROPERTIES:
:ID:       eecd8a09-89dd-4cb7-99ed-719eb3890597
:END:
https://github.com/CeleritasCelery/emacs-native-shell-complete
******* ESS (Emacs Speaks Statistics)
:PROPERTIES:
:ID:       147724ad-7598-4be6-b8a9-725a19eb39fe
:END:
- ESS Frames setup
  #+begin_src emacs-lisp
;;;
(setq inferior-ess-own-frame t)
(setq inferior-ess-same-window nil)
;;;
;;;;;create a new frame for each help instance
;;;
(setq ess-help-own-frame t)
;;;;;If you want all help
;;;;; buffers to go into one frame do:
;;;
(setq ess-help-own-frame 'one)

(setq ess-ask-for-ess-directory nil)
(setq ess-local-process-name "R")

#+end_src
- no python support- https://github.com/emacs-ess/ESS/issues/910
- ess-remote to docker R
https://www.reddit.com/r/emacs/comments/op4fcm/send_command_to_vterm_and_execute_it/
- [[id:3BC3B329-C75B-461C-A4BD-E565C2046424][My ESS config]]
- for ESS- https://github.com/emacs-ess/ESS/issues/144
- Emacs Speaks Statistics (ess)
  - https://github.com/emacs-ess/ESS
  - https://ess.r-project.org/
  - [[http://ess.r-project.org/Manual/ess.html][documentation]]
- ess docker solutions
  - https://gtown-ds.netlify.app/2017/08/16/docker-emacs/
- http://ess.r-project.org/Manual/ess.html#Activating-and-Loading-ESS
- cite:rossini2016
- https://stat.ethz.ch/pipermail/ess-help/2010-January/005822.html
- https://github.com/emacs-lsp/lsp-mode/issues/1383
******* key-chord
:PROPERTIES:
:ID:       dab8038b-67bd-413e-88d5-25d168f29e9b
:END:
- [[https://github.com/emacsorphanage/key-chord][repo]]
#+begin_src emacs-lisp
(key-chord-mode 1)

(key-chord-define-global ",." "<>\C-b")

#+end_src
<> <> ,.<sf>

#+begin_src emacs-lisp
(key-chord-define-global "xx"      'shell)
(key-chord-define-global ",,"     'indent-for-comment)
(key-chord-define-global "vv"     'vterm)
#+end_src
https://www.reddit.com/r/emacs/comments/22hzx7/what_are_your_keychord_abbreviations/
******* Evil
:PROPERTIES:
:ID:       1a23bec3-19e2-4340-b16f-ece6abd9c9e0
:END:
- https://stackoverflow.com/questions/8483182/evil-mode-best-practice?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa
cite:fisher2011
#+begin_src emacs-lisp
;;(require 'evil)
;;(evil-mode 1)
;;(setq evil-default-state 'emacs) ;; changes default state to emacs
#+end_src
https://github.com/emacs-evil/evil


******* expand-region.el
:PROPERTIES:
:ID:       355c258b-349d-48da-b4d5-b74c3fa27c24
:END:
  #+BEGIN_SRC emacs-lisp
;;(use-package 'expand-region)
;;(global-set-key (kbd "C-=") 'er/expand-region)
  #+END_SRC
******* Flycheck
:PROPERTIES:
:ID:       d11b7472-7085-4d5c-b95a-8ef764a5f805
:END:
- https://github.com/flycheck/flycheck-eglot/tree/9ff8d0068be59b1450964b390349d75a68af21ed
- https://stackoverflow.com/questions/48051120/display-flycheck-buffer-automatically-when-there-are-errors
******* Flyspell
:PROPERTIES:
:ID:       d412bcc7-dfe0-4614-9c5d-72087888c90a
:END:
[[id:aeb91453-de6b-44ff-9cfd-ae35d723e58e][My flyspell config]]
******* Helm
:PROPERTIES:
:ID:       96c0f509-c06b-4e48-8f28-019cd2ca1a38
:END:
eclude in search with ![

cite:zhou2020
https://www.google.com/search?client=ubuntu&hs=vZc&sxsrf=ALeKk03r2GUTR1rKBPenicUeY3PH70WUBw%3A1614012267113&ei=a98zYO-lBoK2tAbqu7WICQ&q=emacs+helm+ignore+pattern+-files+-buffers&oq=emacs+helm+ignore+pattern+-files+-buffers&gs_lcp=Cgdnd3Mtd2l6EANQ6hxYsipgkCxoAHAAeAGAAZACiAHHCJIBBTYuMy4xmAEAoAEBqgEHZ3dzLXdpesABAQ&sclient=gws-wiz&ved=0ahUKEwivh-Ce-P3uAhUCG80KHepdDZEQ4dUDCA4&uact=5
[[https://emacs-helm.github.io/helm/][documentation]]
[[id:f06ac311-dc16-4426-8050-fde5300aebe7][My Helm config]]
- [[https://www.google.com/search?q=helm+emacs+search+only+headers][google:helm emacs search only headers]]
******* Helm-org-rifle
:PROPERTIES:
:ID:       04ebc8f6-f118-4d49-914e-bb87664ab809
:END:
[[id:91afe42c-00fb-466c-ac7d-d30a82c11c95][My helm-org-rifle config]]
******* Hydra
:PROPERTIES:
:ID:       298dec32-b1f3-4300-b0d3-ecb6acce465d
:END:
******* LSP
- lsp https://www.reddit.com/r/emacs/comments/1bhetvi/are_lsps_the_only_way_to_get_code_completion/
******** LSP clients
:PROPERTIES:
:ID:       e1e64cad-ce98-4e7e-872c-ebef38d556ab
:END:
  - https://www.reddit.com/r/emacs/comments/vhqewj/lspbridge_is_good/
******* Magit
#+begin_src emacs-lisp
(use-package magit)
#+end_src

******* openwith
:PROPERTIES:
:ID:       738d7451-8370-4452-8262-2f825eac206f
:END:
[[id:07b21f19-4c71-44da-97e2-65b5b43b8678][My openwith setup]]

******* org-download
:PROPERTIES:
:ID:       d67bbb23-9ab0-4c6e-8b35-af4c7f9a867f
:END:
https://github.com/abo-abo/org-download
******* Org-mode
:PROPERTIES:
:ID:       d7d54139-64d0-4cfe-ab3a-879b3617b226
:END:
#+begin_src emacs-lisp
(defun org-sort-by-deadline ()
  "Sort headings by the DEADLINE property."
  (interactive)
  (org-sort-entries nil ?f
                    (lambda ()
                      (let ((deadline (org-entry-get nil "DEADLINE")))
                        (if deadline
                            (time-to-seconds (org-time-string-to-time deadline))
                          most-positive-fixnum)))))

;; Bind the function to a key if desired
;(global-set-key (kbd "C-c s d") 'org-sort-by-deadline)
(org-sort-by-deadline)
#+end_src
https://www.reddit.com/r/orgmode/comments/1j2b2gx/update_orgsupertag_25_a_new_way_think_about_tag/
- https://sachachua.com/blog/2024/11/excerpts-from-a-conversation-with-john-wiegley-johnw-and-adam-porter-alphapapa-about-personal-information-management/
- https://github.com/yibie/org-supertag/
- https://www.reddit.com/r/orgmode/comments/1hqlspw/reusing_a_code_block_with_different_file_arguments/
- https://github.com/jdtsmith/org-modern-indent
- org map enteries example
  #+begin_src emacs-lisp
(defun toggle-planned-to-unplanned ()
  "Toggle TODO state from PLANNED to UNPLANNED in the current Org buffer."
  (interactive)
  (org-map-entries
   (lambda ()
     (when (string-equal (org-get-todo-state) "PLANNED")
       (org-todo "TODO")))
   t 'agenda))



#+end_src
- [[http://orgmode.org/worg/org-hacks.html][cool hacks]]
- https://www.reddit.com/r/orgmode/comments/ljem1v/is_it_possible_to_change_at_the_end_of_each/
- http://orgmode.org/worg/dev/org-syntax.html
- https://stackoverflow.com/questions/20033467/setting-a-local-file-variable-in-emacs-org-mode
- http://endlessparentheses.com/use-org-mode-links-for-absolutely-anything.html
- https://www.reddit.com/r/orgmode/comments/1gh7p92/how_do_you_use_properties/
- General setup
  #+BEGIN_SRC emacs-lisp
(add-to-list
 'org-latex-classes
 '("article"
   "\\documentclass[12pt]{article}
\\usepackage[utf8]{inputenc}
\\usepackage{titletoc}
\\usepackage{graphicx} %Enhanced support for grpahics
\\usepackage{tabularx} %Tables
\\usepackage{fullpage}
\\usepackage{grffile} %File name support for graphics
\\usepackage{longtable}
\\usepackage{wrapfig}
\\usepackage{listingsutf8} %UTF8 file conversion?  \\usepackage[style=numeric,doi=false,isbn=false,firstinits=true,sorting=none,backend=biber]{biblatex}
\\pagenumbering{arabic}
  "("\\section{%s}" . "\\section*{%s}")
  ("\\subsection{%s}" . "\\subsection*{%s}")
  ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
  ("\\paragraph{%s}" . "\\paragraph*{%s}")
  ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))
  #+END_SRC
  - Paper
    #+BEGIN_SRC emacs-lisp
(add-to-list
 'org-latex-classes
 '("paper"
   "\\documentclass[12pt]{paper}
\\usepackage[utf8]{inputenc}
\\usepackage{titletoc}
\\usepackage{graphicx} %Enhanced support for grpahics
\\usepackage{tabularx} %Tables
\\usepackage{fullpage}
\\usepackage{grffile} %File name support for graphics
\\usepackage{longtable}
\\usepackage{wrapfig}
\\usepackage{listingsutf8} %UTF8 file conversion?
"("\\section{%s}" . "\\section*{%s}")
  ("\\subsection{%s}" . "\\subsection*{%s}")
  ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
  ("\\paragraph{%s}" . "\\paragraph*{%s}")
  ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))
  #+END_SRC
  - Presentations
    #+BEGIN_SRC emacs-lisp
;; https://tex.stackexchange.com/questions/222547/latex-package-stmaryrd-doesnt-work-together-with-org-mode-beamer-template
(add-to-list 'org-latex-classes
             '("present" "\\documentclass[12pt, aspectratio=169]{beamer}
\\usecolortheme{default}"
               ("\\section{%s}" . "\\section*{%s}")
               ("\\begin{frame}[fragile]\\frametitle{%s}"
                "\\end{frame}"
                "\\begin{frame}[fragile]\\frametitle{%s}"
                "\\end{frame}")))

#+END_SRC
  - Report
    #+BEGIN_SRC emacs-lisp
(add-to-list 'org-latex-classes
             '("report" "\\documentclass[letterpaper, 12pt]{article}
\\usepackage[pass]{geometry}
\\usepackage[utf8]{inputenc}
\\usepackage{graphicx} %Enhanced support for grpahics
\\usepackage{tabularx} %Tables
\\usepackage{fullpage}
\\usepackage{grffile} %File name support for graphics
\\usepackage{longtable}
\\usepackage{wrapfig}
\\usepackage{listingsutf8} %UTF8 file conversion?
\\usepackage[style=numeric,doi=false,isbn=false,firstinits=true,sorting=none,backend=biber]{biblatex}
\\pagenumbering{gobble}
\\usepackage[none]{hyphenat}
\\newcommand\\foo{bar}
               [NO-DEFAULT-PACKAGES]
               [NO-PACKAGES]
               [EXTRA]"
               ("\\section{%s}" . "\\section*{%s}")
           ("\\subsection{%s}" . "\\subsection*{%s}")
           ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
           ("\\paragraph{%s}" . "\\paragraph*{%s}")
           ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))

#+END_SRC
  - Manuscript
    #+BEGIN_SRC emacs-lisp

(add-to-list 'org-latex-classes
             '("manuscript" "\\documentclass[12pt]{article}
\\usepackage[utf8]{inputenc}
\\usepackage{graphicx} %Enhanced support for grpahics
\\usepackage{tabularx} %Tables
\\usepackage{fullpage}
\\usepackage{grffile} %File name support for graphics
\\usepackage{longtable}
\\usepackage{wrapfig}
\\usepackage{listingsutf8} %UTF8 file conversion?
\\pagenumbering{arabic}
\\usepackage{lineno} %For line numbers
\\usepackage{manuscript} %Manuscript-like type setting
\\linenumbers
\\newcommand\\foo{bar}
               [NO-DEFAULT-PACKAGES]
               [NO-PACKAGES]
               [EXTRA]"
               ("\\section{%s}" . "\\section*{%s}")
           ("\\subsection{%s}" . "\\subsection*{%s}")
           ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
           ("\\paragraph{%s}" . "\\paragraph*{%s}")
           ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))

#+END_SRC
  - Test
    #+BEGIN_SRC emacs-lisp
(add-to-list
 'org-latex-classes
 '("test" "\\documentclass[12pt]{article}
   [PACKAGES]
   [EXTRA]"
   ("\\section{%s}" . "\\section*{%s}")
   ("\\subsection{%s}" . "\\subsection*{%s}")
   ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
   ("\\paragraph{%s}" . "\\paragraph*{%s}")
   ("\\subparagraph{%s}" . "\\subparagraph*{%s}")))
  #+END_SRC
******** Org-mode and Emacs cookbook                               :cookbook:
:PROPERTIES:
:ID:       88337952-4c36-402e-882f-6ccd6c7ff6a1
:export_file_name: /tmp/test
:END:
- Run a simple timer
  #+begin_src emacs-lisp
(run-at-time "1 min" nil 
  (lambda () 
    (progn 
      (ding) 
      (alert "Timer finished!" :title "Emacs Timer"))))

#+end_src

- Edit sources as sudo
  - /sudo:root@localhost:<PATH>
  - e.g. [[/sudo:root@localhost:/etc/apt/sources.list][Edit apt sources in etc as sudo]]
********* Org-mode guide
********** Clock table

#+BEGIN: clocktable :scope file :maxlevel 6 :match "tagin" :tstart "<2024-10-01>" :tend "<2024-10-03>" :fileskip0 t
#+CAPTION: Clock summary at [2024-10-14 Mon 12:14]
| Headline                   | Time   |      |      |      |      |
|----------------------------+--------+------+------+------+------|
| *Total time*               | *0:16* |      |      |      |      |
|----------------------------+--------+------+------+------+------|
| Basecamp                   | 0:16   |      |      |      |      |
| \_  Org-mode guide         |        | 0:16 |      |      |      |
| \_    Clock table          |        |      | 0:16 |      |      |
| \_      Clock table events |        |      |      | 0:16 |      |
| \_        Included event 1 |        |      |      |      | 0:08 |
| \_        Included event 2 |        |      |      |      | 0:08 |
#+END:

*********** Clock table events
************ Included event 1                                         :tagin:
:LOGBOOK:
CLOCK: [2024-10-01 Tue 12:00]--[2024-10-01 Tue 12:08] =>  0:08
:END:
************ Included event 2                                         :tagin:
:LOGBOOK:
CLOCK: [2024-10-02 Wed 13:00]--[2024-10-02 Wed 13:08] =>  0:08
:END:
************ Excluded event 1                                        :tagout:
:LOGBOOK:
CLOCK: [2024-10-02 Wed 12:00]--[2024-10-02 Wed 12:08] =>  0:08
:END:
********* Code and code blocks
- Elisp processes can be invoked as links in Org-mode with the link type `:elisp`. E.g. =[[elisp:(save-some-buffers 'no-confirm t)][Save all emacs buffers]]=
- My additions and modifications
  - [[id:5ace2dd4-9dfb-41b9-a7ec-5ca32aaf94ae][org-execute-named-block-anywhere]] - allows execution of a code block from another agenda file
******** Processes
:PROPERTIES:
:ID:       8b5c515e-689b-436d-ac09-f368ec6d87ef
:END:
********* 0 Flat                                                       :flat:
:PROPERTIES:
:ID:       1c3e70f6-1ca0-44bd-b2fa-2cf5fae2a126
:END:
********** Org-attach
- https://emacs.stackexchange.com/questions/2162/when-are-org-mode-attachments-preferable-to-file-hyperlinks
********** Prevent log recording

In emacs orgmode, how to prevent the logbook from recording state transitions for a specific header, is there a properties setting?

Yes, you can prevent the logbook from recording state transitions for a specific header in Org mode by setting the property =LOGGING= to =nil=. You can do this by adding the following line under the header:

#+begin_src org
:LOGGING nil
#+end_src

This will stop the logbook from recording state transitions for that specific entry.


********** Execute asynchrous process in source code block
:PROPERTIES:
:ID:       53db0c77-12e8-4b19-80db-231154557310
:END:
#+begin_src emacs-lisp :
(call-process "firefox" nil 0 nil "www.spacemacs.org")

#+end_src


#+begin_src bash :results replace :cache no 
source ~/repos/basecamp/lib/basecamp_function.sh
cd ~/repos/org && git_wkflow_up
if [ $? -ne 0 ]; then
    echo "Error running git_wkflow_up"
    exit 1
fi

echo "Git upload workflow complete"        
#+end_src

********** Command line (batch) export subtree to other doc type
:PROPERTIES:
:ID:       4572239e-35a5-4916-a5da-b605dcceb07a
:END:
- https://emacs.stackexchange.com/questions/48513/how-can-i-export-an-org-subtree-to-html-from-the-command-line/48520#48520
********** Command-line org table export to tsv
:PROPERTIES:
:ID:       08b02da1-16c2-46e0-9dcb-5c0730090d8f
:END:
#+begin_src bash
#!/bin/bash
org_file=$1

manual_tbls=( $(cat $org_file | grep -i "#+name" | grep "man_input_tbl" | sed 's/^.*: //g') )

for tbl in "${manual_tbls[@]}";
do
    /usr/local/bin/emacs --batch "${org_file}" -l "${HOME}/repos/card-rad-bio/src/org_tsv_export.el" --eval '(my-tbl-export "'"$tbl"'")'
done

#+end_src
#+begin_src bash
org_file=$1

manual_tbls=( $(cat card-rad-bio.org | grep -i "#+name" | grep "man_input_tbl" | sed 's/^.*: //g')
)
for tbl in "${manual_tbls[@]}";
do
    /usr/local/bin/emacs --batch "${HOME}/repos/card-rad-bio/card-rad-bio.org" -l "${HOME}/repos/card-rad-bio/src/org_tsv_export.el" --eval '(my-tbl-export "'"$tbl"'")'
done

#+end_src
#+begin_src emacs-lisp :tangle ./tools/lisp/org_tsv_export.el
(require 'org)

(defun my-tbl-export (name path)
"Search for table named `NAME` and export."
(interactive "s")
(show-all)
(let ((case-fold-search t))
  (if (search-forward-regexp (concat "#\\+NAME: +" name) nil t)
  (progn
    (next-line)
    (org-table-export (format "%s/%s.tsv" path name) "orgtbl-to-tsv")))))
#+end_src
- bulk org-table export
  #+begin_src emacs-lisp :tangle ./src/org_tbl_export.el
(require 'org)

(defun my-tbl-export (name)
  "Search for table named `NAME` and export."
  (interactive "s")
  (show-all)
  (let ((case-fold-search t))
    (if (search-forward-regexp (concat "#\\+NAME: +" name) nil t)
    (progn
      (next-line)
      (org-table-export (format "./data/inputs/%s.csv" name) "orgtbl-to-csv")))))
#+end_src
  #+begin_src bash
org_tables=()
org_tables=("experiments"
            "cohorts"
            "subjects"
            "specimens"
            "isolates"
            "seq_runs"
            "libraries"
            "tarbase_targeting_gja1"
            "lit_targeting_gja1"
            "mirdb_targeting_human_gja1"
            "mirdb_targeting_mouse_gja1"
            "notch_rentschler")

for table in "${org_tables[@]}";
do
    /usr/bin/emacs-snapshot --batch ./card-rad-bio.org -l ./src/org_tbl_export.el --eval '(my-tbl-export "'"$table"'")'
done
#+end_src
  - https://emacs.stackexchange.com/questions/16640/can-i-export-a-specific-table-in-an-org-file-to-csv-from-the-command-line
********** Command line tangle
:PROPERTIES:
:ID:       8abeec5e-05e3-4bb7-bec8-1938aaf0dc17
:END:
********** exclude specific headline from agenda index
:PROPERTIES:
:ID:       8f0c06b8-c72d-4ac1-b778-ae515f69ba5b
:END:
- use comment structure
  - https://emacs.stackexchange.com/questions/7709/org-mode-exclude-subtree-from-agenda-views
********** Export options
:PROPERTIES:
:ID:       acc5e3b2-07a8-408f-823a-0b84c383be82
:END:
- https://www.reddit.com/r/orgmode/comments/lzsygs/perfect_org_mode_exports_to_latex_easy_extensible/
  https://emacs.stackexchange.com/questions/tagged/org-export+org-mode+latex
- no orgmode footnotes export - #+OPTIONS: f:nil
- https://emacs.stackexchange.com/questions/21066/hide-author-date-and-title-when-exporting-to-pdf-with-org-latex-export-to-p

********** export org subtree as org file
:PROPERTIES:
:ID:       49c211a5-68c2-4a35-9b8e-13eb5d8fe8ec
:END:
- [[https://www.google.com/search?q=export+org+subtree+as+org+file][google: export org subtree as org file]]
  - https://emacs.stackexchange.com/questions/70452/org-mode-export-subtree-to-new-org-file-option-missing
********** Export to docx
:PROPERTIES:
:ID:       ff724408-b09e-4e6b-a738-5213b389b0d6
:END:
pandoc can take an org file, can do directly as pandoc or if subtree processing, via
/usr/local/bin/emacs --batch -l ~/.emacs.d/export.el /tmp/test.org --eval "(org-org-export-to-org)"

ox-pandoc works interactively but I can't get batch to run past the tmp org file creation like:
$ /usr/local/bin/emacs --batch -l ~/.emacs.d/export.el /tmp/test.org --eval "(org-pandoc-export-to-html5)"

********** [[https://www.google.com/search?q=org+mode+habits+colors][google:org mode habits colors]]
:PROPERTIES:
:ID:       d4765232-b479-498b-b942-54dc86fbd367
:END:

********** Header arguements
:PROPERTIES:
:ID:       72d6c025-d799-473a-b8bc-979f4bd1d0b4
:END:
. :tangle - if yes, C-c C-v t will make a .R file with extracted code
. :session - specify session
. :cache - carry code result across blocks
. :results
output :silent
. :exports code- usually good for R if writing to images files
See YAS code.r
  - [[https://org-babel.readthedocs.io/en/latest/header-args/][good code header info]]
  - [[http://orgmode.org/worg/org-contrib/babel/header-args.html][Header arguments and result types in Org Babel]]


examples:
,* Local variables
#+TODO: WAITING(w@) TODO(t) INPROCESS(p) | CLOSEOUT DONE(d!) DELEGATED(@) CANCELED(@)
#+property: header-args    :cache yes
#+property: header-args    :exports none
#+property: header-args    :eval never-export
#+property: header-args    :results silent
#+property: header-args    :tangle no
#+property: header-args:R    :session cardradbio_atac
#+startup: shrink
# Local Variables:
# truncate-lines: nil
# End:

********** Make text read-only
:PROPERTIES:
:ID:       92231be8-7a75-4d5b-bc40-bbe0f675ad95
:END:
- see [[id:6475bbfa-39b8-4223-b511-67e91c0d144a][Custom functions in basecamp private]]
- https://kitchingroup.cheme.cmu.edu/blog/2014/09/13/Make-some-org-sections-read-only/
********** Tangle header arguments
:PROPERTIES:
:ID:       a44e93e2-ff4f-43bd-95a8-97489c871cd1
:END:
- UNIX file permissions
  - e.g. :header-args:bash: :tangle-mode (identity #o555) :mkdirp yes :noweb yes :comments org
- https://orgmode.org/org.html#Extracting-Source-Code
- https://emacs.stackexchange.com/questions/61108/make-tangle-dont-add-a-newline-at-the-end-of-the-file
- https://emacs.stackexchange.com/questions/60047/org-mode-and-babel-export-setting-tangled-exported-files-as-readonly
- Add directories on tangle with mkdirp yes https://orgmode.org/manual/Extracting-Source-Code.html
********** Tangle source code from another org file using noweb
:PROPERTIES:
:ID:       3ef77d8f-3642-4ae5-b8f6-7fe2c017524c
:END:
- [[https://stackoverflow.com/a/61580716/6106936][use org-mode noweb to tangle blocks from multiple files]]
- https://emacs.stackexchange.com/questions/17091/including-code-block-in-a-another-file
********** Tangle to multiple locations
:PROPERTIES:
:ID:       38e75166-d05e-4ef5-96eb-ed38b2f0ab10
:END:
- https://www.google.com/search?q=tangle+block+to+multiple+locations
- https://emacs.stackexchange.com/questions/39032/tangle-the-same-src-block-to-different-files
********* Agenda
- https://whhone.com/posts/org-agenda-repeated-tasks/
- https://www.reddit.com/r/emacs/comments/1en7wap/find_your_tasks_instantly_when_you_need_to_5/
- https://whhone.com/posts/org-agenda-repeated-tasks/
********* Org-down
- https://github.com/karlicoss/orgparse
- https://github.com/ndwarshuis/org-sql?tab=readme-ov-file
- http://orgmode.org/worg/dev/org-syntax.html
********* Archiving
- archiving
  - archive via #+ARCHIVE: myarchive.org
  - [[https://www.reddit.com/r/orgmode/comments/9kunnv/archiving_practices/][Archiving practices]]
  - [[http://orgmode.org/manual/Refile-and-copy.html#Refile-and-copy][9.5 Refile and copy]]
********* Appearance
:PROPERTIES:
:ID:       33ff8cf2-a702-4401-ab9d-3555b56476ad
:END:
- https://github.com/lf-araujo/MxNotebook
- https://github.com/rougier/notebook-mode/blob/master/notebook.el
- https://www.reddit.com/r/orgmode/comments/5j9rmv/change_the_color_of_the_todo_keyword_you_use_to/
- Emphasis
  =code=
  ~verbatim~
  /italic/
  _underline_
  +strike-through+
- https://www.reddit.com/r/emacs/comments/13y4gg0/nano_modeline_10_now_with_buttons/
- [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Visual-Line-Mode.html][default visual line mode]]
- Themes
  - https://github.com/minad/org-modern
- Code blocks
  #+begin_src emacs-lisp
;(use-package org-modern-indent
;  :load-path "~/code/emacs/org-modern-indent/"
  ; or
  ; :straight (org-modern-indent :type git :host github :repo "jdtsmith/org-modern-indent"))
;  :config ; add late to hook
;  (add-hook 'org-mode-hook #'org-modern-indent-mode 90))
#+end_src
- Tag faces
  #+BEGIN_SRC emacs-lisp
  (setq org-tag-faces
        '(
          ("maintenance" . (:foreground "GoldenRod" :weight bold))
          ("noexport" . (:foreground "LimeGreen" :weight bold))
          )
  )
    #+END_SRC
********** Ricing
- https://lepisma.xyz/2017/10/28/ricing-org-mode/
********* Calendar sync
:PROPERTIES:
:ID:       91fd993a-aea5-4e05-b16a-ee3aa4e01eac
:END:
https://www.reddit.com/r/orgmode/comments/ux9f78/a_python_script_to_sync_from_google_calendar_to/
- to do ics import to org
  - https://github.com/asoroa/ical2org.py
  - https://orgmode.org/worg/org-tutorials/org-google-sync.html
  - https://github.com/rjhorniii/ical2org
  - https://orgmode.org/worg/org-translators.html
********* [[id:b67dea45-0f1c-44b7-a76d-efc6dd1f2a75][Completion frameworks]]
********* Checkboxes
:PROPERTIES:
:ID:       de8f6607-db62-449f-bf57-02221bff0da5
:END:
- 
- toggle whole tree https://lists.gnu.org/archive/html/emacs-orgmode/2013-09/msg00060.html
********* Code and IDE
https://www.reddit.com/r/emacs/comments/1i1exdt/hiding_inline_src_in_org/
- tangle w/ org as commnets https://eschulte.github.io/babel-dev/DONE-tangle-entire-org-mode-file-in-comments.html
- https://www.reddit.com/r/emacs/comments/1hbi751/passing_data_between_org_source_blocks_a/
- noweb references from another file , syntax is <#~/repos/basecamp/basecamp.org:ansible-include-vars-yaml()#>
  https://stackoverflow.com/questions/47058372/in-org-mode-how-to-call-code-block-to-evaluate-from-other-org-file/61580716#61580716
- [[https://www.miskatonic.org/2016/10/03/orgexportbabelevaluate/][eval never export causes all header arguements to be ignored]]
********** Running code blocks

>/dev/null 2>&1 to prevent popups from shell 
********** Shell and bash IDE
:PROPERTIES:
:ID:       e5d344fd-3edb-4fc9-af5b-8827e9abdc68
:END:
http://xahlee.info/emacs/emacs/emacs_unix.html
- https://www.reddit.com/r/emacs/comments/xyo2fo/orgmode_vterm_tmux/

- https://chatgpt.com/c/674ccb05-39f0-8005-9e17-f6f897ebf851
  #+begin_src emacs-lisp
(defun my-get-shell-process ()
  "Get the shell process associated with the current Org-babel session."
  (let ((session (org-babel-get-session)))
    (if session
        (let ((process-name (format "*%s*" session)))
          (or (get-process process-name)
              (progn
                (shell process-name)
                (get-process process-name))))
      ;; Fallback if no session is specified
      (process-shell-choose))))

(defun pipe-line-to-shell (&optional step)
  "Evaluates the current line to the shell."
  (interactive)
  (setq com (buffer-substring (point-at-bol) (point-at-eol)))
  (if (> (length com) 0)
      (progn
        (setq sprocess (my-get-shell-process))
        (shell-eval-line sprocess com)
        (when step (essh-next-code-line)))
    (message "No command in this line")))

#+end_src
#+begin_src bash :session TEST
cd ~/
ls
#+end_src
#+BEGIN_SRC sh :session my-shell-session
echo "Hello from my-shell-session"
ls
#+END_SRC

********** Working with source code
:PROPERTIES:
:ID:       7544c0ca-7fd5-499d-84e5-6217fd63be2a
:END:

- [[id:72d6c025-d799-473a-b8bc-979f4bd1d0b4][Header arguements]]
- examples
  - [[https://eschulte.github.io/org-scraps/][Schulte snippets examples]]
  - [[https://github.com/dfeich/org-babel-examples][examples with many languages]]
  - [[http://orgmode.org/worg/org-contrib/babel/intro.html#spreadsheet][seems like a hassle]]
  - [[http://orgmode.org/worg/org-contrib/babel/languages/ob-doc-sql.html][SQL Source Code Blocks in Org Mode]]
  - [[http://orgmode.org/worg/org-contrib/babel/uses.html][Source Code Blocks: Uses]]
- note that cache requires results to work
- [[http://orgmode.org/worg/org-contrib/babel/intro.html][Worg Babel Introduction]]
- https://www.reddit.com/r/orgmode/comments/omcc82/orggithooks_export_and_tangle_when_you_commit_new/

- https://github.com/erikriverson/org-mode-R-tutorial
https://orgmode.org/worg/org-tools/
- From http://www.howardism.org/Technical/Emacs/literate-programming-tutorial.html
- [[https://emacs.stackexchange.com/questions/17926/python-org-mode-source-block-output-is-always-none][for python outputs in babel]]
  - http://kitchingroup.cheme.cmu.edu/blog/2016/05/29/Expanding-orgmode-py-to-get-better-org-python-integration/

- http://emacs.stackexchange.com/questions/20949/formatting-output-of-inline-org-mode-source-blocks

- [[https://www.gnu.org/software/emacs/manual/html_node/org/Blocks.html][notation to show/hide code blocks on startup]]
- [[https://emacs.stackexchange.com/questions/7211/collapse-src-blocks-in-org-mode-by-default][stack: option to collapse code block with shortcut]]
- https://www.reddit.com/r/emacs/comments/huiqt6/executeandnextsourceblock_in_org_babel/
- https://emacs.stackexchange.com/questions/39032/tangle-the-same-src-block-to-different-files
- https://www.reddit.com/r/orgmode/comments/5u8z2e/obasync_asynchronous_srcblock_execution_for/

https://www.reddit.com/r/emacs/comments/huiqt6/executeandnextsourceblock_in_org_babel/
- https://emacs.stackexchange.com/questions/3785/how-to-specify-default-header-arguments-in-orgmode-code-blocks
- https://www.reddit.com/r/orgmode/comments/ptzcbj/modify_the_src_blocks_markers_to_much_more_eyes/
- 15.8 Extracting Source Code
  - https://emacs.stackexchange.com/questions/46479/how-to-set-a-tangled-parent-directory-for-each-subtree-in-org-mode
  - https://emacs.stackexchange.com/questions/20001/is-it-possible-to-read-user-input-from-stdin-while-tangling-a-source-block
  - https://emacs.stackexchange.com/questions/45164/does-org-have-any-inverse-tangle-operations-e-g-for-collaborating-with-non-or
https://emacs.stackexchange.com/questions/4- 15.8 Extracting Source Code
  - https://emacs.stackexchange.com/questions/46479/how-to-set-a-tangled-parent-directory-for-each-subtree-in-org-mode
  - https://emacs.stackexchange.com/questions/20001/is-it-possible-to-read-user-input-from-stdin-while-tangling-a-source-block
  - https://emacs.stackexchange.com/questions/45164/does-org-have-any-inverse-tangle-operations-e-g-for-collaborating-with-non-or1922/accessing-properties-in-org-babel-source-code-blocks
https://emacs.stackexchange.com/questions/54497/how-to-set-tab-behavior-in-org-mode-source-blocks-when-the-language-isnt-suppor
- Using org properties in source code block tangle- looks like complicated, no easy fix for now, maybe transclude?
- https://gitlab.com/mtekman/org-tanglesync.el
- 15.8 Extracting Source Code
  - https://emacs.stackexchange.com/questions/46479/how-to-set-a-tangled-parent-directory-for-each-subtree-in-org-mode
  - https://emacs.stackexchange.com/questions/20001/is-it-possible-to-read-user-input-from-stdin-while-tangling-a-source-block
  - https://emacs.stackexchange.com/questions/45164/does-org-have-any-inverse-tangle-operations-e-g-for-collaborating-with-non-or
*********** [[id:38e75166-d05e-4ef5-96eb-ed38b2f0ab10][Tangle to multiple locations]]
:PROPERTIES:
:ID:       89d833a8-68f1-4e4c-849d-5bd4ba302169
:END:
*********** [[id:3ef77d8f-3642-4ae5-b8f6-7fe2c017524c][Tangle source code from another org file using noweb]]
:PROPERTIES:
:ID:       71da6c35-921c-438d-a6d8-8f8aa7414d30
:END:
*********** [[id:72d6c025-d799-473a-b8bc-979f4bd1d0b4][Header arguements]]
:PROPERTIES:
:ID:       287bcbb7-46f5-46b8-9448-191f7fce0d52
:END:
********* Configuration examples
- [[http://pages.sachachua.com/.emacs.d/Sacha.html][Chua emacs config]] 
- https://github.com/sk8ingdom/.emacs.d/tree/master/org-mode-config
********* Clock report
- clock reports can include archives
  - https://emacs.stackexchange.com/questions/21388/including-archives-in-org-mode-clock-table
********* Contacts
:PROPERTIES:
:ID:       fa151382-b2b5-4ef0-b7b4-82f7540ee756
:END:
- [[https://julien.danjou.info/projects/emacs-packages#google-contacts][google contacts emacs package]]
- Solution for contacts
  - http://www.hardakers.net/code/bbdb-to-org-contacts/
********* Dev Ops
https://howardism.org/Technical/Emacs/literate-devops.html
********* Emacs jupyter integration
:PROPERTIES:
:ID:       ad2bbe49-7ba1-413f-87b6-3705e9d20ca0
:END:
- https://rgoswami.me/posts/jupyter-orgmode/
- https://emacs.stackexchange.com/questions/42389/integrating-jupyter-notebook-ipython-into-org-mode-notebook

https://www.reddit.com/r/orgmode/comments/sngxpe/orgbabels_pythonsession_vs_emacsjupyter/
********* Email
:PROPERTIES:
:ID:       2970f5cc-e915-4fca-a00d-908ad7545184
:END:
    - [[https://www.emacswiki.org/emacs/GnusGmail][Gnus Gmail]]
      - from GNU manual, [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Sending-Mail.html][sending mail]]
- start w/ tables collapsed
- Org-mode and email
  - https://www.reddit.com/r/emacs/comments/4rl0a9/email_in_emacs_i_want_to_but_wow_its_overwhelming/d52q08p/
  - https://notmuchmail.org/
  - [[http://kitchingroup.cheme.cmu.edu/blog/2016/10/29/Sending-html-emails-from-org-mode-with-org-mime/][kitchin send email from org]]
  - email with mu4e
    - http://www.djcbsoftware.nl/code/mu/mu4e/Creating-org_002dmode-links.html
    - http://irreal.org/blog/?p=4807
    - http://pragmaticemacs.com/emacs/master-your-inbox-with-mu4e-and-org-mode/
    - http://wikemacs.org/wiki/Mu4e
  - [[http://stackoverflow.com/questions/2553242/integrating-emacs-org-mode-with-email][stack: integrating org-mode with email]]
********* Export
:PROPERTIES:
:ID:       5645fcce-dbf8-4233-9366-0f490ad83f46
:END:
#+begin_src emacs-lisp


(defun my-tbl-export (name)
"Search for table named `NAME` and export."
(interactive "s")
(show-all)
(let ((case-fold-search t))
  (if (search-forward-regexp ("#\\+NAME: .*_name$") nil t)
  (progn
    (let (name (replace-match
    (next-line)
    (org-table-export (format "/tmp/%s.csv" name) "orgtbl-to-csv")))))

org_tables=()
org_tables=("experiments"
          "cohorts"
          "subjects"
          "specimens"
          "isolates"
          "seq_runs"
          "libraries"
          "tarbase_targeting_gja1"
          "lit_targeting_gja1"
          "mirdb_targeting_human_gja1"
          "mirdb_targeting_mouse_gja1"
          "notch_rentschler")

for table in "${org_tables[@]}";
do
  /usr/bin/emacs-snapshot --batch "/home/jeszyman/repos/card-rad-bio/card-rad-bio.org" -l "/home/jeszyman/repos/card-rad-bio/src/org_tbl_export.el" --eval '(my-tbl-export "'"$table"'")'
done
#+end_src
- https://stackoverflow.com/questions/11365739/how-to-cancel-the-hypersetup-in-0rg-mode-of-emacs/27219848#27219848
- export property specification without suffix allows multiple export types at the same base path
  - e.g. :export_file_name: /tmp/test
- https://joonro.github.io/Org-Coursepack/Lectures/05%20Exporting%20Slides%20and%20Handouts.html
- controlling exporter evals- [[https://www.miskatonic.org/2016/10/03/orgexportbabelevaluate/][in-depth no export functions]]
- Ideas
  - continuous make build https://blog.mads-hartmann.com/2016/07/03/exporting-org-from-make.html
  - https://www.reddit.com/r/orgmode/comments/omcc82/orggithooks_export_and_tangle_when_you_commit_new/
- By file type
  - https://emacs.stackexchange.com/questions/16640/can-i-export-a-specific-table-in-an-org-file-to-csv-from-the-command-line
  - https://github.com/jkitchin/ox-ipynb
  - [[https://github.com/tomalexander/orgmode-mediawiki][github: orgmode-mediawiki export]]
- - (ox-extras-activate '(ignore-headlines))
********** Export from shell with batch
:PROPERTIES:
:ID:       36f3ec77-0930-4b5c-90db-a882bd957bab
:END:
- batch exporter and make file https://stackoverflow.com/questions/22072773/batch-export-of-org-mode-files-from-the-command-line
********** Calendar ics export
:PROPERTIES:
:ID:       f8db9b0b-563f-4c6a-8cfd-32c1ddd98ae9
:END:
https://200ok.ch/posts/2022-02-13_integrating_org_mode_agenda_into_other_calendar_apps.html
********** With Export dispatcher
:PROPERTIES:
:ID:       1181f11e-dff9-486e-b2b9-44939ee69e59
:END:
- setup makefile export process
  #+begin_src sh
cd ~/repos/mpnst/presentations
emacs -q present.org --load ~/repos/emacs.d/test/cmd-line-init-test.el --batch -f org-latex-export-to-pdf --kill
emacs /tmp/present.org --batch -f org-latex-export-to-pdf
#+end_src
- Export subtree markdown
  - No toc
  - _ d/n make underscore
  - no tags
- Blocking code eval on export
  - controlling exporter evals- [[https://www.miskatonic.org/2016/10/03/orgexportbabelevaluate/][in-depth no export functions]]
- [[id:62B3BD29-14BB-4738-92F3-09C58A06FDAC][13 Exporting in documentation]]
- Building subheading export
  - [[https://www.reddit.com/r/orgmode/comments/fj7xcm/reproducible_research_interleaving_disparate/][#INCLUDE for building subsection export]]
    - https://orgmode.org/manual/Include-Files.html
*********** LaTeX
:PROPERTIES:
:ID:       5d29954a-45df-4541-8772-559b839698e2
:END:
- [[id:7B7758E4-095F-483E-9D2A-20D468CCEDD0][Basic Document in Org-mode and LaTeX]]
- Intermediate file cleanup
  - https://emacs.stackexchange.com/questions/3985/make-org-mode-export-to-beamer-keep-temporary-files-out-of-the-current-directory
  - https://emacs.stackexchange.com/questions/23982/cleanup-org-mode-export-intermediary-file
- Controlling export destination
  - https://emacs.stackexchange.com/questions/45751/org-export-to-different-directory
********** HTML export
:PROPERTIES:
:ID:       2be55e2c-bc37-49a1-b17a-7e9a679dc2c4
:END:
- https://www.reddit.com/r/emacs/comments/1hbjq6n/package_niceorghtml/

- Included elements
  - [[http://emacs.stackexchange.com/questions/27060/embed-image-as-base64-on-html-export-from-orgmode][html embedded image export]]
https://www.reddit.com/r/emacs/comments/y9udc6/looking_for_html_and_latex_templates_for_orgmode/

https://dvolk.github.io/oolook/
https://olmon.gitlab.io/org-themes/

********** Command line org table export
:PROPERTIES:
:ID:       4963dce3-c8a6-4199-b71b-a3d0e20ce920
:END:
#+begin_src bash :tangle ./tools/shell/make_manual_input_tables.sh
#!/usr/bin/env bash

# Script variables

org_file="${1}"
table_suffix="${2:-manualInputTable}"
out_dir="${3:-/tmp}"
org_tsv_exporter="${4:-~/repos/basecamp/tools/lisp/org_tsv_export.el}"
org_exc="${5:-/usr/local/bin/emacs}"

tables_array=()
mapfile -t tables_array < <(cat $org_file |
                                egrep $table_suffix |
                                sed 's/^.*\ //g')

for table in "${tables_array[@]}";
do
    $org_exc --batch $org_file -l $org_tsv_exporter --eval '(my-tbl-export "'"$table"'" "'"$out_dir"'")'
done
#+end_src
********** Org manual input table export to csv
:PROPERTIES:
:ID:       655164a2-53ee-40aa-8120-286b55f164b5
:END:

- Lisp export function
  #+name: org_input_tbl_lisp_export
  #+begin_src emacs-lisp
(require 'org)

(defun my-tbl-export (name)
"Search for table named `NAME` and export."
(interactive "s")
(show-all)
(let ((case-fold-search t))
(if (search-forward-regexp (concat "#\\+NAME: +" name) nil t)
(progn
  (next-line)
  (org-table-export (format "/tmp/%s.csv" name) "orgtbl-to-csv")))))

#+end_src
  #+name: org_input_tbl_lisp_export_wrapper
  #+begin_src org :noweb yes
<<org_input_tbl_lisp_export>>
#+end_src
- Bash to make the csvs
  #+name: org_input_tbl_to_csv
  #+begin_src bash
# Insert tables as bash array named org_tables

for table in "${org_tables[@]}";
do
/usr/bin/emacs-snapshot --batch "${org_file}" -l "${org_export_el}" --eval '(my-tbl-export "'"$table"'")'
done

mv /tmp/*_input.csv ${data_dir}/inputs/
#+end_src
  #+name: org_input_tbl_to_csv_wrapper
  #+begin_src org :noweb yes
<<org_input_tbl_to_csv>>
#+end_src

********* General table from properties
:PROPERTIES:
:ID:       bdeac944-b8c1-4ebc-b821-409aea68cf7c
:END:
- [[https://orgmode.org/worg/org-contrib/org-collector.html]]
********* Glossary
:PROPERTIES:
:ID:       49da7c9a-133b-4d60-bcd9-46bacbf41887
:END:
https://emacs.stackexchange.com/questions/18688/radio-targets-in-external-org-mode-file-for-glossary-application
********* Google keep integration
:PROPERTIES:
:ID:       6d878588-d032-49ce-8ae5-6e91b5afe6a1
:END:
https://github.com/makuto/KeepToOrg
********* GTD
:PROPERTIES:
:ID:       8edb8028-c98d-47d4-8c61-902db646dd91
:END:
- [[id:0fd12a50-644b-4c41-a693-04a693c0ed88][Agenda]]
- autorefresh agenda
- https://www.reddit.com/r/orgmode/comments/uihyfz/notion_org_mode/
- https://zolmok.org/posts/emacs-org-mode-developers/
- https://www.reddit.com/r/orgmode/comments/hw6txn/a_newbie_needing_help_with_orgmode_for_gtd/
********* Headers
- multi-line headers- place at break and M-<ENTER>
********* Hand-drawn work
:PROPERTIES:
:ID:       36f78014-06d5-4b54-979c-a0359a06c266
:END:
- https://www.reddit.com/r/emacs/comments/m3fknu/introducing_orgxournalpp_based_on_orgkrita/
********* Importing and exporting in structured ways
- https://orgmode.org/worg/org-contrib/org-collector.html
********* Images
- Resize inline image with an attribute line. Default unit is pixels. Possible attributes are width, height, and scale. 

  #+ATTR_ORG: :width 30
  [[file:/usr/share/backgrounds/hp-wallpaper.jpg]]

  #+ATTR_ORG: :width 300
  [[file:/usr/share/backgrounds/hp-wallpaper.jpg]]


********* Interfaces
- Asana - https://github.com/tmurph/todo-sync
- https://github.com/mengwong/org-asana
- Python https://github.com/karlicoss/orgparse
- Jupyter- see of getting juypter completion in code blocks - https://www.reddit.com/r/emacs/comments/i5xagf/ein_or_emacsjupyter_users_here/
********* Links
********** Links between org files
:PROPERTIES:
:ID:       7a0c211b-168a-4821-aca6-4e0fad22d0f2
:END:
https://emacs.stackexchange.com/questions/18688/radio-targets-in-external-org-mode-file-for-glossary-application
[[id:F8997164-7995-405B-A065-266603146579][Search and link]]
- note, radio targets will not work between files
  - https://www.reddit.com/r/orgmode/comments/2qz4fb/question_radio_target_accross_multiple_files/
  - https://lists.gnu.org/archive/html/emacs-orgmode/2007-03/msg00024.html

********** Link to specific place in external text file
:PROPERTIES:
:ID:       5a9ffdc1-65ee-4c16-80c9-7402fd61170c
:END:
https://orgmode.org/manual/External-Links.html
note phrase matching works outside of org
note brave doesn't do copy link to highlight
********* Literate programming
:PROPERTIES:
:ID:       f310dfff-4fc0-4223-900c-9a77a245ce9b
:END:
- https://www.reddit.com/r/emacs/comments/n2dw4n/replacing_jupyter_notebook_with_org_mode/

http://www.howardism.org/Technical/Emacs/literate-programming-tutorial.html
********* Mobile access
:PROPERTIES:
:ID:       533cfba1-d18c-4cad-ae4c-ec69a50a9fd0
:END:
- mobile access
  - https://github.com/borablanca/orgmodeweb
  - [[https://github.com/DanielDe/org-web][org-web]]
  - https://github.com/200ok-ch/organice/blob/master/README.org
- https://organice.200ok.ch/sample
********* Monitoring org file changes
:PROPERTIES:
:ID:       acc4619e-4c9e-446c-a56b-bbf9006e7df1
:END:
- https://karl-voit.at/2014/08/20/org-losses-determining-post-commit/
********* Notes, reference, literature research
:PROPERTIES:
:ID:       ed0ac856-4c5f-447b-a32c-a0bbe9616d89
:END:
- https://rgoswami.me/posts/org-note-workflow/
********* Properties
:PROPERTIES:
:ID:       6d27c2bc-1c39-4c22-aacb-e8f4541f6c30
:END:
- [[https://stackoverflow.com/questions/61247999/literate-programming-setup-of-docker-programming-environment-with-org-mode-in-em][access property in text]]

org-set-property
- access property values in text https://stackoverflow.com/questions/61247999/literate-programming-setup-of-docker-programming-environment-with-org-mode-in-em

********* References and citations
:PROPERTIES:
:ID:       5e603ec7-0333-4200-b83e-3b7091874272
:END:
- references [[http://karl-voit.at/2015/12/26/reference-management-with-orgmode/][see this]], [[http://kitchingroup.cheme.cmu.edu/blog/category/org-mode/][Kitchin]], [[https://www.youtube.com/watch?v=fgizHHd7nOo][Kitchin youtube]]
- https://blog.tecosaur.com/tmio/2021-07-31-citations.html#fn.3
********* Search, query, and view
https://github.com/alphapapa/org-ql?tab=readme-ov-file#org-ql-view
#+begin_src emacs-lisp
(require 'org-ql)

(org-ql-search
  (org-agenda-files)
  '(and (todo)
        (scheduled :to today)
        (deadline :to +5))
  :title "Custom Agenda View"
  :sort '(date priority)
)
#+end_src
#+begin_src emacs-lisp
(require 'org-ql)

(org-ql-search
  (org-agenda-files)
  '(and (todo)
        (scheduled :to today)
        (deadline :to +5))
  :title "Custom Agenda View"
  :sort '(date priority)
  :super-groups '((:name "Overdue Deadlines"
                         :deadline past)
                  (:name "Today’s Tasks"
                         :scheduled today)
                  (:name "Upcoming Deadlines"
                         :deadline future))
  :formatter (lambda ()
               (let ((heading (org-get-heading t t t t))
                     (todo (org-get-todo-state))
                     (deadline (org-entry-get nil "DEADLINE"))
                     (scheduled (org-entry-get nil "SCHEDULED")))
                 (format "- [%s] %s %s %s"
                         (or todo "")
                         heading
                         (if deadline (concat "⚠️ " deadline) "")
                         (if scheduled (concat "📅 " scheduled) "")))))

#+end_src
#+begin_src emacs-lisp
(require 'org-ql)

(org-ql-search
  (org-agenda-files)
  '(and (todo)
        (scheduled :to today)
        (deadline :to +5))
  :title "Custom Agenda View"
  :sort '(date priority)
  :super-groups '((:name "Overdue Deadlines"
                         :deadline past)
                  (:name "Today’s Tasks"
                         :scheduled today)
                  (:name "Upcoming Deadlines"
                         :deadline future)
                  (:auto-outline-path t)))

#+end_src

********** Searching
:PROPERTIES:
:ID:       05779876-092a-40e6-96d8-2611d35c422e
:END:
- [[https://orgmode.org/worg/org-contrib/org-collector.html][org-collector.el]]
- paste into the search minibuffer with M-y
- search options M-x occur, M-x lgrep, M-x ack

- [ ] [[http://orgmode.org/worg/org-contrib/babel/intro.html][worg advanced searching]]

https://orgmode.org/worg/org-tutorials/advanced-searching.html#:~:text=Org%2Dmode%20uses%20Emacs'%20multi,linked%20to%20its%20original%20location.
[[id:F8997164-7995-405B-A065-266603146579][Search for tags]]

********** Custom agenda
:PROPERTIES:
:ID:       1b7acedf-75c6-4231-8853-820c4bac38ba
:END:
https://emacs.stackexchange.com/questions/17323/org-mode-hide-tags-in-agenda
********** Columns view
- 7.5 Columns view
  -
    #+BEGIN_SRC emacs-lisp
(setq
 org-columns-default-format
 "%30ITEM(Task)
  %2PRIORITY
  %12DEADLINE
  %12SCHEDULED
  %12CLOCKSUM")
#+END_SRC
  - [[http://orgmode.org/worg/org-tutorials/org-column-view-tutorial.html][Emacs Org's Column View]]
  - Define
    - [[http://orgmode.org/manual/Column-attributes.html#Column-attributes][Column parameters]]
********** Agenda
:PROPERTIES:
:ID:       0fd12a50-644b-4c41-a693-04a693c0ed88
:END:
- agenda prefix format syntax
  - [[https://stackoverflow.com/questions/58820073/s-in-org-agenda-prefix-format-doesnt-display-dates-in-the-todo-view][expressions for TODO list prefixes]]
- https://emacs.stackexchange.com/questions/30056/in-org-mode-agenda-view-dont-show-scheduled-if-time-is-provided
- [[https://blog.aaronbieber.com/2016/09/24/an-agenda-for-life-with-org-mode.html][Bieber: An Agenda for Life with Org Mode]]
- https://www.reddit.com/r/emacs/comments/8wohqz/completely_custom_orgagenda_with_support_for_gtd/
- http://doc.norang.ca/org-mode.html#CustomAgendaViews
- [[https://lists.gnu.org/archive/html/emacs-orgmode/2014-01/msg01372.html][make certain tags not visible in agenda]]
C-u-c-s
[[https://www.google.com/search?q=orgmode+agenda+clear+scheduled][google:orgmode agenda clear scheduled]]
********* SQL in org
:PROPERTIES:
:ID:       8c50295a-e82b-4f1f-97f6-15d84f677155
:END:
https://bitspook.in/blog/using-org-mode-as-an-sql-playground/
********* System alerts
:PROPERTIES:
:ID:       675d938a-8d31-4c52-8e4f-ad474bbcceef
:END:
- Alerts, Tags and Flags
  - [[http://emacs.stackexchange.com/questions/3844/good-methods-for-setting-up-alarms-audio-visual-triggered-by-org-mode-events/5821#5821][alarms]]
  - [[https://github.com/jwiegley/alert][alert]]
  - [[http://emacs.stackexchange.com/questions/3844/good-methods-for-setting-up-alarms-audio-visual-triggered-by-org-mode-events][any tools for making UI-based or email-based DEADLINE notifications in org-mode?]]
  - [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Desktop-Notifications.html][emacs desktop notifications]]
  - [[https://github.com/groksteve/org-alert][org-alert]]

********* Tables
:PROPERTIES:
:ID:       68a0674a-55b3-4920-8414-c26fa76dc369
:END:
- https://emacs.stackexchange.com/questions/20129/how-can-i-filter-table-in-org-mode
- [[http://sachachua.com/blog/2015/01/getting-data-org-mode-tables/][chua: Getting data from Org Mode tables]]
- [[https://stackoverflow.com/questions/21953037/compute-the-duration-of-appointment-in-an-org-mode-table?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa][stack: Compute the duration of appointment in an org-mode table]]
- https://sachachua.com/blog/2015/01/getting-data-org-mode-tables/
- [[http://orgmode.org/worg/org-tutorials/org-spreadsheet-intro.html][worg: Org as a spreadsheet system: a short introduction]]
- [[http://howardism.org/Technical/Emacs/spreadsheet.html][Lots of Small Spreadsheets]]
- [[http://stackoverflow.com/questions/6688075/emacs-permanently-summing-a-column-in-org-mode-tables][stack: Permanently summing a column in an Org-mode table]]
- [[https://stackoverflow.com/questions/33291580/calculate-time-range-in-org-mode-table][stack: Calculate time range in org-mode table]]
- https://emacs.stackexchange.com/questions/11/how-to-add-a-prefix-to-every-line/13
- https://www.reddit.com/r/orgmode/comments/1b0mblv/use_org_tables_with_custom_elisp_functions/
********* /TODO/ states
********** Make a counter for TODO state changes
:PROPERTIES:
:ID:       54f78d43-dcec-4dbe-8f8e-4cb202f29dfa
:END:
- Make a counter for TODO state changes
  - https://orgmode.org/worg/org-tutorials/org-effectiveness.html
  - https://www.reddit.com/r/orgmode/comments/6exn7d/how_can_you_list_the_frequency_of_each_todo/
  - https://emacs.stackexchange.com/questions/29127/make-statistics-of-the-tag-use-in-org-mode
********* Tags
- org-todo-state-tags-triggers
- [[https://lists.gnu.org/archive/html/emacs-orgmode/2010-11/msg01130.html][Enumerate all tags in org-mode]]
- Bulk change tags
  - https://emacs.stackexchange.com/questions/19540/can-i-batchly-set-tags-in-org-mode
- Add or mod with C-c C-c at headline or C-c C-q inside
********* Variables
- https://stackoverflow.com/questions/20033467/setting-a-local-file-variable-in-emacs-org-mode
********* Scheduling and time
- For scheduling on inconsistent days- use org-clone-subtree-wth-time-shift
  - http://karl-voit.at/2017/01/15/org-clone-subtree-with-time-shift/
  - https://emacs.stackexchange.com/questions/16472/how-to-repeat-an-appointment-within-an-interval
  - [[http://stackoverflow.com/questions/28369833/emacs-org-mode-repeat-tasks-m-f-but-not-weekends][stack overflow: org scheduling repeats w/o weekends]]
- [[http://karl-voit.at/2017/01/15/org-clone-subtree-with-time-shift/][recurring events with org-mode]]
********** Timestamps
- sexp can be used for scheduled, just can't change TODO state - [[https://emacs.stackexchange.com/questions/16680/org-mode-schedule-1-event-for-multiple-days][stack: Org-mode schedule 1 event for multiple days?]]
- more complicated sexp scheduling:
  - calendar-date-style is m/d/y
  - http://orgmode.org/worg/org-faq.html#diary-sexp-in-org-files
********** Time tracking
:PROPERTIES:
:ID:       e1865d4b-2924-498f-9bff-f934e7f7e219
:END:
- https://github.com/rksm/clj-org-analyzer
  - https://www.reddit.com/r/orgmode/comments/czi4ug/org_analyzer_10_release/
********** Make agenda link
:PROPERTIES:
:ID:       dc08fcb9-d20b-4ef5-8ebf-49adcc968158
:END:
e.g. elisp:(org-agenda nil "Xt")
********* Working with external applications
:PROPERTIES:
:ID:       ab1009ff-4cde-4814-8b00-aa6a6b5bd135
:END:
https://orgmode.org/manual/Protocols.html
********* Working with external files
:PROPERTIES:
:ID:       c5e8eb37-5a8c-4968-b85e-9803b914ee6b
:END:
https://www.reddit.com/r/emacs/comments/sfcl70/notmuch_like_mode_to_search_through_pdfs/
********** Opening files
:PROPERTIES:
:ID:       8d1246cb-bf97-403a-993f-9b64b8a56999
:END:
https://emacs.stackexchange.com/questions/60708/how-to-open-a-folder-with-a-local-file-manager
********* Working with LaTeX
:PROPERTIES:
:ID:       c905303f-fde9-493c-93ea-5bdf9a33a378
:END:
- https://www.reddit.com/r/orgmode/comments/ialsz3/using_tikz_in_orgmode/
- See for adding properties latex headers- need +!!!https://lists.gnu.org/archive/html/emacs-orgmode/2016-03/msg00054.html
********* Working with raw text
:PROPERTIES:
:ID:       cd69d1e8-079e-40b9-b1db-a217c3cf055a
:END:
- edit protect lines
    - password protect lines
https://emacs.stackexchange.com/questions/48526/how-do-i-delete-all-blank-lines-in-a-buffer
********* Writing
:PROPERTIES:
:ID:       7f4e49a0-6139-43e5-9162-15e683f2ce4d
:END:
- [[id:c5b813eb-f76b-4377-a483-ee6c932b4aa7][General writing and typesetting module]]
******** [[id:B171BCE2-2FF8-45C6-8958-8799B349E1B0][Org-Mode in basecamp-private]]
:PROPERTIES:
:ID:       b8cd229a-fe04-4c7b-a86b-812584ba7ff3
:END:
******** Local YAS
:PROPERTIES:
:ID:       4ce165ef-2b82-4dcb-b3ba-09fc3d2f4898
:END:
********* [[id:5c2e54cf-797e-4ccb-b12e-2167d06ce7a4][code.sh]]
:PROPERTIES:
:ID:       ad0b8c23-a95b-429e-b787-a7b16afcd7b7
:END:
********* code.prop                                                     :yas:
:PROPERTIES:
:ID:       91b3ed13-d653-4424-a266-a3d1747841df
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/code.prop
# -*- mode: snippet -*-
# key: code.prop
# expand-env: ((yas-indent-line 'none))
# --
:PROPERTIES:
:header-args:${1:`(yas-choose-value '("R" "bash" " "))`}: :tangle $2
:END:
$0
#+end_src
********* head.notangle                                                 :yas:
:PROPERTIES:
:ID:       68334dac-c12c-4189-be1e-1ab2dff39c66
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/head.notangle
# -*- mode: snippet -*-
# key: head.notangle
# expand-env: ((yas-indent-line 'none))
# --
:PROPERTIES:
:header-args: :tangle no
:END:
#+end_src

********* 80                                                            :yas:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/80
# -*- mode: snippet -*-
# key: 80
# expand-env: ((yas-indent-line 'none))
# --
#########1#########2#########3#########4#########5#########6#########7#########8
#+end_src

********* google                                                        :yas:
:PROPERTIES:
:ID:       97bfd2ea-66f4-463a-af11-b90d8d11ee7a
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/google
# -*- mode: snippet -*-
# key: google
# expand-env: ((yas-indent-line 'none))
# --
[[https://www.google.com/search?q=${1:$(replace-regexp-in-string " " "+" yas-text)}][google:$1]]$0
#+end_src

- [[file:~/repos/basecamp/emacs/public_yasnippets/org-mode/google]]
- [[https://www.google.com/search?q=][google:]]

******** LaTeX batch export init file
:PROPERTIES:
:header-args:emacs-lisp: :tangle ./emacs/latex_init.el
:ID:       c5b152a1-7820-4348-82d5-2519d33e5cb2
:END:
[[file:emacs/latex_init.el]]

#+begin_src emacs-lisp
<#emacs_init_load_first#>

;; Package Management Setup

(require 'package)

(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)

;; Ensure 'use-package' is installed
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(require 'use-package)
(setq use-package-always-ensure t)

(defun add-to-load-path-if-exists (dir)
  "Add DIR and its subdirectories to the Emacs load-path if DIR exists."
  (if (file-directory-p dir)
      (let ((default-directory dir))
        (message "Adding %s and its subdirectories to load-path" dir)
        (normal-top-level-add-to-load-path '("."))
        (normal-top-level-add-subdirs-to-load-path))
    (message "Directory %s does not exist, skipping." dir)))

(add-to-load-path-if-exists "~/.emacs.d/lisp/")

(require 'org)
(require 'ox-latex)

<#need_in_batch#>
<#babel_default_header_args#>
<#orgmode_export_general#>
<#orgmode_export_latex#>
<#org_plain_links#>
<#org_latex_empty_class#>
#+end_src


#+begin_src emacs-lisp

; ---   Org-ref   --- ;
; ------------------- ;

(use-package org-ref
  :ensure t)

;(setq org-ref-default-bibliography (variable 'my-bibtex-bibliography))

; ---   Ox-extra   --- ;
; -------------------- ;

(require 'ox-extra)
(ox-extras-activate '(ignore-headlines))
(ox-extras-activate '(latex-header-blocks ignore-headlines))


;;;;;;;;;;;;;;;;;;;;;;;;;
;;;   Miscellaneous   ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;

(use-package helm-bibtex
  :ensure t)

(use-package ivy-bibtex
  :ensure t)

(use-package pdf-tools
  :ensure t)
#+end_src

******** Interfaces
:PROPERTIES:
:ID:       d888a09a-14c9-4441-85ba-bbd84a27a03c
:END:
https://www.reddit.com/r/orgmode/comments/x2e90r/there_really_needs_to_be_a_better_mobile_app_for/
- Asana
  - https://github.com/mengwong/org-asana
  - https://github.com/tmurph/todo-sync
********* [[id:a5717be7-afe9-4db2-8b4d-b797c7631466][orgzly]]
:PROPERTIES:
:ID:       6780c045-157e-4179-a3f5-048cb8c0adff
:END:
******** General reference
:PROPERTIES:
:ID:       a0cf47b6-2f7a-41cf-9d4f-9ce78ac648de
:END:
- https://orgmode.org/worg/dev/org-element-api.html
  - calls made e.g. https://www.reddit.com/r/orgmode/comments/147ofmi/what_element_type_is_the_colon/
- https://www.reddit.com/r/datascience/comments/13wkkdv/which_is_the_best_editor_for_python_in_your/jmcj7f1/
- https://www.reddit.com/r/emacs/comments/une2d8/orgmode_links_in_2022_implementation_packages/
- https://www.reddit.com/r/orgmode/comments/yqz7j0/what_features_of_the_more_mainstream_productivity/
- add created date property to new TODOs
  #+begin_src emacs-lisp
;; this adds property with created timestamp
;; see https://stackoverflow.com/questions/12262220/add-created-date-property-to-todos-in-org-mode
;;(require 'org-expiry)
;;(org-expiry-insinuate)
;;(setq org-expiry-inactive-timestamps t)
#+end_src
- https://github.com/eschulte/org-ehtml
- [[https://github.com/joonro/Org-Coursepack][Org-Coursepack]]
- [[https://emacs.stackexchange.com/questions/14025/how-to-get-todays-total-logged-time-programatically][stack: how to get total logged time programatically]]
- [[https://github.com/eschulte/org-ehtml][interactive editing through html?]]
- [[https://www.reddit.com/r/emacs/comments/a4zipp/fitnessorg_an_emacs_foodweightworkout_tracker/][org fitness]]
- https://www.youtube.com/watch?v=99uxJWqZGzA&ab_channel=JohnKitchin
- https://kitchingroup.cheme.cmu.edu/blog/
- https://www.reddit.com/r/emacs/comments/q6tduz/automated_org_mode_website_publishing_with_github/

- https://bzg.fr/en/some-emacs-org-mode-features-you-may-not-know/

- [[https://www.youtube.com/watch?v=sQS06Qjnkcc&list=PLVtKhBrRV_ZkPnBtt_TD1Cs9PJlU0IIdE&index=1][awesome Rainer Konig]]- watched to 13
- [[http://cestlaz.github.io/stories/emacs/][C'est la Z Emacs blog posts]]
- [[https://www.youtube.com/channel/UCQp2VLAOlvq142YN3JO3y8w][the Kitchin files]]
  - [[http://kitchingroup.cheme.cmu.edu/blog/2016/10/29/Sending-html-emails-from-org-mode-with-org-mime/][kitchin send email from org]]
  - [[http://kitchingroup.cheme.cmu.edu/blog/2014/08/08/What-we-are-using-org-mode-for/][kitchin: what we are using org mode for]]
  - [[https://www.youtube.com/watch?v=fgizHHd7nOo][Kitchin: Orgmode is awesome]]
- [[http://wiki.dreamrunner.org/public_html/Emacs/org-mode.html][dreamrunner org-mode and Worg]]
- [[http://thomasf.github.io/solarized-css/test/org-hacks.html][Org ad hoc code, quick hacks and workarounds]]
- [[https://mattduck.github.io/generic-css/demo/org-demo.html][An org-mode FAQ]]
- [[https://eschulte.github.io/org-scraps/][Schulte org scraps]]
- [X] cite:hansen2015 [[http://doc.norang.ca/org-mode.html][Org Mode - Organize Your Life In Plain Text!]]
- https://bzg.fr/en/some-emacs-org-mode-features-you-may-not-know.html/
- https://karl-voit.at/2019/09/25/using-orgmode/
- https://github.com/misohena/phscroll
********* Miscellaneous
:PROPERTIES:
:ID:       f376d45a-0708-488d-a7e1-8048161ac62f
:END:
- https://www.youtube.com/watch?app=desktop&v=oJTwQvgfgMM&ab_channel=GoogleTechTalks
- https://emacsconf.org/2021/talks/exec/

********* Worg Guides
         :PROPERTIES:
         :ID:       5AE57F83-36DB-41F7-B10A-DE5A6C15009F
         :END:


- [[http://orgmode.org/worg/org-tutorials/org-column-view-tutorial.html][Emacs Org's Column View]]
- [[http://orgmode.org/worg/org-tutorials/org-effectiveness.html#orgheadline3][effectiveness counting]]
  - http://orgmode.org/cgit.cgi/org-mode.git/tree/contrib/lisp/org-effectiveness.el
- [[http://orgmode.org/worg/dev/org-syntax.html][worg: Org Syntax (draft)]]
- [[http://orgmode.org/worg/org-tutorials/index.html][All Worg Guides]]
- [[http://orgmode.org/worg/org-tutorials/unison-sync.html][synchronizing with unison]]
- [[http://orgmode.org/worg/org-configs/org-customization-guide.html][Worg customization guide]]
- [[http://orgmode.org/worg/org-hacks.html][Hacks]]
- [[http://orgmode.org/worg/org-glossary.html][Org glossary]]
- [[http://orgmode.org/worg/org-contrib/babel/intro.html][worg advanced sarching]]
- http://orgmode.org/worg/org-contrib/org-checklist.html
********* Comprehensive workflow suites
********** scimax
:PROPERTIES:
:ID:       c1726ede-399f-4f0d-a457-cdb3ed41de1a
:END:
https://www.reddit.com/r/orgmode/comments/q82k5v/new_video_scimax_orgdb_searching_for_things_in/
******** Ideas                                                        :ideas:
:PROPERTIES:
:ID:       bb80bf1c-de54-4ab5-8bdc-eb701bca5d36
:END:
- checkbox intermediate state https://chat.openai.com/c/843ddbcd-a207-4e61-a613-2ff40e091430
- checkboxes toggle child checkboxes
  - https://chat.openai.com/c/20ac76ba-dd10-4c58-b670-420b2f38ef5d
- remove scheduled time for CLOSED
linting like https://github.com/loeffel-io/ls-lint
********* Prevent properti3es drawers in tangle with org comments
:PROPERTIES:
:ID:       aa896a50-db72-45a7-9f41-ed822ffb43e6
:END:
#+begin_src emacs-lisp
(defun remove-property-drawers-from-tangled-file ()
  "Remove property drawers from the tangled file."
  (let ((file (buffer-file-name)))
    (when file
      (with-temp-buffer
        (insert-file-contents file)
        ;; Adjust the regex to match the specific format of your property drawers
        (while (re-search-forward "^;; :PROPERTIES:\n\\(;; :.*\n\\)+;; :END:\n" nil t)
          (replace-match ""))
        (write-file file)))))

#+end_src
#+begin_src emacs-lisp
(add-hook 'org-babel-post-tangle-hook 'remove-property-drawers-from-tangled-file)

#+end_src
https://chat.openai.com/c/75a4844b-df8c-4690-8bf0-3078d341d584

******* org-notify
:PROPERTIES:
:ID:       5280a4b7-eb7f-4591-a41d-8032cd07bef8
:END:
https://elpa.gnu.org/packages/org-notify.html
******* Org-pandoc
:PROPERTIES:
:ID:       427a864b-e905-4fcd-8db3-18eb062da303
:END:
https://github.com/robtillotson/org-pandoc
******* org-pomodoro
          :PROPERTIES:
          :ID:       4eed8eb4-1343-4d7c-80d3-c7a213135b14
          :END:
- org-pomodoro
  - https://github.com/marcinkoziej/org-pomodoro/issues
- https://github.com/lolownia/org-pomodoro
- https://www.reddit.com/r/emacs/comments/5ayjjl/pomodoro_in_emacs/#ampf=undefined
(use-package org-pomodoro
  :ensure t
  :commands (org-pomodoro)
  :config
    (setq alert-user-configuration (quote ((((:category . "org-pomodoro")) libnotify nil)))))

******* Org-ql
:PROPERTIES:
:ID:       fefb0b7c-5645-488e-9885-1baa263bb3e6
:END:
https://github.com/alphapapa/org-ql
******* org-ref
:PROPERTIES:
:ID:       50da582a-7d75-4646-9a94-638244760b4a
:END:
#+begin_src emacs-lisp
  ;; (use-package org-ref-helm
  ;;   :ensure t)
  ;; (setq bibtex-completion-bibliography '("~/repos/org/bib.bib")
  ;;       bibtex-completion-library-path '("~/data/library/")
  ;;       bibtex-completion-additional-search-fields '(keywords)
  ;;       bibtex-completion-display-formats
  ;;       '((article       . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*} ${journal:40}")
  ;; 	(inbook        . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*} Chapter ${chapter:32}")
  ;; 	(incollection  . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*} ${booktitle:40}")
  ;; 	(inproceedings . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*} ${booktitle:40}")
  ;; 	(t             . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*}")))


#+end_src
- - Notes
  - Don't need org-ref-default-bib type variables. These are all defined in [[id:10fec4c5-cbb8-42e6-beb5-c4f5db25f8c9][ivy-bibtex]]
  - Uses org-ref-open-pdf-at-point uses org-open-file, which needs the absolute path to okular (/usr/bin/okular)
  - Do not use org-ref-url-utils or org-ref-pdf. Kitchin says not reliable.
- [[id:024FA16A-6A4A-4435-85ED-A0F405F4BAAF][org-ref in my config]]
- https://www.reddit.com/r/orgmode/comments/qbl0n1/new_video_orgref_version3_overview/
- https://www.reddit.com/r/orgmode/comments/qau3hs/how_to_use_style_files_in_orgref/
- [[https://github.com/jkitchin/org-ref][repo]]
- [[https://github.com/jkitchin/org-ref/blob/master/org-ref.org][documentation]]
- https://www.google.com/search?q=org-ref+ivy
- [[https://github.com/tmalsburg/helm-bibtex][helm-bibtex documentation]]
- Documentation
  - [[https://github.com/jkitchin/org-ref/blob/master/org-ref.org][documentation on github]]
    - "Note that you must include a bibliography link in your document if you are exporting your document to pdf; org-ref-default-bibliography is not used by the LaTeX exporter"
  - see manual with M-x org-ref-help
    - example citations off org manual at /Users/JeffBook/.emacs.d/elpa/org-ref-20170808.625
- General Reference
  - [[http://kitchingroup.cheme.cmu.edu/blog/2014/05/15/Using-org-ref-to-keep-your-bibtex-files-in-order/#sec-1][Using org-ref to keep your bibtex files in order]]

******* Org-ros
:PROPERTIES:
:ID:       d78feb55-685c-43f6-b962-84f103b90c2f
:END:
https://github.com/LionyxML/ros
https://www.reddit.com/r/emacs/comments/t9wv4w/ros_my_orgmode_screenshot_tool_is_now_orgros_and/
******* Org-super-agenda
:PROPERTIES:
:ID:       ca9e0a7d-173e-465c-8193-85a7e4f894d0
:END:
https://github.com/alphapapa/org-super-agenda/blob/master/examples.org#apply-faces-and-transformations
******* pdf tools
https://github.com/vedang/pdf-tools
******* Straight
:PROPERTIES:
:ID:       13e0a49a-f6b0-45cb-ba47-22afbfbb26bd
:END:
[[id:f15332ab-7af0-4c90-82a9-c8ec02d81ed0][My straight config]]
******* tramp
https://www.reddit.com/r/emacs/comments/oh36yi/company_and_companyshell_super_slow_over_tramp/
https://willschenk.com/articles/2020/tramp_tricks/
#+begin_src emacs-lisp
(setq tramp-default-method "ssh")
#+end_src
#+begin_src emacs-lisp
;; https://willschenk.com/articles/2020/tramp_tricks/
;; Open files in Docker containers like so: /docker:drunk_bardeen:/etc/passwd
;; (push
;;  (cons
;;   "docker"
;;   '((tramp-login-program "docker")
;;     (tramp-login-args (("exec" "-it") ("%h") ("/bin/bash")))
;;     (tramp-remote-shell "/bin/sh")
;;     (tramp-remote-shell-args ("-i") ("-c"))))
;;  tramp-methods)

(defadvice tramp-completion-handle-file-name-all-completions
  (around dotemacs-completion-docker activate)
  "(tramp-completion-handle-file-name-all-completions \"\" \"/docker:\" returns
    a list of active Docker container names, followed by colons."
  (if (equal (ad-get-arg 1) "/docker:")
      (let* ((dockernames-raw (shell-command-to-string "docker ps | awk '$NF != \"NAMES\" { print $NF \":\" }'"))
             (dockernames (cl-remove-if-not
                           #'(lambda (dockerline) (string-match ":$" dockerline))
                           (split-string dockernames-raw "\n"))))
        (setq ad-return-value dockernames))
    ad-do-it))
#+end_src

https://emacs.stackexchange.com/questions/29286/tramp-unable-to-open-some-files
#+begin_src emacs-lisp
(setq tramp-copy-size-limit 10000000)
#+end_src
https://www.reddit.com/r/emacs/comments/ukyeb6/how_to_disable_emacs_from_trying_to_connect_to_a/
  #+BEGIN_SRC emacs-lisp
;;(setq tramp-ssh-controlmaster-options
;;      "-o ControlMaster=auto -o ControlPath='tramp.%%C' -o ControlPersist=no")
(require 'tramp)
  #+END_SRC
- [[id:e8f9e632-9fe5-47cd-bf4f-4f67433c6e11][Tramp waiting from prompts on remote shell]]

- https://emacs.stackexchange.com/questions/24159/tramp-waiting-for-prompts-from-remote-shell
  #+begin_src bash
case "$TERM" in
        "dumb")
            export PS1="> "
            ;;
        xterm*|rxvt*|eterm*|screen*)
            tty -s && source "$BASH_IT"/bash_it.sh
            ;;
    esac
#+end_src

******* treesit-auto
:PROPERTIES:
:ID:       2b0febd7-d4a2-41a1-ade3-05bf2d454f5d
:END:
https://www.reddit.com/r/emacs/comments/17ydxhr/im_bumping_treesitauto_to_v10/
******* Use-package
:PROPERTIES:
:ID:       f88cfe42-07e2-4027-950c-a65527747eaf
:END:
https://jwiegley.github.io/use-package/keywords/
init is before pacakage load, config is after
******* usepackage                                                      :yas:
:PROPERTIES:
:ID:       f0fb54e2-e3e2-42a7-9f59-26dbbb91c8b4
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/bash-mode/usepackage
# -*- mode: snippet -*-
# key: usepackage
# expand-env: ((yas-indent-line 'none))
# --
(use-package ${1: <PACKAGE>}
  :bind-keymap
  ("" . cmd)
  :config
  :ensure t
  (setq )
  :hook
)
#+end_src
******** Processes
:PROPERTIES:
:ID:       219afb2c-8e9c-4067-aca8-f8490813b2a1
:END:
********* setqs [[https://www.google.com/search?q=use+package+where+to+put+setqs][google:use package where to put setqs]]
:PROPERTIES:
:ID:       734f18bc-bc3f-4e7c-92a9-cd29c677a013
:END:
********* Auto-install with :ensure https://github.com/jwiegley/use-package#package-installation
:PROPERTIES:
:ID:       965c8d2e-30f0-41c3-9530-21a3eee8b33e
:END:
******* Vertico
:PROPERTIES:
:ID:       f8631d03-afc1-49ab-b6d9-f09ef1c9ffa3
:END:
https://github.com/minad/vertico
******* vterm
:PROPERTIES:
:ID:       811aee06-605b-44de-b9df-dc25ec1f9057
:END:
- exit nano w/ Esc Esc X https://stackoverflow.com/questions/66771206/how-do-i-exit-nano-in-emacs-26-3
- https://www.reddit.com/r/emacs/comments/op4fcm/send_command_to_vterm_and_execute_it/
******* YASnippets
:PROPERTIES:
:ID:       6b9ba5dd-0ec7-4dbe-aee8-d9e56f0dc6b3
:END:
******** Configuration elisp
********* Allow conditional no-trigger expansion
https://github.com/joaotavora/yasnippet/issues/998

- add # condition: 'auto
********* [[id:485a4034-bae9-4d46-bed1-e21bb23e258c][(yas-auto-expand)]]
********* Prevent company mode suggestions in snippet expansion
#+begin_src emacs-lisp
(defun my/yas-expand-disable-company ()
  "Disable company-mode during yasnippet expansion."
  (when (bound-and-true-p company-mode)
    (company-abort)
    (company-mode -1)))

(defun my/yas-expand-enable-company ()
  "Re-enable company-mode after yasnippet expansion."
  (when (not (bound-and-true-p company-mode))
    (company-mode 1)))

(add-hook 'yas-before-expand-snippet-hook #'my/yas-expand-disable-company)
(add-hook 'yas-after-exit-snippet-hook #'my/yas-expand-enable-company)

#+end_src

******** Demo :demo
:PROPERTIES:
:ID:       25620585-371c-4bac-9889-783cebdbed79
:END:
******** [[id:EA056C38-9DE6-47EE-A75B-0FCBAE62372B][private YASnippets setup]]
******** Processes
:PROPERTIES:
:ID:       61811c73-973c-40af-bc2c-00576eaa82b6
:END:
- [[https://www.google.com/search?q=yasnippets+no+new+line+after+insert][google:yasnippets no new line after insert]]
- "there's no direct function in org-mode to get the level of the heading below the current position. It would involve complex navigation and manipulation which might not be feasible within a snippet."


********* demo.org.header                                               :yas:
:PROPERTIES:
:ID:       47f0746c-880e-40c3-a20f-ca5e227663c9
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/demo.org.header
# -*- mode: snippet -*-
# key: demo.org.header
# expand-env: ((yas-indent-line 'none))
# --
`(make-string (org-current-level) ?*)` THE HEADER
:PROPERTIES:
:END:
`(make-string (+ 1 (org-current-level)) ?*)` BELOW THE HEADER

#+end_src
demo.org.header

********* Nested snippet
:PROPERTIES:
:ID:       e4ebfc7e-7f21-403a-a709-21dec3292435
:END:
- Nested snippet
  #+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/bash-mode/nested
# -*- mode: snippet -*-
# key: nested
# expand-env: ((yas-indent-line 'none))
# --
$1

$2

$3
#+end_src
******** Development
:PROPERTIES:
:ID:       0c1e81c5-ee9e-4b78-8714-e439e04b0a7d
:END:
- how to expand by code block code type rather than orgmode?
********* nested-nested                                                 :yas:
:PROPERTIES:
:ID:       614ab2f1-e0f0-4c53-bf77-8b6acedb4012
:END:
#+begin_src bash
# -*- mode: snippet -*-
# key: nested-nested
# expand-env: ((yas-indent-line 'none))
# --
$1 inside nested snippet
$2 inside nested snippet
$3 inside nested snippet
#+end_src

d

nestednested

nested-f

d

d



 inside nested snippet
 inside nested snippet

<divdf>d</div>
<div id="the is">sdfds</div>
<divkk>sdf</div>
<div id="fhd">sdf</div>
<div id="some_id">sdfkj</div>
- Write snippet
  - shift to plaintext in babel blocks
  - https://www.google.com/search?q=yasnippet+escape+variable
  - [[https://emacs.stackexchange.com/questions/48201/how-to-tell-yasnippet-to-ignore-placeholder][How to tell YASnippet to ignore placeholder?]]
  - can insert org blocks with ,#+end_src
**********                                                             :flat:
:PROPERTIES:
:ID:       020bed86-d635-43e4-8783-48d0f9f641fa
:END:

- Create sub-choices in the snippet
  - https://github.com/joaotavora/yasnippet/issues/830


#+begin_src bash
# -*- mode: snippet -*-
# key: test
# expand-env: ((yas-indent-line 'none))
# --
#+BEGIN_${1:$$(let ((type (yas-choose-value '("SRC" "EXAMPLE" "QUOTE" "VERSE" "CENTER" "LaTeX" "HTML" "ASCII"))))
               (if type (concat type (if (equal type "SRC")
                                         (concat " " (yas-choose-value '("C" "C++" "emacs-lisp" "lisp" "latex" "python" "sh" "sqlite" "css" "haskell" "js" "plantuml" "ruby" "sql" "clojure")))))))}
$0
#+END_${1:$(car (split-string yas-text))}
#+end_src

#+BEGIN_SRC C++

#+END_SRC
- https://www.google.com/search?q=yasnippet+extra+line
- http://emacs.stackexchange.com/questions/10960/one-yasnippet-snippet-for-multiple-modes
- http://emacsblog.org/2009/07/27/yasnippet-updated-supports-nested-placeholders-and-more/
- https://github.com/joaotavora/yasnippet/issues/830
- [[http://emacs.stackexchange.com/questions/3968/yasnippet-prompt-when-using-commands-interactively][use YAS prompt for commands]]
- https://emacs.stackexchange.com/questions/35372/how-do-you-make-an-optional-field-and-comma-in-a-yasnippet
- https://www.google.com/search?q=yasnippet+org-mode+header+level
- https://www.google.com/search?q=yasnippet+elisp+literal
- https://www.google.com/search?q=yas+include+org+header+at+level
- https://joaotavora.github.io/yasnippet/snippet-development.html#org844d0b2 https://www.google.com/search?q=yasnippet+include+option
- to invoke a shell: - https://superuser.com/questions/841178/directly-open-remote-shell-with-tramp-in-emacs
******** Reference
:PROPERTIES:
:ID:       5ce55261-edae-4205-9a93-35328f678925
:END:

#+begin_src bash :results replace
ls ~/repos/basecamp/emacs/public_yasnippets/
#+end_src

#+RESULTS[7f536336be5999a992e0a60d9fc455710f6187a5]:
| bibtex-mode           |
| Elisp-mode            |
| emacs-lisp-mode       |
| eshell-mode           |
| ess-mode              |
| bash-mode             |
| latex-mode            |
| lisp-interaction-mode |
| markdown-mode         |
| my_abbreviations.el   |
| org-mode              |
| python-mode           |
| shell-mode            |
| sh-mode               |
| Snakemake-mode        |
| text-mode             |
| y                     |
| yas-mode              |


- [[http://howardism.org/Technical/Emacs/templates-tutorial.html][Having Emacs Type for You]]
- Examples of snippet syntax and use case
    - [[http://karl-voit.at/2016/12/18/org-depend/][Advanced Usage of Dependencies Between Tasks Using Org-mode]]
    - Yankpad- an alternative or compliment
- - https://emacs.stackexchange.com/questions/27158/insert-current-date-with-yasnippet
********* [[http://joaotavora.github.io/yasnippet][documentation]]
         :PROPERTIES:
         :ID:       75bb5fc8-29fd-4a7d-85bd-5ed761fa3216
         :END:
  - Directory (yas-snippet-dirs) is ("~/.basecamp/emacs/public_yasnippets" "/path/to/some/collection/" "/path/to/yasnippet/yasmate/snippets" "/path/to/yasnippet/snippets")
  - [[https://github.com/joaotavora/yasnippet][github]]


******** Local YAS
:PROPERTIES:
:ID:       8ae59292-b129-4eca-995b-4d275fced3f7
:END:
********* yas.org
:PROPERTIES:
:ID:       9c719656-c057-46b2-8ee8-0017fc79d4db
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/yas.org
# -*- mode: snippet -*-
# key: yas.org
# expand-env: ((yas-indent-line 'none))
# --
`(make-string (org-current-level) ?*)` $2 :yas:
,#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/${1:org-mode}/$2
# -*- mode: snippet -*-
# key: ${2: <KEY>}
# expand-env: ((yas-indent-line 'none))
# --
$0
,#+end_src
#+end_src

********* yas.var                                                       :yas:
:PROPERTIES:
:ID:       103c24b2-e7c5-4809-bb15-3453eb852e9a
:END:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/bash-mode/yas.var
# -*- mode: snippet -*-
# key: yas.var
# expand-env: ((yas-indent-line 'none))
# condition: 'auto
# --
\${${1:<NUMBER>}: <${2:VALUE$$(upcase yas-text)}>} $0
#+end_src



********* 80
:PROPERTIES:
:ID:       185cf551-09ec-4f26-93d6-4c8444fe492b
:END:
#+begin_src bash :comment no
# -*- mode: snippet -*-
# name: 80
# key: 80
# --
;;;;;;;;;1;;;;;;;;;2;;;;;;;;;3;;;;;;;;;4;;;;;;;;;5;;;;;;;;;6;;;;;;;;;7;;;;;;;;;8
#+end_src
********* code.bash
:PROPERTIES:
:ID:       78960912-ee7a-4e71-b8d5-c5ec9649ecac
:END:
#+name: code.bash
#+begin_src bash :comment no
# -*- mode: snippet -*-
# key: code.bash
# expand-env: ((yas-indent-line 'none))
# --
#+begin_src bash :comment no
$0
,#+end_src
#+end_src

******* pandoc-mode
:PROPERTIES:
:ID:       da49373a-63e4-445d-842b-8d4ea02d16f0
:END:
- [[https://github.com/joostkremers/pandoc-mode][github]]
- http://joostkremers.github.io/pandoc-mode/
***** My public configuration
****** Initialization
:PROPERTIES:
:ID:       2750378f-d025-4f26-87c4-99ea711942c9
:header-args: :tangle ./emacs/init.el
:END:
[[file:emacs/init.el]]
- [ ] https://chatgpt.com/c/6791429d-3338-8005-93d1-928d30b9a343
#+begin_src emacs-lisp
;;-*- mode: elisp -*-

;; Package Management Setup

(require 'package)

(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)

;; Ensure 'use-package' is installed
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))

(require 'use-package)
(setq use-package-always-ensure t)

(defun load-directory (dir)
  "Add DIR and its subdirectories to the load-path and load all .el files."
  (when (file-directory-p dir)
    (let ((default-directory dir))
      (message "Adding %s and its subdirectories to load-path" dir)
      (normal-top-level-add-to-load-path '("."))
      (normal-top-level-add-subdirs-to-load-path))
    (dolist (file (directory-files dir t "\\.el\\'"))
      (load file nil 'nomessage))))


;; Function to safely load a file if it exists
(defun safe-load-file-if-exists (filepath)
  "Safely load the Emacs Lisp file at FILEPATH if it exists."
  (when (file-exists-p filepath)
    (condition-case err
        (load (file-name-sans-extension filepath))
      (error (message "Error loading %s: %s" filepath err)))))

;; Load early configuration
(safe-load-file-if-exists "~/.emacs.d/load-first.el")

;; Define the path to your configuration directory
(defvar my-config-dir "~/.emacs.d/config/"
  "Directory containing personal Emacs configuration files.")

;; Load all .el files in the config directory
(when (file-directory-p my-config-dir)
  (dolist (file (directory-files my-config-dir t "\\.el$"))
    (condition-case err
        (load (file-name-sans-extension file))
      (error (message "Error loading %s: %s" file err)))))

;; Load late configuration
(safe-load-file-if-exists "~/.emacs.d/load-last.el")


#+end_src
****** Load First
:PROPERTIES:
:ID:       20747a04-0e77-4d0c-a6c8-17137d53f39b
:header-args: :tangle ./emacs/load-first.el
:END:

#+begin_src emacs-lisp
(add-to-list 'exec-path "/usr/local/bin")
#+end_src

#+begin_src emacs-lisp
;(cua-selection-mode t)
;(setq mark-even-if-inactive t) ;; Keep mark active even when buffer is inactive
;(transient-mark-mode 1) ;; Enable transient-mark-mode for visual selection
(scroll-bar-mode 'right) ;; Place scroll bar on the right side

(setq org-export-backends '(ascii html latex odt icalendar md org)) ; This variable needs to be set before org.el is loaded.
#+end_src

****** Public configuration
:PROPERTIES:
:ID:       28ed3017-eedb-4a6c-94e5-f477353170c8
:header-args: :tangle ./emacs/public_config.el
:END:
[[file:emacs/public_config.el]]

- for config rewrite https://chatgpt.com/c/e16840b5-355a-42e3-bd97-70693daa17c0
******* anki-editor
- NEEDS ANKI 23 and / or reverted anki connect
#+begin_src emacs-lisp
(use-package anki-editor
  :vc (:fetcher github :repo anki-editor/anki-editor))

#+end_src
******* citar
#+begin_src emacs-lisp
;; Citar configuration for org-cite integration
(use-package citar
  :after org
  :init
  (require 'oc)  ;; Ensure org-cite is loaded before configuring citar

  :custom
  ;; Bibliography paths
  (org-cite-global-bibliography '("~/repos/org/bib.bib"))
  (citar-bibliography org-cite-global-bibliography)
  (citar-library-paths '("~/data/library/"))   ;; PDF storage

  ;; Set citation processors
  (org-cite-insert-processor 'citar)
  (org-cite-follow-processor 'citar)
  (org-cite-activate-processor 'citar)

  ;; Display formatting
  (citar-indicators (list citar-indicator-files citar-indicator-notes-icons))
  (citar-display-transform-functions '((t . citar-clean-string)))

  (citar-templates
   '((main . "${author editor:30%sn}     ${date year issued:4}     ${title:48}")
     (suffix . "          ${=key= id:15}    ${=type=:12}    ${tags keywords:*}")
     (preview . "${author editor:%etal} (${year issued date}) ${title}, ${journal journaltitle publisher container-title collection-title}.\n")
     (note . "Notes on ${author editor:%etal}, ${title}")))

  ;; Visual configuration
  (citar-symbols `((file . ?)))  ;; Icon for PDFs only

  ;; Open PDFs and BibTeX entries
  (citar-open-functions
   '((file . (lambda (fpath) (call-process (if (eq system-type 'darwin) "open" "xdg-open") nil 0 nil fpath)))
     (bibtex . citar-open-bibtex-entry)))  ;; Add BibTeX option

  :config
  (define-key org-mode-map (kbd "C-c ]") 'org-cite-insert))

;; Configure file opening for citar
(setq citar-file-open-functions
      '(("html" . citar-file-open-external)
        ("pdf" . citar-file-open-external)  ;; Use system default for PDFs
        (t . find-file)))                   ;; Default to Emacs for others


#+end_src
#+begin_src emacs-lisp
(use-package citar-embark
  :after citar embark
  :no-require
  :config (citar-embark-mode))

(setq citar-at-point-function 'embark-act)
#+end_src
https://blog.tecosaur.com/tmio/2021-07-31-citations.html
https://kristofferbalintona.me/posts/202206141852/
******* AUCTeX
- [[id:eb4a0bb3-2e8a-4bf5-9186-11f972b2e06d][AUCTeX reference header]]
#+begin_src emacs-lisp
(use-package tex
  :ensure auctex
  :config
  (setenv "PATH" (concat "/usr/local/texlive/2021/bin/x86_64-linux:"
			 (getenv "PATH")))
  (add-to-list 'exec-path "/usr/local/texlive/2021/bin/x86_64-linux")
  (setq
   TeX-auto-save t
   TeX-parse-self t
   TeX-save-query nil
   TeX-view-program-selection
   '(((output-dvi has-no-display-manager) . "dvi2tty")
     ((output-dvi style-pstricks) . "dvips and gv")
     (output-pdf . "Okular")
     (output-dvi . "xdvi")
     (output-pdf . "Evince")
     (output-html . "xdg-open"))))

#+end_src
******* Base Emacs
******** Dired
:PROPERTIES:
:ID:       b3bd2685-ea78-4097-ae4c-e4a5e7a422ea
:END:
#+begin_src emacs-lisp
(setq dired-kill-when-opening-new-dired-buffer t)

#+end_src
******** Needed in --batch
Code that needs to be tangled both here and into custom inits for batch export
#+name need_in_batch
#+begin_src emacs-lisp
(setq large-file-warning-threshold most-positive-fixnum) ; disable large file warning
(setq-default cache-long-scans nil)
#+end_src
******** Add to load paths
#+begin_src emacs-lisp
(setq exec-path (append exec-path '("/opt/miniconda3/bin")))
(setenv "PATH" (concat (getenv "PATH") ":/opt/miniconda3/bin"))
#+end_src
******** Appearance
#+begin_src emacs-lisp
; ---   General   --- ;
; ------------------- ;

(setq frame-background-mode 'dark)
(setq inhibit-splash-screen t)

; ---   Windows   --- ;
; ------------------- ;

;; Remove bars:
(menu-bar-mode -1)
(tool-bar-mode -1)
(scroll-bar-mode -1)
;
; Fringe- Set finge color to background
;https://emacs.stackexchange.com/a/31944/11502
(set-face-attribute 'fringe nil :background nil)

; ---   Lines   --- ;
; ----------------- ;

;;
;; Enable visual line mode
(global-visual-line-mode 1)
;;
;; Line highlighting in all buffers
(global-hl-line-mode t)
;;
;; Line numbers
(global-display-line-numbers-mode 0)
;;;
;;; Disable line numbers by buffer
(dolist (mode '(org-mode-hook
                term-mode-hook
                shell-mode-hook
                eshell-mode-hook))
  (add-hook mode (lambda () (display-line-numbers-mode 0))))
;;
(setq-default indicate-empty-lines t)

; Do not wrap lines, but extend them off screen
(setq default-truncate-lines nil)

;; no line numbers
(setq global-linum-mode nil)

; ---   Syntax Highlighting   --- ;
; ------------------------------- ;

;; When enabled, any matching parenthesis is highlighted
(show-paren-mode)
;;
;; Enables highlighting of the region whenever the mark is active
(transient-mark-mode 1)

; ---   Code   --- ;
; ---------------- ;

;; Delimiters
(use-package rainbow-delimiters
  :hook (prog-mode . rainbow-delimiters-mode))

; ---   Faces   --- ;
; ----------------- ;

;; ?Fix broken face inheritance
(let ((faces (face-list)))
  (dolist (face faces)
    (let ((inh (face-attribute face :inherit)))
      (when (not (memq inh faces))
        (set-face-attribute face nil :inherit nil)))))

; ---   Text   --- ;
; ---------------- ;

;https://emacs.stackexchange.com/questions/72483/how-to-define-consult-faces-generically-for-minibuffer-highlighting-that-fits-wi
(global-hl-line-mode 1)
(set-face-attribute 'highlight nil :background "#294F6E")

#+end_src
******** Tramp
#+begin_src emacs-lisp
(setq tramp-default-method "ssh")


(defadvice tramp-completion-handle-file-name-all-completions
  (around dotemacs-completion-docker activate)
  "(tramp-completion-handle-file-name-all-completions \"\" \"/docker:\" returns
    a list of active Docker container names, followed by colons."
  (if (equal (ad-get-arg 1) "/docker:")
      (let* ((dockernames-raw (shell-command-to-string "docker ps | awk '$NF != \"NAMES\" { print $NF \":\" }'"))
             (dockernames (cl-remove-if-not
                           #'(lambda (dockerline) (string-match ":$" dockerline))
                           (split-string dockernames-raw "\n"))))
        (setq ad-return-value dockernames))
    ad-do-it))

; https://emacs.stackexchange.com/questions/29286/tramp-unable-to-open-some-files
(setq tramp-copy-size-limit 10000000)
#+end_src
******** Key bindings
#+begin_src emacs-lisp
; ASCII Arrows

; ---   ASCII Arrows   --- ;
; ------------------------ ;

(global-set-key (kbd "C-<right>") (lambda () (interactive) (insert "\u2192")))
(global-set-key (kbd "C-<up>") (lambda () (interactive) (insert "\u2191")))

; ---   Disable Keys   --- ;
; ------------------------ ;

;; Minimize
(global-unset-key (kbd "C-z"))
;; Print
(global-unset-key (kbd "s-p"))

(global-set-key (kbd "C-S-n")
		(lambda () (interactive) (next-line 10)))
(global-set-key (kbd "C-S-p")
		(lambda () (interactive) (next-line -10)))

#+end_src
******** On-save hooks and backup
- Visited files are backed up to =~/.emacs.d/backup-save-list=.

#+begin_src emacs-lisp
;; Shorthand for save all buffers
;;  https://stackoverflow.com/questions/15254414/how-to-silently-save-all-buffers-in-emacs
(defun save-all ()
  (interactive)
  (save-some-buffers t))


; ---   Saving And Backup   --- ;
; ----------------------------- ;

; Delete trailing whitespace on save
(add-hook 'before-save-hook
          'delete-trailing-whitespace)

;; Backup process upon save

(setq vc-make-backup-files t) ; Allow old versions to be saved
(setq delete-old-versions 20) ; Save 20
(setq backup-directory-alist '(("." . "~/.emacs.d/backup-save-list"))) ; Save them here

(setq auto-save-visited-mode t) ; Visited files will be auto-saved


(setq auto-save-file-name-transforms
      `((".*" ,(concat user-emacs-directory "auto-save-list/") t)))


#+end_src

******** Miscellaneous
#+begin_src emacs-lisp

; ---   Miscellaneous   --- ;
; ------------------------- ;

;https://emacs.stackexchange.com/questions/62419/what-is-causing-emacs-remote-shell-to-be-slow-on-completion
(defun my-shell-mode-setup-function ()
  (when (and (fboundp 'company-mode)
             (file-remote-p default-directory))
    (company-mode -1)))

(add-hook 'shell-mode-hook 'my-shell-mode-setup-function)

;; delete the region when typing, just like as we expect nowadays.
(delete-selection-mode t)

(setq explicit-shell-file-name "/bin/bash")

;; Don't count two spaces after a period as the end of a sentence.
(setq sentence-end-double-space nil)

;; don't check package signatures
;;  https://emacs.stackexchange.com/questions/233/how-to-proceed-on-package-el-signature-check-failure
(setq package-check-signature nil)

;; Avoid nesting exceeds max-lisp-eval-depth error
;;  https://stackoverflow.com/questions/11807128/emacs-nesting-exceeds-max-lisp-eval-depth
(setq max-lisp-eval-depth 1200)

;; allow remembering risky variables
;;  https://emacs.stackexchange.com/questions/10983/remember-permission-to-execute-risky-local-variables
(defun risky-local-variable-p (sym &optional _ignored) nil)

; Disable "buffer is read only" warning
;;https://emacs.stackexchange.com/questions/19742/is-there-a-way-to-disable-the-buffer-is-read-only-warning
(defun my-command-error-function (data context caller)
  "Ignore the buffer-read-only signal; pass the rest to the default handler."
  (when (not (eq (car data) 'buffer-read-only))
    (command-error-default-function data context caller)))

(setq command-error-function #'my-command-error-function)

; Follow symlinks in dired
;;https://emacs.stackexchange.com/questions/41286/follow-symlinked-directories-in-dired
(setq find-file-visit-truename t)

(setq browse-url-browser-function 'browse-url-generic
      browse-url-generic-program "/usr/bin/brave-browser")

; y or n instead of yes or no
(setopt use-short-answers t)

;; don't check package signatures
;;  https://emacs.stackexchange.com/questions/233/how-to-proceed-on-package-el-signature-check-failure
(setq package-check-signature nil)

;; Avoid nesting exceeds max-lisp-eval-depth error
;;  https://stackoverflow.com/questions/11807128/emacs-nesting-exceeds-max-lisp-eval-depth
(setq max-lisp-eval-depth 1200)
;;

;; normal c-c in ansi-term
;; https://emacs.stackexchange.com/questions/32491/normal-c-c-in-ansi-term
(eval-after-load "term"
  '(progn (term-set-escape-char ?\C-c)
          (define-key term-raw-map (kbd "C-c") nil)))

(setq comint-scroll-to-bottom-on-output t)

;; allow kill hidden part of line
;;  https://stackoverflow.com/questions/3281581/how-to-word-wrap-in-emacs
(setq-default word-wrap t)

;; auto-refresh if source changes
;;  https://stackoverflow.com/questions/1480572/how-to-have-emacs-auto-refresh-all-buffers-when-files-have-changed-on-disk
(global-auto-revert-mode 1)

; ---   Frames And Windows   --- ;
; ------------------------------ ;

(setq truncate-partial-width-windows nil)
(setq split-window-preferred-function (quote split-window-sensibly))

; ---   Other   --- ;
; ----------------- ;

(setq require-final-newline nil)
#+end_src
#+begin_src emacs-lisp
(defun toggle-theme ()
  "Toggle between dark and light themes."
  (interactive)
  (if (custom-theme-enabled-p 'manoj-dark)
      (progn
        (disable-theme 'manoj-dark)
        (load-theme 'leuven t))
    (progn
      (disable-theme 'leuven)
      (load-theme 'manoj-dark t))))
#+end_src
#+begin_src emacs-lisp
(setq create-lockfiles nil)

#+end_src

********* (open-texdoc-in-background)
:PROPERTIES:
:ID:       60651916-4ffa-458f-9084-1ade3d163ea0
:END:
#+begin_src emacs-lisp
(defun open-texdoc-in-background (docname)
  "Open a TEXDOC for DOCNAME in the background and close the terminal."
  (interactive "sEnter the name of the document: ")
  (let ((term-buffer (ansi-term "/bin/bash")))
    (with-current-buffer term-buffer
      (term-send-raw-string (concat "texdoc " docname "\n"))
      (term-send-raw-string "sleep 2; exit\n")
      (set-process-sentinel
       (get-buffer-process term-buffer)
       (lambda (process signal)
         (when (or (string= signal "finished\n")
                   (string= signal "exited\n"))
           (kill-buffer (process-buffer process)))))
      (bury-buffer))))

#+end_src
https://chatgpt.com/c/7fac1ba4-f0a9-4d8f-8393-736e64e0ced1
example: [[elisp:(open-texdoc-in-background "acronym")][acronym]]
******** Make header regions read-only via tag
#+begin_src emacs-lisp
(defun org-mark-readonly ()
  (interactive)
  (let ((buf-mod (buffer-modified-p)))
    (org-map-entries
     (lambda ()
       (org-mark-subtree)
       (add-text-properties (region-beginning) (region-end) '(read-only t)))
     "read_only")
    (unless buf-mod
      (set-buffer-modified-p nil))))


(defun org-remove-readonly ()
  (interactive)
  (let ((buf-mod (buffer-modified-p)))
    (org-map-entries
     (lambda ()
       (let* ((inhibit-read-only t))
     (org-mark-subtree)
     (remove-text-properties (region-beginning) (region-end) '(read-only t))))
     "read_only")
    (unless buf-mod
      (set-buffer-modified-p nil))))

(add-hook 'org-mode-hook 'org-mark-readonly)
#+end_src

******** Protect text regions as read-only
https://chatgpt.com/c/fe962d8c-eb34-42fe-b362-032a61d8b728
#+begin_src emacs-lisp

(defun make-region-read-only (start end)
  (interactive "*r")
  (let ((inhibit-read-only t))
    (put-text-property start end 'read-only t)
    (put-text-property start end 'font-lock-face '(:background "#8B0000"))))

(defun make-region-read-write (start end)
  (interactive "*r")
  (let ((inhibit-read-only t))
    (put-text-property start end 'read-only nil)
    (remove-text-properties start end '(font-lock-face nil))))


#+end_src
******** Shell
#+begin_src emacs-lisp
(defun dont-ask-to-kill-shell-buffer ()
  "Don't ask for confirmation when killing *shell* buffer."
  (let ((buffer-name (buffer-name)))
    (when (string-equal buffer-name "*shell*")
      (setq kill-buffer-query-functions
            (delq 'process-kill-buffer-query-function
                  kill-buffer-query-functions)))))

(add-hook 'shell-mode-hook 'dont-ask-to-kill-shell-buffer)

#+end_src

******** cua-mode
#+begin_src emacs-lisp
(cua-mode t)
#+end_src
******** remove-blank-lines
#+begin_src emacs-lisp
(defun remove-blank-lines ()
  "Remove all blank lines (including lines with only whitespace) in the current buffer."
  (interactive)
  (save-excursion
    (goto-char (point-min))
    (flush-lines "^[[:space:]]*$")))



#+end_src

******** Org-mode
:PROPERTIES:
:ID:       45e28300-51fd-4ce7-aed1-15dca15022d4
:END:
********* Startup
#+begin_src emacs-lisp
(setq org-startup-folded t)
(setq org-startup-with-inline-images t)
#+end_src

********* Add persistant highlights
#+begin_src emacs-lisp
(defun org-add-persistent-highlights ()
  "Add persistent highlighting for custom markers in Org mode."
  (font-lock-add-keywords
   nil
   '(("<{\\(.*?\\)}>" ; Match the pattern <{...}>
      (1 '(:background "firebrick") t)))))

(add-hook 'org-mode-hook #'org-add-persistent-highlights)

(defun org-hide-markers-without-space ()
  "Hide markers like << and >> in Org-mode without leaving empty space."
  (font-lock-add-keywords
   nil
   '(("<{\\|}>"
      (0 (progn (put-text-property (match-beginning 0) (match-end 0)
                                   'display "")
                'org-hide))))))

(add-hook 'org-mode-hook #'org-hide-markers-without-space)

#+end_src
********** org.hl                                                       :yas:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/org.hl
# -*- mode: snippet -*-
# key: org.hl
# expand-env: ((yas-indent-line 'none))
# condition: 'auto
# --
<\{$1\}>
#+end_src
<{test}>
********* Tags
#+BEGIN_SRC emacs-lisp
        (setq
         org-tags-exclude-from-inheritance
         (list
	  "alert"
          "biotool"
          "biopipe"
          "bimonthly"
          "block"
          "blk"
          "flat"
          "hierarchy"
          "include"
          "semimonthly"
          "purpose"
          "midGoal"
          "nearGoal"
          "focus"
          "project"
          "daily"
          "dinner"
	  "kit"
          "maint"
          "manuscript"
          "mod"
          "monthly"
	  "poster"
          "present"
          "prog"
          "report"
          "routine"
          "soln"
          "weekly"
          "write"
          "sci_rep"
          "stretch"
          "study"))
      #+END_SRC
********* .TODO
#+begin_src emacs-lisp
(setq org-todo-keyword-faces
      (quote (("TODO" :background "red")
              ("NEXT" :foreground "black" :background "yellow"))))

;; keep TODO state timestamps in drawer
(setq org-log-into-drawer t)

;; add done timestamp
(setq org-log-done 'time)

;; enforce dependencies
(setq org-enforce-todo-dependencies t)

;; priority levels
(setq org-highest-priority 65)
(setq org-lowest-priority 89)
(setq org-default-priority 89)

#+end_src
********* Opening things
********** open in same frame
#+begin_src emacs-lisp
(setq org-link-frame-setup
      '((vm . vm-visit-folder)
        (vm-imap . vm-visit-imap-folder)
        (gnus . org-gnus-no-new-news)
        (file . find-file)  ;; Open files in the same frame
        (wl . wl)))

#+end_src
********** Set org-file-apps to use xdg-open for all file extensions

#+begin_src emacs-lisp
;(setq process-connection-type nil) this breaks *shell*
(setq org-file-apps
      '((directory . "/usr/bin/gnome-terminal --working-directory=\"%s\"")
        ("\\.pdf\\'" . "setsid -w xdg-open \"%s\"")
        ("\\.svg\\'" . "setsid -w xdg-open \"%s\"")
	("\\.yaml\\'" . "emacsclient -c \"%s\"")
	("\\.list\\'" . emacsclient)
        (auto-mode . emacsclient)
        (t . "setsid -w xdg-open \"%s\"")
	))

#+end_src

********* Lists
#+BEGIN_SRC emacs-lisp
(setq org-cycle-include-plain-lists 'integrate)
(setq org-list-indent-offset 0)
#+END_SRC

********* Tables
#+begin_src emacs-lisp
;; https://emacs.stackexchange.com/questions/22210/auto-update-org-tables-before-each-export
(add-hook 'before-save-hook 'org-table-recalculate-buffer-tables)
#+end_src
#+BEGIN_SRC emacs-lisp
(setq org-startup-align-all-tables t)
(setq org-startup-shrink-all-tables t)
#+END_SRC

********* org-collector
#+begin_src emacs-lisp
(require 'org-collector)
#+end_src

********* Searching customizations

********** Create links to org tags
http://endlessparentheses.com/use-org-mode-links-for-absolutely-anything.html
Example: tag:rdata
#+BEGIN_SRC emacs-lisp
(defun endless/follow-tag-link (tag)
  "Display a list of TODO headlines with tag TAG.
With prefix argument, also display headlines without a TODO keyword."
  (org-tags-view current-prefix-arg tag))

(org-add-link-type
 "tag" 'endless/follow-tag-link)

  #+END_SRC
********* org-image-actual-width
:PROPERTIES:
:ID:       a760d06b-c2b2-4b54-a0b6-375a13a20538
:END:
When set as a list as below, 300 pixels will be the default, but another width can be specified through ATTR, e.g. #+ATTR_ORG: :width 800px
#+begin_src emacs-lisp
(setq org-image-actual-width '(300))
#+end_src
********* shk-fix-inline-images, reload inline images after code eval
#+begin_src emacs-lisp
(defun shk-fix-inline-images ()
  (when org-inline-image-overlays
    (org-redisplay-inline-images)))

(with-eval-after-load 'org
  (add-hook 'org-babel-after-execute-hook 'shk-fix-inline-images))

#+end_src

********* Source code and tangle
********** Declare Babel languages
:PROPERTIES:
:ID:       32dc9158-01f6-4303-b4eb-3901fe98f8d8
:END:


#+begin_src emacs-lisp
(org-babel-do-load-languages
 'org-babel-load-languages
 '(
   (ditaa . t)
   (dot .t)
   (emacs-lisp . t)
   (latex . t)
   (mermaid .t)
   (org . t)
   (python . t)
   (R . t)
   (shell . t)
   (sql .t)
   (sqlite . t)
   ))
#+end_src

https://claude.ai/chat/1017ebf5-da7e-40fb-b05d-2247281826b9

#+begin_src emacs-lisp
(require 'ob-shell)
(require 'yaml-mode)

(defun org-babel-execute:yaml (body params)
  "Execute a block of YAML code with org-babel."
  (let ((temp-file (org-babel-temp-file "yaml-")))
    (with-temp-file temp-file
      (insert body))
    (org-babel-eval (format "cat %s" temp-file) "")))

(add-to-list 'org-src-lang-modes '("yaml" . yaml))
#+end_src
********** Default header arguments
#+name: babel_default_header_args
#+begin_src emacs-lisp
 
(setq org-babel-default-header-args '((:results . "silent")
                                      (:eval . "no-export")
                                      (:exports . "none")
                                      (:tangle . "no")
                                      (:cache . "yes")
                                      (:noweb . "yes")
				      (:mkdirp . "yes")
                                      ;(:post-tangle . org-remove-properties-drawer)
				      ))

#+end_src

********** General
#+begin_src emacs-lisp

(setq
 ;; Blocks inserted directly without additional formatting
 org-babel-inline-result-wrap "%s"
 ;;
 ;; Preserve language-specific indentation, aligns left
 org-src-preserve-indentation t
 ;;
 ;; Tab works like in major mode of lanuauge
 org-src-tab-acts-natively t
 ;;
 org-babel-python-command "python3"
 ;;
 org-confirm-babel-evaluate nil
 ;;
 org-src-fontify-natively t
 ;;
 ;; Open src windows in current frames
 org-src-window-setup 'current-window)
#+end_src
#+begin_src emacs-lisp
;; disable confrmation for elisp execution of org src blocks
(setq safe-local-variable-values '((org-confirm-elisp-link-function . nil)))

(setq org-hide-block-startup t)

#+end_src

********** Toggle collapse blocks
#+begin_src emacs-lisp
(defvar org-blocks-hidden nil)

(defun org-toggle-blocks ()
  (interactive)
  (if org-blocks-hidden
      (org-show-block-all)
    (org-hide-block-all))
  (setq-local org-blocks-hidden (not org-blocks-hidden)))

#+end_src

********** org-babel-min-lines-for-block-output
When executing a source block in org mode with the output set to verbatim, it will sometimes wrap the results in an #begin_example block, and sometimes it uses : symbols at the beginning of the line. Prevented with org-babel-src-preserve-indentation

https://emacs.stackexchange.com/questions/39390/force-org-to-use-instead-of-begin-example-for-source-block-output

#+begin_src emacs-lisp
(setq org-babel-min-lines-for-block-output 1000)
#+end_src
********** Change noweb wrapper symbols
#+begin_src emacs-lisp
(setq org-babel-noweb-wrap-start "<#"
      org-babel-noweb-wrap-end "#>")
#+end_src
********** Post-tangle hooks
*********** stripe properties drawer on tangle
#+begin_src emacs-lisp
;; (defun my/org-babel-tangle-no-drawers ()
;;   "Tangle with `:comments org`, removing property drawers entirely."
;;   (interactive)
;;   (let ((tangled-files (org-babel-tangle)))  ;; returns a list of file names
;;     (dolist (f tangled-files)
;;       (with-temp-buffer
;;         (insert-file-contents f)
;;         (goto-char (point-min))
;;         ;; Remove everything from #.*:PROPERTIES: up to #.*:END:
;;         (while (re-search-forward "^#.*:PROPERTIES:" nil t)
;;           (let ((start (match-beginning 0)))
;;             (when (re-search-forward "^#.*:END:" nil t)
;;               (delete-region start (match-end 0)))))
;;         ;; Remove extra blank lines
;;         (goto-char (point-min))
;;         (while (re-search-forward "\n\\{2,\\}" nil t)
;;           (replace-match "\n"))
;;         (write-region (point-min) (point-max) f)))))

#+end_src
https://chatgpt.com/c/675d9823-49a8-8005-840d-464e88f9c994?model=o1

********* Header views and cycling
#+begin_src emacs-lisp
(setq org-show-hierarchy-above t)

(setq org-fold-show-context-detail
      '((default . tree)))
#+end_src
#+begin_src emacs-lisp

(setq
 org-show-context-detail
 '((agenda . ancestors)
   (bookmark-jump . ancestors)
   (isearch . ancestors)
   (default . ancestors))
)

#+end_src
#+begin_src emacs-lisp
(defun org-hide-all-src-blocks ()
  "Hide all source blocks in the current Org buffer."
  (interactive)
  (org-babel-map-src-blocks nil
    (save-excursion
      (goto-char (org-babel-where-is-src-block-head))
      (org-hide-block-toggle t))))

(defun my-collapse-all-drawers (&optional arg)
  "Hide all drawers and optionally cycle global visibility.
When called with a prefix ARG (C-u), also cycle global visibility, hide all src blocks, and jump to the beginning of the buffer."
  (interactive "P")
  (org-hide-drawer-all)
  (when arg
    (org-cycle-global)
    (org-hide-all-src-blocks)
    (goto-char (point-min))) ;; Use `goto-char` instead of `beginning-of-buffer` for clarity
  ;; Ensure tags are aligned after all visibility changes
  (org-align-tags t)) ;; Pass `t` to align all tags in the buffer


(global-set-key (kbd "C-c d") 'my-collapse-all-drawers)
;; You might want to remove the hook if you don't want this function to run every time you open an org file
(add-hook 'org-mode-hook 'my-collapse-all-drawers)

#+end_src

********* No blank lines!
#+begin_src emacs-lisp
(setq org-cycle-separator-lines 0)
(setq yas-indent-line 'fixed)

#+end_src

https://chatgpt.com/c/670d4cb7-5c08-8005-bec8-a2800e4bd0c4
#+begin_src emacs-lisp
;; (defun my-remove-trailing-newlines-in-tangled-blocks ()
;;   "Remove trailing newlines from tangled block bodies."
;;   (save-excursion
;;     (goto-char (point-max))
;;     (when (looking-back "\n" nil)
;;       (delete-char -1))))

;; (add-hook 'org-babel-post-tangle-hook #'my-remove-trailing-newlines-in-tangled-blocks)

#+end_src

********* General
#+begin_src emacs-lisp
(setq org-confirm-shell-link-function nil)

#+end_src
#+begin_src emacs-lisp

(with-eval-after-load 'org
        (add-to-list 'org-modules 'org-habit))

;; Clock times in hours and minutes
;;  (see https://stackoverflow.com/questions/22720526/set-clock-table-duration-format-for-emacs-org-mode
(setq org-time-clocksum-format
      '(:hours "%d" :require-hours t :minutes ":%02d" :require-minutes t))
(setq org-duration-format (quote h:mm))

(setq org-catch-invisible-edits 'error)
(global-set-key (kbd "C-c l") 'org-store-link)
(setq org-refile-targets '((org-agenda-files :maxlevel . 14)))
(setq org-indirect-buffer-display 'current-window)

(setq org-id-link-to-org-use-id 'use-existing)
;;https://stackoverflow.com/questions/28351465/emacs-orgmode-do-not-insert-line-between-headers


(setq org-enforce-todo-checkbox-dependencies t)
;; don't adapt indentation to header level
(setq org-adapt-indentation nil)

(setq org-support-shift-select t)
(setq org-src-window-setup 'current-window)
(setq org-export-async-debug nil)
#+end_src

#+begin_src emacs-lisp
;; ensures that any file with the .org extension will automatically open in org-mode
(add-to-list 'auto-mode-alist '("\\.org\\'" . org-mode))

#+end_src
#+begin_src emacs-lisp
;; Make heading regex include tags
(setq org-heading-regexp "^[[:space:]]*\\(\\*+\\)\\(?: +\\(.*?\\)\\)?[ \t]*\\(:[[:alnum:]_@#%:]+:\\)?[ \t]*$")

#+end_src



********** org-blank-before-new-entry
https://stackoverflow.com/questions/28351465/emacs-orgmode-do-not-insert-line-between-headers
#+begin_src emacs-lisp
(setq org-blank-before-new-entry '((heading . nil) (plain-list-item . nil)))

#+end_src

********** my-org-tree-to-indirect-buffer
#+begin_src emacs-lisp
(defun my-org-tree-to-indirect-buffer (&optional arg)
  "Open current org tree in indirect buffer, using one prefix argument.
When called with two prefix arguments, ARG, run the original function without prefix argument."
  (interactive "P")
  (if (equal arg '(16)) ; 'C-u C-u' produces (16)
      (org-tree-to-indirect-buffer nil) ; original behavior
    (org-tree-to-indirect-buffer t)) ; one prefix argument
  (my-collapse-all-drawers))
(define-key org-mode-map (kbd "C-c C-x b") 'my-org-tree-to-indirect-buffer)

#+end_src

********* Export
:PROPERTIES:
:ID:       8fb9a592-2ad4-44c4-a8d6-ce33f691c010
:END:
#+name: orgmode_export_general
#+begin_src emacs-lisp
;; the below as nil fucks of export of inline code
(setq org-export-babel-evaluate t)
;; https://emacs.stackexchange.com/questions/23982/cleanup-org-mode-export-intermediary-file/24000#24000


(setq-default cache-long-scans nil)
(setq org-export-with-broken-links t)
(setq org-export-allow-bind-keywords t)

(setq org-export-with-sub-superscripts nil
      org-export-headline-levels 2
      org-export-with-toc nil
      org-export-with-section-numbers nil
      org-export-with-tags nil
      org-export-with-todo-keywords nil)
#+end_src
  #+begin_src emacs-lisp
(setq org-odt-preferred-output-format "docx")
#+end_src
********** LaTeX
#+name: orgmode_export_latex
#+begin_src emacs-lisp
(require 'ox-latex)

(customize-set-value 'org-latex-with-hyperref nil)

(setq org-latex-logfiles-extensions (quote ("auto" "lof" "lot" "tex~" "aux" "idx" "log" "out" "toc" "nav" "snm" "vrb" "dvi" "fdb_latexmk" "blg" "brf" "fls" "entoc" "ps" "spl" "bbl")))

(add-to-list 'org-latex-packages-alist '("" "listings"))
(add-to-list 'org-latex-packages-alist '("" "color"))
(setq org-latex-caption-above nil)

(setq org-latex-remove-logfiles t)

(add-to-list 'org-latex-packages-alist '("" "listingsutf8"))
(setq org-latex-src-block-backend 'minted)

(setq org-latex-pdf-process
      '("pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"
    "bibtex %b"
    "pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"
    "pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"))


#+end_src
*********** Empty latex class
#+name: org_latex_empty_class
#+begin_src emacs-lisp
(with-eval-after-load 'ox-latex
  (add-to-list 'org-latex-classes '("empty"
                                    "\\documentclass{article}
\\newcommand\\foo{bar}
[NO-DEFAULT-PACKAGES]
[NO-PACKAGES]"
                                    ("\\section{%s}" . "\\section*{%s}")
                                    ("\\subsection{%s}" . "\\subsection*{%s}")
                                    ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
                                    ("\\paragraph{%s}" . "\\paragraph*{%s}")
                                    ("\\subparagraph{%s}" . "\\subparagraph*{%s}"))))

#+end_src
********* Open URLs in new window with C-u C-c C-o
#+begin_src emacs-lisp
(defun my-org-open-in-brave-new-window (link)
  "Open the LINK in Brave browser in a new window."
  (start-process "brave-new-window" nil "brave-browser" "--new-window" link))

(defun org-link-frame-open-id-or-file-in-new-frame (link)
  "Open the FILE or ID LINK in a new frame."
  (let ((location (cond
                   ((string= (org-element-property :type (org-element-context)) "id")
                    (org-id-find link 'marker))
                   (t
                    link)))) ; Assume it's a file link directly usable by `find-file-noselect`
    (if (markerp location)
        (with-current-buffer (marker-buffer location)
          (select-frame (make-frame))
          (goto-char location))
      (select-frame (make-frame))
      (find-file link))))

(defun my-org-open-at-point (&optional arg)
  "Open the link at point.
Use a new window in Brave if ARG is non-nil and the link is a URL.
Open in a new Emacs frame if ARG is non-nil for ID or file links."
  (interactive "P")
  (let* ((context (org-element-context))
         (link-type (org-element-property :type context))
         (raw-link (org-element-property :raw-link context))
         (link-path (org-element-property :path context)))
    (if (and arg link-type)
        (cond
         ((or (string= link-type "http") (string= link-type "https"))
          (my-org-open-in-brave-new-window raw-link))
         ((or (string= link-type "id") (string= link-type "file"))
          (org-link-frame-open-id-or-file-in-new-frame link-path))
         (t
          (message "No special handling for this link type: %s" link-type)))
      (org-open-at-point))))

;; Rebind C-c C-o in org mode to our custom function
(define-key org-mode-map (kbd "C-c C-o") 'my-org-open-at-point)

#+end_src

********* Checkboxes

#+begin_src emacs-lisp
;; (defun org-toggle-checkbox-and-children ()
;;   "Toggle checkbox and all children checkboxes."
;;   (interactive)
;;   (save-excursion
;;     (let* ((parent-indent (current-indentation))
;;            (end (save-excursion
;;                   (org-end-of-subtree)
;;                   (point)))
;;            (current-checkbox (save-excursion
;;                              (beginning-of-line)
;;                              (when (re-search-forward "\\[[ X-]\\]" (line-end-position) t)
;;                                (match-string 0))))
;;            (new-state (if (equal current-checkbox "[ ]") "[X]" "[ ]")))
;;       ;; Toggle the parent checkbox
;;       (beginning-of-line)
;;       (when (re-search-forward "\\[[ X-]\\]" (line-end-position) t)
;;         (replace-match new-state))
;;       ;; Toggle all children checkboxes
;;       (forward-line)
;;       (while (< (point) end)
;;         (let ((line-start (point)))
;;           (when (and (> (current-indentation) parent-indent)
;;                     (re-search-forward "\\[[ X-]\\]" (line-end-position) t))
;;             (replace-match new-state)
;;             (goto-char line-start)))
;;         (forward-line 1)))))

;; ;; Bind it to a convenient key
;; (define-key org-mode-map (kbd "C-c x") 'org-toggle-checkbox-and-children)
#+end_src

- [ ] a set
  - [ ] of
    - [ ] nested
    - [ ] check
      - [ ] boxes
********* Documentation
#+begin_src emacs-lisp
(with-eval-after-load 'ox-latex
  (add-to-list 'org-latex-classes
               '("documentation"
                 "\\documentclass{article}
                 \\usepackage{/home/jeszyman/repos/latex/sty/documentation}
                 [NO-DEFAULT-PACKAGES]
                 [NO-PACKAGES]
                 [EXTRA]
                 \\tableofcontents"
                 ("\\section{%s}" . "\\section{%s}")
                 ("\\subsection{%s}" . "\\subsection{%s}")
                 ("\\subsubsection{%s}" . "\\subsubsection{%s}")
                 ("\\paragraph{%s}" . "\\paragraph{%s}")
                 ("\\subparagraph{%s}" . "\\subparagraph{%s}"))))
#+end_src
#+begin_src emacs-lisp
(with-eval-after-load 'ox-latex
  (add-to-list 'org-latex-classes
               '("documentation"
                 "\\documentclass{article}
                 \\usepackage{/home/jeszyman/repos/latex/sty/documentation}
                 [NO-DEFAULT-PACKAGES]
                 [NO-PACKAGES]
                 [EXTRA]
                 \\begin{document}
                 \\tableofcontents
                 \\vspace{1cm}"
                 ("\\section{%s}" . "\\section{%s}")
                 ("\\subsection{%s}" . "\\subsection{%s}")
                 ("\\subsubsection{%s}" . "\\subsubsection{%s}")
                 ("\\paragraph{%s}" . "\\paragraph{%s}")
                 ("\\subparagraph{%s}" . "\\subparagraph{%s}"))))
#+end_src

********* iCalendar
#+begin_src emacs-lisp
(setq org-icalendar-with-timestamps 'active)
(setq org-icalendar-use-scheduled t)
(setq org-icalendar-use-deadline nil)
(setq org-icalendar-include-todo t)
(setq org-icalendar-exclude-tags (list "noexport"))
(setq org-icalendar-include-body '1)
(setq org-icalendar-alarm-time '5)
(setq org-icalendar-store-UID t) ;;Required for syncs
(setq org-icalendar-timezone "America/Chicago")
(setq org-agenda-default-appointment-duration 30)
(setq org-icalendar-combined-agenda-file "/tmp/org.ics")

#+end_src

********* Properties
#+begin_src emacs-lisp
(setq org-use-property-inheritance t)
#+end_src
********* (browse-org-table-urls-by-name)

#+begin_src emacs-lisp
(defun browse-org-table-urls-by-name (table-name)
  "Browse URLs listed in an Org-mode table identified by TABLE-NAME.
TABLE-NAME is the name of the table identified as #+name."

  (interactive "sEnter table name: ")
  (let* ((element (ignore-errors
                    (org-element-map (org-element-parse-buffer) 'table
                      (lambda (el)
                        (when (string= (org-element-property :name el) table-name)
                          el))
                      nil t))))
    (if (not element)
        (message "Table with name %s not found" table-name)
      (let ((table-begin (org-element-property :contents-begin element))
            (table-end (org-element-property :contents-end element)))
        (if (or (null table-begin) (null table-end))
            (message "No contents found for the table with name %s" table-name)
          (let ((table-content (buffer-substring-no-properties table-begin table-end)))
            (with-temp-buffer
              (insert table-content)
              (goto-char (point-min))
              (let ((urls (org-table-to-lisp)))
                (if (not urls)
                    (message "No URLs found in the table with name %s" table-name)
                  (let ((first-url (car (car urls))))
                    (start-process "brave-browser" nil "brave-browser" "--new-window" first-url)
                    (sit-for 2)  ;; Wait for the new window to open
                    (dolist (url-row (cdr urls))
                      (start-process "brave-browser" nil "brave-browser" (car url-row))
                      (sit-for 0.5)))  ;; Delay between each URL
                  (message "Opened URLs from table with name %s" table))))))))))

#+end_src

********* Agenda
#+begin_src emacs-lisp
(setq org-agenda-repeating-timestamp-show-all nil)
(setq org-sort-agenda-notime-is-late nil)
(setq org-agenda-start-on-weekday nil)
(setq org-agenda-remove-tags t)
(setq org-agenda-skip-scheduled-if-done t)
(setq
 org-agenda-files
 (list "~/repos/org/"))

(define-key global-map "\C-ca" 'org-agenda)
(setq org-agenda-skip-unavailable-files t)

(setq org-agenda-use-tag-inheritance t)
;;  http://stackoverflow.com/questions/36873727/make-org-agenda-full-screen
(setq org-agenda-window-setup (quote only-window))
(setq org-agenda-todo-ignore-time-comparison-use-seconds t)

;;; Based on http://article.gmane.org/gmane.emacs.orgmode/41427
  (defun my-skip-tag(tag)
    "Skip entries that are tagged TAG"
    (let* ((entry-tags (org-get-tags-at (point))))
      (if (member tag entry-tags)
          (progn (outline-next-heading) (point))
        nil)))

#+end_src
#+begin_src emacs-lisp
;; Needed for no y/n prompt at linked agenda execution
(setq org-confirm-elisp-link-function nil)

#+end_src
********* No read-only buffer warning
#+begin_src emacs-lisp
;; https://emacs.stackexchange.com/questions/19742/is-there-a-way-to-disable-the-buffer-is-read-only-warning
(defun my-command-error-function (data context caller)
  "Ignore the buffer-read-only signal; pass the rest to the default handler."
  (when (not (eq (car data) 'buffer-read-only))
    (command-error-default-function data context caller)))

(setq command-error-function #'my-command-error-function)
#+end_src
********* :plain link type
:PROPERTIES:
:ID:       0f1b7abb-233b-4e81-abcb-e424e9b860e4
:END:
https://claude.ai/chat/c775f0eb-fa91-45b4-82d6-e1a0df8b5526
#+name: org_plain_links
#+begin_src emacs-lisp
(defun org-plain-follow (id _)
  "Follow a plain link as if it were an ID link."
  (org-id-open id nil))

(org-link-set-parameters "plain"
                         :follow #'org-plain-follow
                         :export #'org-plain-export)

(defun org-plain-export (link description format _)
  "Export a plain link. Always export as plain text."
  (cond
   ((eq format 'html) (or description link))
   ((eq format 'latex) (or description link))
   ((eq format 'ascii) (or description link))
   (t link)))

(provide 'ol-plain)

(with-eval-after-load 'org
  (require 'ol-plain))
#+end_src
********* Inline images refresh on code eval
:PROPERTIES:
:ID:       1b8e46c2-0fac-48c2-8b9e-58b1e903b222
:END:
If you have code blocks in Org mode that produce images (such as R or Python plots), this setup refreshes the images right after code execution without requiring manual intervention.
#+begin_src emacs-lisp
(defun shk-fix-inline-images ()
  (when org-inline-image-overlays
    (org-redisplay-inline-images)))

(with-eval-after-load 'org
  (add-hook 'org-babel-after-execute-hook 'shk-fix-inline-images))

#+end_src
********** org-image-actual-width
:PROPERTIES:
:ID:       a760d06b-c2b2-4b54-a0b6-375a13a20538
:END:
When set as a list as below, 300 pixels will be the default, but another width can be specified through ATTR, e.g. #+ATTR_ORG: :width 800px
#+begin_src emacs-lisp
(setq org-image-actual-width '(300))
#+end_src
********* Ideas
********** Default reset check boxes
https://chatgpt.com/c/67069939-5e04-8005-80b3-7865981a8843
- currently an edit at point for all properties- NO!

******** custom-command-error-function
#+begin_src emacs-lisp
;; https://emacs.stackexchange.com/questions/19742/is-there-a-way-to-disable-the-buffer-is-read-only-warning
(defun custom-command-error-function (data context caller)
  "Ignore the buffer-read-only signal; pass the rest to the default handler."
  (when (not (eq (car data) 'buffer-read-only))
    (command-error-default-function data context caller)))

(setq command-error-function #'my-command-error-function)
#+end_src
******** Editing text
  #+begin_src emacs-lisp
;;https://emacs.stackexchange.com/questions/12701/kill-a-line-deletes-the-line-but-leaves-a-blank-newline-character
(setq kill-whole-line t)
#+end_src
******** bibtex
#+begin_src emacs-lisp
(setq reftex-default-bibliography '("~/repos/org/bib.bib"))

;; see org-ref for use of these variables

(setq bibtex-completion-bibliography "~/repos/org/bib.bib"
      bibtex-completion-library-path "~/library"
      bibtex-completion-notes-path "~/repo/org/notes")

#+end_src
********* get-bibtex-from-doi
:PROPERTIES:
:ID:       f22974c3-ff99-4da0-b253-35ced07588bf
:END:
#+begin_src emacs-lisp
;; Amazing bibtex from doi fetcher
;; https://www.anghyflawn.net/blog/2014/emacs-give-a-doi-get-a-bibtex-entry/
(defun get-bibtex-from-doi (doi)
 "Get a BibTeX entry from the DOI"
 (interactive "MDOI: ")
 (let ((url-mime-accept-string "text/bibliography;style=bibtex"))
   (with-current-buffer
     (url-retrieve-synchronously
       (format "http://dx.doi.org/%s"
       	(replace-regexp-in-string "http://dx.doi.org/" "" doi)))
     (switch-to-buffer (current-buffer))
     (goto-char (point-max))
     (setq bibtex-entry
     	  (buffer-substring
          	(string-match "@" (buffer-string))
              (point)))
     (kill-buffer (current-buffer))))
 (insert (decode-coding-string bibtex-entry 'utf-8))
 (bibtex-fill-entry))

#+end_src
********** dev
:PROPERTIES:
:header-args:emacs-lisp: :tangle no
:header-args:bash: :tangle no
:END:

- On [2024-06-27 Thu] I played around a little with also fetching abstract. The crossref metadata doesn't have that usually, although they built the functionality into their api. Instead, I can get abstract from pubmed like this:

#+begin_src emacs-lisp
(require 'url)
(require 'xml)

(defun xml-node-to-string (node)
  "Convert an XML node to a string, handling nested elements."
  (cond
   ((stringp node) node)
   ((listp node)
    (let ((tag (car node))
          (attrs (cadr node))
          (content (cddr node)))
      (concat
       (mapconcat #'xml-node-to-string content "")
       (when (eq tag 'sup) " "))))))

(defun get-pubmed-abstract (pmid)
  "Get abstract from PubMed using the given PubMed ID"
  (interactive "sPubMed ID: ")
  (let* ((url (format "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=pubmed&id=%s&retmode=xml" pmid))
         (buffer (url-retrieve-synchronously url))
         xml-data
         abstract-text)
    (with-current-buffer buffer
      (goto-char (point-min))
      (search-forward "\n\n")
      (setq xml-data (xml-parse-region (point) (point-max)))
      (with-output-to-temp-buffer "*PubMed XML*"
        (print xml-data))
      (let* ((pubmed-article (car (xml-get-children (car xml-data) 'PubmedArticle)))
             (medline-citation (car (xml-get-children pubmed-article 'MedlineCitation)))
             (article (car (xml-get-children medline-citation 'Article)))
             (abstract (car (xml-get-children article 'Abstract)))
             (abstract-texts (xml-get-children abstract 'AbstractText)))
        (setq abstract-text
              (mapconcat
               (lambda (a)
                 (xml-node-to-string a))
               abstract-texts
               " "))))
    (if (not (string-empty-p abstract-text))
        (progn
          (setq abstract-text (replace-regexp-in-string "\\s-+" " " abstract-text))
          (setq abstract-text (string-trim abstract-text))
          abstract-text)
      (message "No abstract found for PubMed ID %s" pmid)
      nil)))

(defun insert-pubmed-abstract ()
  "Insert a PubMed abstract"
  (interactive)
  (let* ((pmid (read-string "PubMed ID: "))
         (abstract (get-pubmed-abstract pmid)))
    (when abstract
      (insert abstract))))
#+end_src

In solid tumor oncology, circulating tumor DNA (ctDNA) is poised to transform care through accurate assessment of minimal residual disease (MRD) and therapeutic response monitoring. To overcome the sparsity of ctDNA fragments in low tumor fraction (TF) settings and increase MRD sensitivity, we previously leveraged genome-wide mutational integration through plasma whole-genome sequencing (WGS). Here we now introduce MRD-EDGE, a machine-learning-guided WGS ctDNA single-nucleotide variant (SNV) and copy-number variant (CNV) detection platform designed to increase signal enrichment. MRD-EDGESNV uses deep learning and a ctDNA-specific feature space to increase SNV signal-to-noise enrichment in WGS by ~300× compared to previous WGS error suppression. MRD-EDGECNV also reduces the degree of aneuploidy needed for ultrasensitive CNV detection through WGS from 1 Gb to 200 Mb, vastly expanding its applicability within solid tumors. We harness the improved performance to identify MRD following surgery in multiple cancer types, track changes in TF in response to neoadjuvant immunotherapy in lung cancer and demonstrate ctDNA shedding in precancerous colorectal adenomas. Finally, the radical signal-to-noise enrichment in MRD-EDGESNV enables plasma-only (non-tumor-informed) disease monitoring in advanced melanoma and lung cancer, yielding clinically informative TF monitoring for patients on immune-checkpoint inhibition.

but i'm not able to get pubmed ID

and the ncbi eutils can get pmid from doi:

#+begin_src bash
;curl "https://api.ncbi.nlm.nih.gov/lit/ctxp/v1/pubmed/?format=pubmed&id=10.1038/nature12373"

;curl -LH "Accept: application/json" "https://api.crossref.org/works/10.1038/nature12373"

;curl "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=pubmed&id=23892778&retmode=xml"

;curl "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=pubmed&term=10.1038/nature12373"

;curl "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=pubmed&term=10.1038/nature12373[doi]"

;DOI="10.1038/s41591-024-03040-4"
;ENCODED_DOI=$(echo "$DOI" | jq -sRr @uri)
;ESearch_URL="https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=pubmed&term=${ENCODED_DOI},
;  pmid =	 {38877116},
;%5Bdoi%5D"

;# Fetch the PubMed ID
;PMID=$(curl -s "$ESearch_URL" | grep -oP '(?<=<Id>)[^<]+')
;echo "PubMed ID: $PMID"
#+end_src

but i haven't build this into the retreival yet.

see also https://claude.ai/chat/cce7d404-eb1b-4424-8272-f46660f53612
https://github.com/jkitchin/org-ref/blob/master/doi-utils.el
******** python.el
https://github.com/gregsexton/ob-ipython/issues/28
#+begin_src emacs-lisp

(setq python-shell-completion-native-enable nil)

(add-hook 'python-mode-hook
  (lambda () (setq indent-tabs-mode nil)))

(setq python-indent-guess-indent-offset-verbose nil)
#+end_src
******** UTF8
#+begin_src emacs-lisp
(set-buffer-file-coding-system 'utf-8)
(prefer-coding-system 'utf-8)
(set-language-environment "UTF-8")

#+end_src

******** Alpha key
#+begin_src emacs-lisp
(global-set-key (kbd "C-x a") (lambda () (interactive) (insert "α")))
#+end_src
******** dev
:PROPERTIES:
:header-args:emacs-lisp: :tangle no
:END:
#+begin_src emacs-lisp
(set-language-environment "UTF-8")
(set-default-coding-systems 'utf-8)
#+end_src


******* Blacken
******** Use-package
#+begin_src emacs-lisp
(use-package blacken
  :after elpy
  :hook (elpy-mode . blacken-mode))
#+end_src

******* Company-mode
- [[id:c65678fd-8df9-4f16-929c-c960c7441cd0][Company mode reference header]]
#+begin_src emacs-lisp
;; (use-package company
;;   :config
;;   (global-company-mode)
;;   (setq
;;    company-dabbrev-downcase nil)) ; Don't downcase by default

#+end_src
******* [[file:config/public_emacs_config.el][Compiled elisp file]]
******* Conda

#+begin_src emacs-lisp
(setenv "WORKON_HOME" "~/miniconda3/envs")
#+end_src
******* Corfu
#+begin_src emacs-lisp
;; Corfu for completion UI
(use-package corfu
  :ensure t
  :init
  (global-corfu-mode) ;; Enable globally
  :custom
  (corfu-auto t)               ;; Enable auto completion
  (corfu-auto-prefix 2)        ;; Start completing after typing 2 characters
  (corfu-auto-delay 2.5)       ;; Delay before suggestions pop up
  :config
  ;; Free up keybindings for `completion-at-point`
  (with-eval-after-load 'flyspell
    (define-key flyspell-mode-map (kbd "C-M-i") nil)
    (define-key flyspell-mode-map (kbd "M-TAB") nil))
  (global-set-key (kbd "M-TAB") #'completion-at-point)) ;; Bind `M-TAB` globally
#+end_src
******* Dabbrev
#+begin_src emacs-lisp

;; Dynamic abbreviation completion
(use-package dabbrev
  :ensure nil
  :config
  (setq dabbrev-case-fold-search t) ;; Case-insensitive search
  (setq dabbrev-upcase-means-case-search t)) ;; Respect case for uppercase words

#+end_src
******* Eglot
******** Use-package
#+begin_src emacs-lisp

(use-package eglot
  :ensure t
  :init
  (add-hook 'sh-mode-hook 'eglot-ensure)
  (add-hook 'ess-r-mode-hook 'eglot-ensure)
  (add-hook 'python-mode-hook 'eglot-ensure)
  :config
  (add-to-list 'eglot-server-programs '(sh-mode . ("bash-language-server" "start")))
  (add-to-list 'eglot-server-programs '(python-mode . ("pylsp")))
  (add-to-list 'eglot-server-programs '(ess-r-mode . ("R" "--slave" "-e" "languageserver::run()"))))

(with-eval-after-load 'eglot
  (define-key eglot-mode-map (kbd "C-c <tab>") #'company-complete))


#+end_src

******* Elpy
- [[id:5cd6f647-11ba-445a-bcde-07493b0e4fae][Elpy reference header]]
- Use package
  #+begin_src emacs-lisp
(use-package elpy
  :init
  (advice-add 'python-mode :before 'elpy-enable)
  :config
  (define-key elpy-mode-map (kbd "C-c C-n") 'elpy-shell-send-statement-and-step)
  (setenv "PATH" (concat "~/miniconda3/bin:" (getenv "PATH")))
  (setenv "WORKON_HOME" "~/miniconda3/envs")
  (setq exec-path (append '("~/miniconda3/bin") exec-path))
  (add-to-list 'process-coding-system-alist '("python" . (utf-8 . utf-8)))
  (setq elpy-rpc-python-command "~/miniconda3/bin/python")
)
#+end_src
- Open Python shells in a new frame
  - https://chatgpt.com/c/67252540-09c0-8005-8b13-e8cac310cd3a
  #+begin_src emacs-lisp
(defun my-elpy-shell-display-buffer-in-new-frame (buffer alist)
  "Display the Python shell buffer in a new frame."
  (let ((display-buffer-alist
         '(("*Python*" display-buffer-pop-up-frame))))
    (display-buffer buffer alist)))

(advice-add 'elpy-shell-send-statement-and-step :around
            (lambda (orig-fun &rest args)
              "Send statement and open the Python buffer in a new frame."
              (let ((display-buffer-alist
                     '(("*Python*" . (my-elpy-shell-display-buffer-in-new-frame)))))
                (apply orig-fun args))))

#+end_src
******* ESS
- [[id:147724ad-7598-4be6-b8a9-725a19eb39fe][ESS reference header]]
******** Use-package
#+begin_src emacs-lisp
(use-package ess
  :init
  (require 'ess-site)
  :config
  (setq ess-ask-for-ess-directory nil
	ess-help-own-frame 'one
	ess-indent-with-fancy-comments nil
	ess-use-auto-complete t
	ess-use-company t
	inferior-ess-own-frame t
	inferior-ess-same-window nil)
  (define-key ess-mode-map (kbd "C-c C-n") 'ess-eval-line-and-step)
  :mode (
         ("/R/.*\\.q\\'"       . R-mode)
         ("\\.[rR]\\'"         . R-mode)
         ("\\.[rR]profile\\'"  . R-mode)
         ("NAMESPACE\\'"       . R-mode)
         ("CITATION\\'"        . R-mode)
         ("\\.[Rr]out"         . R-transcript-mode)
         ("\\.Rd\\'"           . Rd-mode)
         ))
#+end_src
******** Syntax highlighting
#+begin_src emacs-lisp
(custom-set-variables
 '(ess-R-font-lock-keywords
   (quote
    ((ess-R-fl-keyword:modifiers . t)
     (ess-R-fl-keyword:fun-defs . t)
     (ess-R-fl-keyword:keywords . t)
     (ess-R-fl-keyword:assign-ops . t)
     (ess-R-fl-keyword:constants . t)
     (ess-fl-keyword:fun-calls . t)
     (ess-fl-keyword:numbers . t)
     (ess-fl-keyword:operators . t)
     (ess-fl-keyword:delimiters . t)
     (ess-fl-keyword:= . t)
     (ess-R-fl-keyword:F&T . t)
     (ess-R-fl-keyword:%op% . t)))))
#+end_src

******* exec-path-from-shell
- Ensures parts of Emacs inherit shell PATH when Emacs is runnng as a daemon
******** Use-package
#+begin_src emacs-lisp
(use-package exec-path-from-shell
  :config
  (when (daemonp)
    (exec-path-from-shell-initialize)))

#+end_src
******* expand-region
:PROPERTIES:
:ID:       aa87da56-3f24-475c-adbe-d4d99a7376cc
:END:
https://github.com/magnars/expand-region.el
#+begin_src emacs-lisp
(use-package expand-region)
(require 'expand-region)
(global-set-key (kbd "C-=") 'er/expand-region)
#+end_src

******* flycheck
******** Use-package
#+begin_src emacs-lisp
(use-package flycheck
  :hook
  (org-src-mode . my-org-mode-flycheck-hook)
  :config
  (defun my-org-mode-flycheck-hook ()
    (when (derived-mode-p 'prog-mode) ;; Check if it's a programming mode
      (flycheck-mode 1))))

#+end_src
******* Helm
- [[id:96c0f509-c06b-4e48-8f28-019cd2ca1a38][Helm reference header]]
#+begin_src emacs-lisp
(use-package helm
  :config
  (global-set-key (kbd "C-x b") 'helm-mini)
  (global-set-key (kbd "C-s") 'helm-occur)
  (setq
   helm-completion-style 'emacs
   helm-move-to-line-cycle-in-source nil)) ;; allow C-n through different sections
#+end_src
******* helm-org

#+begin_src emacs-lisp
(use-package helm-org
  :config
  (global-set-key (kbd "C-c j") 'helm-org-in-buffer-headings)
  (global-set-key (kbd "C-c w") 'helm-org-refile-locations)
  (setq org-outline-path-complete-in-steps nil
	org-refile-allow-creating-parent-nodes 'confirm
	org-refile-targets '((org-agenda-files :maxlevel . 20))
	org-refile-targets '((org-agenda-files :maxlevel . 3))
	org-refile-use-outline-path 'file))
  (define-key global-map (kbd "C-c C-j") nil)
  (global-set-key (kbd "C-c C-j") 'helm-org-agenda-files-headings)
  (define-key global-map (kbd "C-$") 'org-mark-ring-goto)
  (global-set-key (kbd "C-c C-j") 'helm-org-agenda-files-headings)
  (setq helm-org-ignore-autosaves t)


#+end_src
#+begin_src emacs-lisp
(global-set-key (kbd "C-c C-j") 'helm-org-agenda-files-headings)

(with-eval-after-load 'org
  (define-key org-mode-map (kbd "C-c C-j") 'helm-org-agenda-files-headings))

#+end_src

******* helm-org-rifle
#+begin_src emacs-lisp
(use-package helm-org-rifle
    :config
    (setq helm-org-rifle-show-path nil
	  helm-org-rifle-show-full-contents nil)
    (require 'helm)
    (global-set-key (kbd "C-c C-j") 'helm-org-agenda-files-headings))

#+end_src

******* htmlize

******** Use-pacakge
#+begin_src emacs-lisp
(use-package htmlize)
#+end_src

******* Ideas
:PROPERTIES:
:header-args:emacs-lisp: :tangle no
:END:
https://chatgpt.com/c/8e222105-a52a-4856-80d3-c37823f0efb1
******* ivy
******** Use-package
#+begin_src emacs-lisp
(use-package ivy
  :diminish)
#+end_src

******* marginalia
#+begin_src emacs-lisp
(use-package marginalia
  ;; Either bind `marginalia-cycle' globally or only in the minibuffer
  :bind (("M-A" . marginalia-cycle)
         :map minibuffer-local-map
         ("M-A" . marginalia-cycle))
  ;; The :init configuration is always executed (Not lazy!)
  :init
  (marginalia-mode)
  :ensure t)
#+end_src

******* mark-whole-word
#+begin_src emacs-lisp
  ;; https://emacs.stackexchange.com/questions/35069/best-way-to-select-a-word
  (defun mark-whole-word (&optional arg allow-extend)
    "Like `mark-word', but selects whole words and skips over whitespace.
  If you use a negative prefix arg then select words backward.
  Otherwise select them forward.

  If cursor starts in the middle of word then select that whole word.

  If there is whitespace between the initial cursor position and the
  first word (in the selection direction), it is skipped (not selected).

  If the command is repeated or the mark is active, select the next NUM
  words, where NUM is the numeric prefix argument.  (Negative NUM
  selects backward.)"
    (interactive "P\np")
    (let ((num  (prefix-numeric-value arg)))
      (unless (eq last-command this-command)
	(if (natnump num)
	    (skip-syntax-forward "\\s-")
	  (skip-syntax-backward "\\s-")))
      (unless (or (eq last-command this-command)
		  (if (natnump num)
		      (looking-at "\\b")
		    (looking-back "\\b")))
	(if (natnump num)
	    (left-word)
	  (right-word)))
      (mark-word arg allow-extend)))

  (global-set-key (kbd "C-c C-SPC") 'mark-whole-word)
#+end_src
******* Native complete
******** Use-package
#+begin_src emacs-lisp
(use-package native-complete)
#+end_src

******* open-chatgtp-query-in-new-browser-window

- Make a ChatGPT query from emacs
  - https://chatgpt.com/c/d4f18f6b-2f09-4a69-93f1-8f8ab5b39cb0

#+begin_src emacs-lisp
(defun open-chatgpt-query-in-new-browser-window (query &optional use-gpt-4)
  "Send a QUERY to ChatGPT and open the result in a new browser window.
With a prefix argument USE-GPT-4, use GPT-4 instead of GPT-4-turbo."
  (interactive "sEnter your ChatGPT query: \nP")
  (let* ((model (if use-gpt-4 "gpt-4" "gpt-4-turbo"))
         (url (concat "https://chat.openai.com/?q=" (url-hexify-string query)
                      "&model=" model)))
    (start-process "brave-browser" nil "brave-browser" "--new-window" url)))

(global-set-key (kbd "C-c C-g") 'open-chatgpt-query-in-new-browser-window)

#+end_src

******* orderless
******** Use-package
#+begin_src emacs-lisp
(use-package orderless
  :init
  ;; Configure a custom style dispatcher (see the Consult wiki)
  ;; (setq orderless-style-dispatchers '(+orderless-dispatch)
  ;;       orderless-component-separator #'orderless-escapable-split-on-space)
  (setq completion-styles '(orderless basic)
        completion-category-defaults nil
        completion-category-overrides '((file (styles partial-completion)))))

#+end_src
******* org-edna
#+begin_src emacs-lisp
(use-package org-edna
  :ensure t
  :config
  (org-edna-mode 1))
#+end_src

******* [[id:45e28300-51fd-4ce7-aed1-15dca15022d4][Org-mode]]
******* org-plus-contrib
******** Use-package
#+begin_src emacs-lisp
(require 'org-checklist)
(require 'ox-extra)
(ox-extras-activate '(ignore-headlines))

#+end_src
******* org-ql
#+begin_src emacs-lisp
(use-package org-ql)
#+end_src

******* ox-pandoc
#+begin_src emacs-lisp

(use-package ox-pandoc
  :after org
  :config
  (setq org-pandoc-options-for-docx '((standalone . nil)))
  )

#+end_src

******* savehist
******** Use-package
#+begin_src emacs-lisp
(use-package savehist)
#+end_src

******* snakemake-mode
#+begin_src emacs-lisp
(use-package snakemake-mode)
#+end_src
#+begin_src emacs-lisp
(defcustom snakemake-indent-field-offset nil
  "Offset for field indentation."
  :type 'integer)

(defcustom snakemake-indent-value-offset nil
  "Offset for field values that the line below the field key."
  :type 'integer)
#+end_src
******* Tree-sitter
#+begin_src emacs-lisp

;; Install and configure tree-sitter
(use-package tree-sitter
  :ensure t
	 )

;; Install and configure tree-sitter-langs
(use-package tree-sitter-langs
  :ensure t
  :after tree-sitter
  :config
  (add-hook 'tree-sitter-after-on-hook #'tree-sitter-hl-mode))


(global-tree-sitter-mode)
(add-hook 'tree-sitter-after-on-hook #'tree-sitter-hl-mode)

(defun disable-tree-sitter-for-org-mode ()
  (when (eq major-mode 'org-mode)
    (tree-sitter-mode -1)))

(add-hook 'tree-sitter-mode-hook #'disable-tree-sitter-for-org-mode)
#+end_src

******* vc-use-package
#+begin_src emacs-lisp
(unless (package-installed-p 'vc-use-package)
  (package-vc-install "https://github.com/slotThe/vc-use-package"))
(require 'vc-use-package)
#+end_src

******* vertico
******** Use-package
#+begin_src emacs-lisp
(use-package vertico)
#+end_src

******** Use `consult-completion-in-region' if Vertico is enabled.
#+begin_src emacs-lisp

;; Otherwise use the default `completion--in-region' function.
(setq completion-in-region-function
      (lambda (&rest args)
        (apply (if vertico-mode
                   #'consult-completion-in-region
                 #'completion--in-region)
               args)))

#+end_src
******** other
#+begin_src emacs-lisp
;; A few more useful configurations...
(use-package emacs
  :init
  ;; Add prompt indicator to `completing-read-multiple'.
  ;; We display [CRM<separator>], e.g., [CRM,] if the separator is a comma.
  (defun crm-indicator (args)
    (cons (format "[CRM%s] %s"
                  (replace-regexp-in-string
                   "\\`\\[.*?]\\*\\|\\[.*?]\\*\\'" ""
                   crm-separator)
                  (car args))
          (cdr args)))
  (advice-add #'completing-read-multiple :filter-args #'crm-indicator)

  ;; Do not allow the cursor in the minibuffer prompt
  (setq minibuffer-prompt-properties
        '(read-only t cursor-intangible t face minibuffer-prompt))
  (add-hook 'minibuffer-setup-hook #'cursor-intangible-mode)

  ;; Emacs 28: Hide commands in M-x which do not work in the current mode.
  ;; Vertico commands are hidden in normal buffers.
  ;; (setq read-extended-command-predicate
  ;;       #'command-completion-default-include-p)

  ;; Enable recursive minibuffers
  (setq enable-recursive-minibuffers t))

(define-key vertico-map (kbd "TAB") #'minibuffer-complete)
(define-key vertico-map (kbd "C-n") #'vertico-next)
(define-key vertico-map (kbd "C-p") #'vertico-previous)

#+end_src
#+begin_src emacs-lisp
;; Ensure you have these packages installed
(use-package vertico
  :ensure t
  :init
  (vertico-mode))

(use-package marginalia
  :ensure t
  :after vertico
  :init
  (marginalia-mode))

(use-package orderless
  :ensure t
  :init
  ;; Customize completion styles to include orderless
  (setq completion-styles '(orderless basic))
  ;; Optionally configure completion categories
  (setq completion-category-defaults nil)
  (setq completion-category-overrides '((file (styles basic partial-completion)))))

(use-package savehist
  :ensure t
  :init
  (savehist-mode))

(use-package consult
  :ensure t
  :bind (("C-x b" . consult-buffer)
         ("M-y" . consult-yank-pop)
         ("C-s" . consult-line)
         ("M-g g" . consult-goto-line)
         ("M-g M-g" . consult-goto-line)
         ("C-M-l" . consult-imenu)
         :map minibuffer-local-map
         ("M-r" . consult-history))
  :init
  (setq register-preview-delay 0
        register-preview-function #'consult-register-preview)
  ;; Optionally configure preview
  (autoload 'consult-register-window "consult")
  (setq consult-register-window-function #'consult-register-window)
  ;; Optionally configure narrowing key
  (setq consult-narrow-key "<"))

;; Enable vertico-directory for better directory navigation
(use-package vertico-directory
  :ensure nil
  :load-path "path/to/vertico-directory"
  :after vertico
  :bind (:map vertico-map
              ("RET" . vertico-directory-enter)
              ("DEL" . vertico-directory-delete-char)
              ("M-DEL" . vertico-directory-delete-word)))

;; Example configuration for more intuitive completion cycling
(define-key vertico-map (kbd "TAB") #'minibuffer-complete)
(define-key vertico-map (kbd "C-n") #'vertico-next)
(define-key vertico-map (kbd "C-p") #'vertico-previous)

#+end_src
******* vterm
******** Use-package
#+begin_src emacs-lisp

(use-package vterm
  :bind* (:map vterm-mode-map
               ("C-z" . vterm-undo)
               ("C-v" . vterm-yank))
  :init
  (add-hook 'vterm-mode-hook (lambda () (setq-local cua-mode nil)))
  :config
  (setq vterm-max-scrollback 100000)
  (custom-set-faces
   '(vterm-color-blue ((t (:foreground "#477EFC" :background "#477EFC"))))))



#+end_src

******** Mult-vterm
#+begin_src emacs-lisp
(use-package multi-vterm :ensure t)
#+end_src
******* web-mode
******** Use-package
#+begin_src emacs-lisp
(use-package web-mode
  :mode ("\\.phtml\\'"
         "\\.tpl\\.php\\'"
         "\\.[agj]sp\\'"
         "\\.as[cp]x\\'"
         "\\.erb\\'"
         "\\.mustache\\'"
         "\\.djhtml\\'"
         "\\.html?\\'"))

#+end_src

******* YASnippets
******** Use-package
#+begin_src emacs-lisp
(use-package yasnippet
  :init
  ;; Dynamically add subdirectories in ~/.emacs.d/snippets to yas-snippet-dirs
  (setq yas-snippet-dirs
        (directory-files "~/.emacs.d/snippets" t "^[^.]+")) ; Directories only, no append needed
   :config
  (yas-global-mode 1) ; Enable yasnippet globally
  (define-key yas-minor-mode-map (kbd "<C-tab>") 'yas-expand))

#+end_src

#+begin_src emacs-lisp
(defun my-org-mode-hook ()
  (setq-local yas-buffer-local-condition
              '(not (org-in-src-block-p t))))
(add-hook 'org-mode-hook #'my-org-mode-hook)
#+end_src
******** Prevent company mode during expansions
#+begin_src emacs-lisp
(add-hook 'yas-before-expand-snippet-hook (lambda () (setq-local company-backends nil)))
(add-hook 'yas-after-exit-snippet-hook    (lambda () (kill-local-variable 'company-backends)))

#+end_src
******** Provide a setting to auto-expand snippets
:PROPERTIES:
:ID:       485a4034-bae9-4d46-bed1-e21bb23e258c
:END:
#+begin_src emacs-lisp
(setq require-final-newline nil)
(defun yas-auto-expand ()
  "Function to allow automatic expansion of snippets which contain a condition, auto."

  (when yas-minor-mode
    (let ((yas-buffer-local-condition ''(require-snippet-condition . auto)))
      (yas-expand))))

(defun my-yas-try-expanding-auto-snippets ()
  (when yas-minor-mode
    (let ((yas-buffer-local-condition ''(require-snippet-condition . auto)))
      (yas-expand))))

(add-hook 'post-command-hook #'my-yas-try-expanding-auto-snippets)


#+end_src


****** Load Last
:PROPERTIES:
:ID:       78120684-eb8c-4970-836e-13d2cb624386
:header-args: :tangle ./emacs/load-last.el
:END:
#+begin_src emacs-lisp
(load-directory "~/.emacs.d/lisp/")

(run-with-idle-timer
 1 nil
 (lambda ()
   (when (member "Hack" (font-family-list))
     (set-face-attribute 'default nil
                         :family "Hack"
                         :height 114
                         :weight 'light)
     (message "Font set to Hack"))))


(custom-set-faces
 '(default ((t (:family "Hack" :height 114 :weight light)))))

(add-hook 'emacs-startup-hook
          (lambda ()
            (load-theme 'manoj-dark t)))

(load-theme 'manoj-dark t)

#+end_src
******* Essh
https://www.emacswiki.org/emacs/download/essh.el
#+begin_src emacs-lisp 
(require 'essh)
(defun essh-sh-hook ()
  (define-key sh-mode-map "\C-c\C-r" 'pipe-region-to-shell)
  (define-key sh-mode-map "\C-c\C-b" 'pipe-buffer-to-shell)
  (define-key sh-mode-map "\C-c\C-j" 'pipe-line-to-shell)
  (define-key sh-mode-map "\C-c\C-n" 'pipe-line-to-shell-and-step)
  (define-key sh-mode-map "\C-c\C-f" 'pipe-function-to-shell)
  (define-key sh-mode-map "\C-c\C-d" 'shell-cd-current-directory))
(add-hook 'sh-mode-hook 'essh-sh-hook)

(add-hook 'sh-mode-hook 'flycheck-mode)
#+end_src

***** Casual / transient test
#+begin_src emacs-lisp
(use-package casual
  :ensure t
  :config
  ;; Additional configuration here
)

;(use-package casual-agenda)
#+end_src

#+begin_src emacs-lisp
(require 'transient)

(defun casual-bibtex-open-url ()
  "Open the URL or DOI in the BibTeX entry at point."
  (interactive)
  (let ((url (bibtex-autokey-get-field "url")))
    (if url
        (browse-url url)
      (message "No URL found in this entry."))))

(defun casual-bibtex-copy-key ()
  "Copy the citation key of the current BibTeX entry to the clipboard."
  (interactive)
  (let ((key (bibtex-autokey-get-field "key")))
    (if key
        (progn
          (kill-new key)
          (message "Copied citation key: %s" key))
      (message "No citation key found in this entry."))))

(defun casual-bibtex-check-duplicates ()
  "Check for duplicate BibTeX entries in the buffer."
  (interactive)
  (bibtex-check-duplicates))

(transient-define-prefix casual-bibtex-menu ()
  "Casual menu for BibTeX."
  [["Actions"
    ("o" "Open URL" casual-bibtex-open-url)
    ("c" "Copy Citation Key" casual-bibtex-copy-key)
    ("d" "Check Duplicates" casual-bibtex-check-duplicates)
    ("s" "Sort Entries" bibtex-sort-buffer)
    ("v" "Validate Buffer" bibtex-validate)]])

#+end_src

***** Corfu test
- https://github.com/minad/corfu
#+begin_src emacs-lisp
(use-package corfu
  ;; Optional customizations
  ;; :custom
  ;; (corfu-cycle t)                ;; Enable cycling for `corfu-next/previous'
  ;; (corfu-quit-at-boundary nil)   ;; Never quit at completion boundary
  ;; (corfu-quit-no-match nil)      ;; Never quit, even if there is no match
  ;; (corfu-preview-current nil)    ;; Disable current candidate preview
  ;; (corfu-preselect 'prompt)      ;; Preselect the prompt
  ;; (corfu-on-exact-match nil)     ;; Configure handling of exact matches

  ;; Enable Corfu only for certain modes. See also `global-corfu-modes'.
  ;; :hook ((prog-mode . corfu-mode)
  ;;        (shell-mode . corfu-mode)
  ;;        (eshell-mode . corfu-mode))

  ;; Recommended: Enable Corfu globally.  This is recommended since Dabbrev can
  ;; be used globally (M-/).  See also the customization variable
  ;; `global-corfu-modes' to exclude certain modes.
  :init
  (global-corfu-mode)
  (setq corfu-auto-delay 0.2) ;; Set delay for popup
  (define-key corfu-map (kbd "C-n") #'corfu-next)
  (define-key corfu-map (kbd "C-p") #'corfu-previous))


;; A few more useful configurations...
(use-package emacs
  :custom
  ;; TAB cycle if there are only few candidates
  ;; (completion-cycle-threshold 3)

  ;; Enable indentation+completion using the TAB key.
  ;; `completion-at-point' is often bound to M-TAB.
  (tab-always-indent 'complete)

  ;; Emacs 30 and newer: Disable Ispell completion function.
  ;; Try `cape-dict' as an alternative.
  (text-mode-ispell-word-completion nil)

  ;; Hide commands in M-x which do not apply to the current mode.  Corfu
  ;; commands are hidden, since they are not used via M-x. This setting is
  ;; useful beyond Corfu.
  (read-extended-command-predicate #'command-completion-default-include-p))
#+end_src
printers
[[cite:&ottolenghi2012jerusalem]]

#+begin_src emacs-lisp
(use-package cape
  :ensure t
  :after corfu
  :config
  (defun my-cape-setup ()
    ;; Here you can define specific completion functions you want to use.
    (add-to-list 'completion-at-point-functions
                 (list #'cape-dabbrev
                       #'cape-file
		       #'cape-dict
                       #'cape-tex
		       )))  ;; include other functions as needed

  ;; Enable the setup for Org mode.
  (add-hook 'org-mode-hook 'my-cape-setup))

#+end_src

#+begin_src R
librar
#+end_src
prin
printer
#+begin_src emacs-lisp
   (setq completion-styles '(orderless Partial-completion emacs))
   (use-package company
     :ensure t
     :hook (after-init . global-company-mode)
     :config
     (setq company-idle-delay 0.2)  ;; Adjust delay as needed
     (setq company-minimum-prefix-length 1))  ;; Minimal prefix length for suggestions

#+end_src
printer-driver-foo2zjs-common
print(text)
cfDNA-based
#+begin_src emacs-lisp
   (defun my-cape-setup ()
     "Set up cape completions for Org mode."
     (message "Cape setup for Org mode activated")  ;; Message for debugging
     (setq-local completion-at-point-functions
                 (list #'cape-dabbrev
                       #'cape-file
                       #'cape-tex
		       #'cape-dict
		       )))

#+end_src
#+begin_src emacs-lisp


#+end_src
#+begin_src emacs-lisp
(defun my-cape-setup ()
  (setq-local completion-at-point-functions
                 (list #'cape-dabbrev
                       #'cape-file
                       #'cape-tex
                       #'cape-dict)))  ;; Add dictionary completion
(my-cape-setup)
#+end_src
prin
#+begin_src emacs-lisp
   (use-package cape
     :ensure t
     :after corfu
     :config
     (defun my-cape-setup ()
       "Set up cape completions for Org mode."
       (setq-local completion-at-point-functions
                   (list #'cape-dabbrev
                         #'cape-file
                         #'cape-tex
                         #'cape-dict)))  ;; Add other completion sources as needed

     ;; Activate setup for Org mode
     (add-hook 'org-mode-hook 'my-cape-setup))

#+end_src
prin
#+begin_src emacs-lisp
   (defun my-cape-setup ()
     "Set up cape completions for Org mode."
     (setq-local completion-at-point-functions
                 (list #'cape-dabbrev
                       #'cape-file
                       #'cape-tex
                       #'cape-dict))  ;; Add other completion sources
     (message "Cape setup executed: %s" completion-at-point-functions))  ;; Debug message

#+end_src
prin
prin

[[cite:&wallis2021cnf]]
***** Embark test
- https://github.com/oantolin/embark
- https://github.com/oantolin/embark
- https://github.com/kickingvegas/casual
- http://yummymelon.com/devnull/announcing-casual-avy.html
#+begin_src emacs-lisp
(use-package marginalia
  :ensure t
  :config
  (marginalia-mode))

(use-package embark
  :ensure t

  :bind
  (("C-." . embark-act)         ;; pick some comfortable binding
   ("C-;" . embark-dwim)        ;; good alternative: M-.
   ("C-h B" . embark-bindings) ;; alternative for `describe-bindings'
   (:map org-mode-map ;; Override org-mode specific binding
         ("C-;" . embark-dwim)
	 ("C-." . embark-act)
   ))

  :init

  ;; Optionally replace the key help with a completing-read interface
  (setq prefix-help-command #'embark-prefix-help-command)

  ;; Show the Embark target at point via Eldoc. You may adjust the
  ;; Eldoc strategy, if you want to see the documentation from
  ;; multiple providers. Beware that using this can be a little
  ;; jarring since the message shown in the minibuffer can be more
  ;; than one line, causing the modeline to move up and down:

  ;; (add-hook 'eldoc-documentation-functions #'embark-eldoc-first-target)
  ;; (setq eldoc-documentation-strategy #'eldoc-documentation-compose-eagerly)

  :config

  ;; Hide the mode line of the Embark live/completions buffers
  (add-to-list 'display-buffer-alist
               '("\\`\\*Embark Collect \\(Live\\|Completions\\)\\*"
                 nil
                 (window-parameters (mode-line-format . none)))))

;; Consult users will also want the embark-consult package.
(use-package embark-consult
  :ensure t ; only need to install it, embark loads it after consult if found
  :hook
  (embark-collect-mode . consult-preview-at-point-mode))
#+end_src

https://github.com/oantolin/embark
***** Retired
:properties:
:header-args:emacs-lisp: :tangle no
:end:

****** org-ref
:properties:
:header-args:emacs-lisp: :tangle no
:end:

******* [[id:50da582a-7d75-4646-9a94-638244760b4a][Package notes]]
******* Use-package
#+begin_src emacs-lisp
(use-package org-ref
  :init
  (require 'bibtex)
  (require 'org-ref-ivy)
  (require 'org-ref-bibtex)
  (require 'org-ref-pubmed)
  (require 'org-ref-scopus)
  (require 'org-ref-wos)
  :config
  (setq
   org-ref-default-bibliography '("~/repos/org/bib.bib")
   org-ref-pdf-directory "~/library/"))
#+end_src
#+begin_src emacs-lisp
(setq bibtex-completion-bibliography '("~/repos/org/bib.bib")
      bibtex-completion-library-path '("~/data/library/")
      bibtex-completion-additional-search-fields '(keywords)
      bibtex-completion-display-formats
      '((article       . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*} ${journal:40}")
	(inbook        . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*} Chapter ${chapter:32}")
	(incollection  . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*} ${booktitle:40}")
	(inproceedings . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*} ${booktitle:40}")
	(t             . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*}"))
      bibtex-completion-pdf-open-function
      (lambda (fpath)
	(call-process "open" nil 0 nil fpath)))

(define-key org-mode-map (kbd "C-c ]") 'org-ref-insert-link)

(setq org-ref-show-broken-links nil)

(setq org-ref-bibliography-notes "~/repo/org/notes"
      org-ref-default-bibliography '("~/repos/org/bib.bib")
      org-ref-pdf-directory "~/library")

(require 'org-ref-ivy)
(setq org-ref-insert-link-function 'org-ref-insert-link-hydra/body
      org-ref-insert-cite-function 'org-ref-cite-insert-ivy
      org-ref-insert-label-function 'org-ref-insert-label-link
      org-ref-insert-ref-function 'org-ref-insert-ref-link
      org-ref-cite-onclick-function (lambda (_) (org-ref-citation-hydra/body)))

#+end_src
******* Show citation info in minibuffer
https://github.com/jkitchin/org-ref/issues/938
#+begin_src emacs-lisp
(defun org-ref-link-message (&optional a1 a2 a3)
  (when (and (eq major-mode 'org-mode)
   (eq (get-text-property (point) 'help-echo) 'org-ref-cite-tooltip))
  (display-local-help)))

(advice-add 'right-char :after 'org-ref-link-message)
(advice-add 'left-char :after 'org-ref-link-message)
(advice-add 'evil-forward-char :after 'org-ref-link-message)
(advice-add 'evil-backward-char :after 'org-ref-link-message)


#+end_src

**** See [[id:BF9D824A-02EF-4580-97A1-B887299AD461][Lisp]]
****** (custom-org-open-link)
#+begin_src emacs-lisp
(defun custom-org-open-link (arg)
  "Open an Org mode link. With a prefix ARG, open it in an indirect buffer."
  (interactive "P")
  (if arg
      (let ((link (org-element-context)))
        (if (eq (car link) 'link)
            (let ((link-pos (point)))
              (org-open-at-point)
              (let* ((target-buffer (current-buffer))
                     (target-pos (point))
                     (header (nth 4 (org-heading-components)))
                     (indirect-buffer-name (format "*%s::%s*" (buffer-name target-buffer) header))
                     (indirect-buffer (make-indirect-buffer target-buffer indirect-buffer-name t)))
                (with-current-buffer indirect-buffer
                  (goto-char target-pos)
                  (org-narrow-to-subtree))
                (switch-to-buffer indirect-buffer)
                (bury-buffer target-buffer)))  ;; Bury the target buffer
          (message "No valid link at point")))
    (org-open-at-point)))

;; Bind the function to `C-c C-o`
(with-eval-after-load 'org
  (define-key org-mode-map (kbd "C-c C-o") 'org-open-at-point))

#+end_src

***** Local yas
:PROPERTIES:
:ID:       7d4b8924-1d0d-4d9d-8be7-ee2d8de4f458
:END:
****** prop                                                             :yas:
:PROPERTIES:
:ID:       b1b4c4eb-ca81-4ef3-805f-2e3b8a0a4597
:END:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/prop
# -*- mode: snippet -*-
# key: prop
# expand-env: ((yas-indent-line 'none))
# --
:properties:
$0
:end:
#+end_src



***** Emacs Scripts and Commands
:PROPERTIES:
:ID:       bdb71fd7-ac1b-47b0-b883-dd79f7104395
:END:
#+begin_src emacs-lisp
(buffer-file-name)
#+end_src
- reference snippet to install snapshot on ubunut
  #+begin_src bash :tangle no
sudo add-apt-repository ppa:ubuntu-elisp/ppa
sudo apt-get update
sudo apt-get install emacs-snapshot
#+end_src
***** Emacs [[https://www.gnu.org/software/emacs/manual/html_node/emacs/index.html#SEC_Contents][Documentation]]
:PROPERTIES:
:ID:       6a66a393-75c0-4576-b77d-e259dbd5d252
:END:
- Local with C-h r
  - Navigating documentation
    - C-h i g
    - [[http://stackoverflow.com/questions/14915572/how-do-i-get-started-using-emacs-documentation][intro to documentation]]
- 8
  - 8.4 Completion
    - Minibuffer - https://www.reddit.com/r/emacs/comments/rxa29k/is_it_possible_to_have_a_window_which_is_just_the/
- 5
  - 5.24  - [[https://www.gnu.org/software/emacs/manual/html_mono/efaq.html#Turning-off-beeping][stop emacs beeps]]
  - [[https://www.gnu.org/software/emacs/manual/html_mono/efaq.html#Matching-parentheses][5.27 Parenthesis matching]]
  - 5.33 How do I insert <some text> at the beginning of every line?
- 12 Hippie Expansion
  - 12.5 Rectangles
    - add leading comment symbol with string-input-rectangle
- 13
  - 13.8 Bookmarks
    - prototypical use of bookmarks is to record where you were reading in various files
    - https://wooww.emacswiki.org/emacs/BookMarks
- [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Display.html#Display][14 Controlling the Display]]
  - https://github.com/joostkremers/visual-fill-column
  - http://ergoemacs.org/emacs/emacs_playing_with_color_theme.html
- 17 Keyboard Macros
  - https://emacsnotes.wordpress.com/2018/05/27/keyboard-macros-build-custom-commands-with-the-emacs-command-language/
  - 17.5
    - Troubleshooting- M-x profiler-start / profiler-report
- 18 File handling
  - https://old.reddit.com/r/orgmode/comments/p1raro/executable_org_file_bootstrapping/
- 10 Help
  | type    | action         | command |
  | help    | info program   | C-h i   |
  | help    | function doc   | C-h f   |
  | help    | variable doc   | C-h v   |
  | help    | key combo      | C-h k   |
  | help    | curr buff mode | C-h m   |
  |         |                |         |
  | help    | list all cmmds | C-h m   |
  |         |                |         |
  | display | all key bind   | X-b     |
  |         |                |         |
  | help    | info directory | C-h i d |
  |         |                |         |
  |         | show mode info | C-h m   |
- [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Windows.html#Windows][20 Multiple Windows]]
  - [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Split-Window.html#Split-Window][20.2 Splitting Windows]]
- 21 Frames and Graphical Displays
  | type   | action       | command     |
  | resize | shrink h     | S-C-<left>  |
  |        | enlarge h    | S-C-<right> |
  |        | shrink v     | S-C-<down>  |
  |        | enlarge v    | S-C-<up>    |
  |        |              |             |
  | buffer | kill current | C-x k       |
  |        |              |             |
  | Text   | Larger/small | C-x-+/-     |
  - ;; Prevents local frame splitting  (set-frame-parameter nil 'unsplittable t)
  - - Frames
    - https://www.emacswiki.org/emacs/OneOnOneEmacs
- 22 input methods
  - [[https://stackoverflow.com/a/10197062/6106936][input greek characters]]
- 23 Major and Minor Modes
  - https://www.reddit.com/r/emacs/comments/mqtwzx/creating_custom_minor_modes_learning_emacs_lisp_7/
  - [[https://www.gnu.org/software/emacs/manual/html_mono/forms.html#Forms-Example][forms mode]]
  - [[https://www.gnu.org/software/tramp/][Tramp mode]]
  - Minor Modes
    - Flyspell
      - [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Spelling.html][Flyspell]]
      - also [[https://www.emacswiki.org/emacs/FlySpell][see these]] which are added to init
      - https://www-sop.inria.fr/members/Manuel.Serrano/flyspell/flyspell.html
      - Commands
        | type       | function        | command |
        |------------+-----------------+---------|
        |            | suggest words   | M-$     |
        |            | add word        | i       |
        |            | check next word | M-s M-n |
        | minibuffer | add to dict     | i       |
    - next

    | type    | action            | command        |
    | frames  | new window        | C-x 5 2        |
    |         |                   |                |
    | windows | new below         | C-x 2          |
    |         | new side          | C-x 3          |
    |         | max current       | C-x 1          |
    |         |                   |                |
    | buffer  | list              | C-x C-b        |
    |         | switch            | C-x <l/r>      |
    |         | name switch       | C-x b          |
    | text    | increase/decrease | C-x C+/C-      |
    |         | color them        | M-x load-theme |
    |         |                   |                |
- 24.1 [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Indentation-Commands.html][Indentation Commands]]
- 25. Commands for human languages
  -
  - https://kitchingroup.cheme.cmu.edu/blog/2014/09/13/Make-some-org-sections-read-only/
  - 25.15 [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Text-Based-Tables.html#Text-Based-Tables][Editing Text-based Tables]]
    - https://stackoverflow.com/questions/22837229/how-to-compute-the-dot-product-of-two-column-think-full-column-as-a-vector
- 26
  - eldoc
    - https://www.gnu.org/software/emacs/manual/html_node/emacs/Lisp-Doc.html
    - - http://elpa.gnu.org/packages/eldoc.html
- 27 Compiling and Testing Programs
  - 27.6 Running Debuggers
    - Debugging
      - - https://www.reddit.com/r/emacs/comments/6uc7g5/just_figured_out_why_emacs_pauses_sometimes/
      - - M-x toggle-debug-on-error
      - https://www.reddit.com/r/emacs/comments/2dmv85/invalid_search_bound_wrong_side_of_point_whenever/
    - bactrace with (setq debug-on-error t)
  - 27.8 Libraries of Lisp Code for Emacs
    - variables
      - load-path
- 28
  - https://emacs.stackexchange.com/questions/293/what-should-shouldnt-i-do-when-keeping-emacs-and-emacs-d-in-version-control
- 29. Abbrevs
  - http://pragmaticemacs.com/emacs/use-abbreviations-to-expand-text/#:~:text=Emacs%20has%20the%20ability%20to,teh%E2%80%9D%20for%20%E2%80%9Cthe%E2%80%9D.
- 39. [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html][Using Emacs as a Server]]
- 40. Operating system interface
  - Batch Mode
    - https://www.google.com/search?q=emacs+batch+bash+variable+in+command

- 41. [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Sorting.html][to auto-sort a region]]
- 44 [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Saving-Emacs-Sessions.html][Saving Emacs Sessions]]
  - Don't! takes incredibly long to load
    #+begin_src emacs-lisp
  ;;(desktop-save-mode 1)
    #+end_src
***** General reference
:PROPERTIES:
:ID:       4cb5f373-3d0a-41fe-b2f4-5de8c835ab51
:END:
- https://github.com/MiniApollo/kickstart.emacs/blob/main/config.org#language-support--lsp
- https://www.reddit.com/r/emacs/comments/18frlq4/packages_that_you_would_like_to_be_in_emacs_core/
- https://www.reddit.com/r/emacs/comments/18ian37/my_modern_emacs_ui_setup/
- https://github.com/rougier
https://www.reddit.com/r/emacs/comments/1802hag/how_can_i_become_a_more_proficient_emacs_user_esp/
- https://rebeja.eu/posts/python-ide-with-emacs-and-docker/
- https://www.reddit.com/r/datascience/comments/13wkkdv/which_is_the_best_editor_for_python_in_your/jmcj7f1/
- Emacs from scratch
  - https://www.youtube.com/watch?app=desktop&time_continue=781&v=JkI-sdgpOoA&embeds_euri=https%3A%2F%2Fwww.reddit.com%2F&source_ve_path=MjM4NTE&feature=emb_title&ab_channel=lxsameer&themeRefresh=1
  -
- https://github.com/ahendriksen/ob-tmux
- https://www.reddit.com/r/emacs/comments/zxetet/i_made_a_chatgpt_client_for_emacs_and_so_can_you/
- skeletons
  ;;;;;;;;;;;;;;;;;
  ;;; SKELETONS ;;;
  ;;;;;;;;;;;;;;;;;

  (define-skeleton meeting-skeleton
    "meeting skeleton" nil
    \n >
    "date"
    \n >
    "recording"
    \n >
    "sox -d PATH/FILENAME.wav rate 5k"
    )

  (define-skeleton fuckwork-skeleton
    "Write a greeting"
    "Type nmae of user: "
    "hello, " str "!")
  (define-skeleton vote
        "Electoral motion results"
        nil
        > "|----------------+----------+--------------|" \n
        > "|Vote:           |For: "
        (setq v1 (skeleton-read "How many for? "))
        "    |Against: "
        (setq v2 (skeleton-read "How many against? "))
        "    |" \n
        > "|----------------+----------+--------------|" \n
        "|" (if (< (string-to-number v1)(string-to-number v2))
                "Not Carried                               |"
              "Carried                                    |")
        \n
        > "|------------------------------------------|" \n)

  (global-set-key (kbd "\C-c v") 'vote)
- General education
  - [[https://www.youtube.com/c/SystemCrafters/videos?app=desktop&view=0&sort=p&flow=list][system crafters youtube]]
  - - https://www.reddit.com/r/emacs/comments/ta6s74/steveys_tech_talk_e39_a_guided_tour_of_emacs/
- https://sheer.tj/the_way_of_emacs.html
- Miscellaneous
  - - https://www.reddit.com/r/emacs/comments/y0i0wz/shortdoc_is_fantasti/
  - - https://www.reddit.com/user/mickeyp/submitted/
  - - https://emacsconf.org/2021/all/
  - - https://www.reddit.com/r/emacs/comments/ucldkz/are_we_living_in_the_golden_age_of_emacs/
  - - https://www.reddit.com/r/emacs/comments/f2c99b/you_can_play_doom_inside_emacs_using_eaf/
  - - [[https://www.reddit.com/r/emacs/comments/60nb8b/favorite_builtin_emacs_commands/][reddit: favorite emacs command]]
- https://depp.brause.cc/shackle/
- Appearance- [[https://www.reddit.com/r/emacs/comments/8nzbvj/how_your_emacs_looks_like/][reddit: How your "emacs" looks like?]]
- [[https://www.reddit.com/r/emacs/comments/ba9j65/what_plugins_do_you_use_to_make_emacs_like_other/][What plugins do you use to make Emacs like other higher level editors? (VSCode, Sublime, etc)]]
- ;;https://superuser.com/questions/602510/how-to-insert-tab-character-in-text-mode
- name shell by starting with C-u M-x
- https://github.com/manateelazycat/aweshell/blob/master/README.md
- [[http://ergoemacs.org/emacs/emacs_shell_vs_terminal.html][Why Run Shell in Emacs?]]

- https://github.com/c02y/dotemacs.d/blob/81153dcce335b0d2ef4b2416eae6e1ca3c70cd76/init.el#L2955-L3098
- [X] generate local byte-compiled elisp
  - if VC makes a newer .el, .elc will load, but with warning to recompile
  - http://ergoemacs.org/emacs/emacs_byte_compile.html
- cite:monnier2020
- https://bofh.org.uk/2019/02/25/baking-with-emacs/
- https://github.com/sunnyhasija/DOOMEmacs

- https://karthinks.com/software/batteries-included-with-emacs/
- https://www.reddit.com/user/publicvoit/
- https://github.com/alphapapa/unpackaged.el
- https://dougie.io/emacs/indentation/
- Tutorials and Challenges
  - [[https://blog.markhepburn.com/2013/12/07/andrew-hyatts-emacs-calc-tutorials][Andrew Hyatt's emacs calc tutorials]]
  - [[https://vimeo.com/search/sort:latest?q=vimgolf+in+emacs][golf in emacs]]
  - http://cestlaz.github.io/stories/emacs/
  - https://sachachua.com/blog/2019/06/2019-06-10-emacs-news/
  - guides
    - https://www.reddit.com/r/emacs/comments/bbb42t/whats_your_job_whats_your_daily_emacs_workflow/
    - [-] tuhdo
      - [X] https://tuhdo.github.io/emacs-tutor.html
      - [ ] https://tuhdo.github.io/emacs-tutor2.html
    - http://emacslife.com/
    - http://emacsrocks.com/
    - [[http://emacs.stackexchange.com/questions?sort=votes][emacs stack exchange questions by vote]]
    - [[https://pawelbx.github.io/emacs-theme-gallery/][nice emacs theme gallary]]
    - cite:bingmann2015
    - not useful
      - [[http://david.rothlis.net/emacs/howtolearn.html][Rothlisberger How to Learn Emacs]]
- config/init file examples
  - https://shreyas.ragavan.co/docs/emacs-config/
  - https://github.com/jzohrab/emacs.d/blob/master/init.el#L31
  - https://emacs.christianbaeuerlein.com/#org7a4a164
  - https://www.reddit.com/r/emacs/comments/eewwyh/officially_introducing_memacs/
  - https://jmonlong.github.io/Hippocamplus/emacs/
  - https://github.com/0pendev/dotfiles/blob/master/emacs/config.org
  - [[https://github.com/xgarrido/emacs-starter-kit/blob/master/starter-kit.org][github: xgarrido emacs starter kit]]
- Emacs from Scratch
  -
  - https://www.reddit.com/r/emacs/comments/k5cqwb/emacs_ide_python_development_configuration_live/

https://kitchingroup.cheme.cmu.edu/blog/2017/04/07/Object-oriented-font-locking-in-emacs-lisp/
https://www.reddit.com/r/emacs/comments/pk5ad6/draw_and_scribble_in_gnu_emacs/
- https://www.google.com/search?q="emacs"+"shell"+tab+complete+slow+lag+freeze
- https://www.google.com/search?client=ubuntu&hs=MjH&sxsrf=ALeKk00pCsDFnS4Sdtxwh9bZU8HhLT0sJw%3A1613614369863&ei=Ic0tYPqPLu-E9PwPkOC1iAc&q=emacs+remote+bash+completion+slow&oq=emacs+remote+bash+completion+slow&gs_lcp=Cgdnd3Mtd2l6EAMyBQghEKABOgcIABBHELADOgQIABBDOgUIABCRAjoICAAQsQMQgwE6BQgAELEDOgIIADoICC4QsQMQgwE6BQguELEDOggIABCxAxCRAjoHCAAQsQMQCjoGCAAQFhAeOggIABAWEAoQHjoFCCEQqwI6CAghEBYQHRAeOgcIIRAKEKABUPxUWIx-YPqAAWgBcAJ4AIABmQGIAcEUkgEEMjMuNpgBAKABAaoBB2d3cy13aXrIAQLAAQE&sclient=gws-wiz&ved=0ahUKEwi6pMH6rfLuAhVvAp0JHRBwDXEQ4dUDCA0&uact=5
- https://www.google.com/search?q=emacs+paste+without+line+breaks&oq=emacs+paste+without+line+breaks&aqs=chrome..69i57.9783j0j7&client=ubuntu&sourceid=chrome&ie=UTF-8
- https://stackoverflow.com/questions/14760567/emacs-auto-load-color-theme-by-time
- https://karl-voit.at/2020/01/01/appendorgheading/
- https://www.reddit.com/r/emacs/comments/gmsc2o/best_way_to_learn_enough_to_contribute_to_emacs/
- https://www.reddit.com/r/emacs/comments/gumld3/svg_rounded_box_experiment/
- https://emacs.stackexchange.com/questions/3105/how-to-use-an-external-program-as-the-default-way-to-open-pdfs-from-emacs
- http://ergoemacs.org/emacs/elisp_compact_empty_lines.html
https://github.com/politza/pdf-tools
- https://www.reddit.com/r/emacs/comments/ajwtcb/emacs_on_the_go/
- https://github.com/JAremko/docker-emacs
- [[http://ergoemacs.org/emacs/emacs_shell_vs_terminal.html][Why Run Shell in Emacs?]]
- [[https://www.emacswiki.org/emacs/TabCompletion][tab complete]]
- [ ] [[https://emacs.stackexchange.com/questions/14833/debugging-warning-reference-to-free-variable][stack:emacs: Debugging “Warning: Reference to free variable”]]
- https://github.com/Fuco1/smartparens
- [[https://github.com/emacs-evil/evil/blob/master/README.md][EVIL mode]]
- https://github.com/emacs-tw/awesome-emacs
- Ideas
  - Fix Warning (bytecomp): reference to free variable ‘oauth--token-data’ type warnings
  - Load org-mode buffers at startup
  - [[http://orgmode.org/worg/org-hacks.html][cool hacks]]
  - font lock mods for highlighting text
    - http://emacs.stackexchange.com/questions/5889/how-to-highlight-text-permanently-in-org-mode
    - http://emacs.stackexchange.com/questions/12814/extending-org-mode-with-more-markups
    - https://www.gnu.org/software/emacs/manual/html_node/emacs/Highlight-Interactively.html#Highlight-Interactively
    - http://stackoverflow.com/questions/3579895/whats-the-font-lock-mode-for-in-emacs
    - https://www.emacswiki.org/emacs/FontLockMode
    - http://emacs.stackexchange.com/questions/9840/how-to-use-font-lock-to-highlight-end-of-line-comments
    - http://stackoverflow.com/questions/20016634/highlight-selected-text-in-emacs-org-mode
  - https://www.reddit.com/r/emacs/comments/5oo51r/wolframalpha_integration_with_emacs/
  - [[http://emacs.stackexchange.com/questions/28772/manage-same-init-file-for-linux-and-windows][same init for multiple platforms]]
- how to autoupdate packages?
- https://github.com/emacs-tw/awesome-emacs
- https://tuhdo.github.io/emacs-tutor3.html
****** init file examples
:PROPERTIES:
:ID:       bdec9869-38cf-4f00-aead-3fb0821c64a8
:END:
- https://github.com/Izder456/Emacs-Config
- https://randomgeekery.org/config/emacs/nano/
***** Development
:PROPERTIES:
:ID:       664ce557-00df-4121-ad62-99b0d7631509
:END:
***** Ideas
:PROPERTIES:
:ID:       ea022e58-f02d-4f37-831f-59bc0fb9957f
:END:
- custom send to shell functions https://emacs.stackexchange.com/questions/37887/send-region-to-shell-in-another-buffer
- libvterm https://github.com/akermu/emacs-libvterm
- isend mode
  - https://github.com/ffevotte/isend-mode.el/blob/master/isend-mode.el
  - https://stat.ethz.ch/pipermail/ess-help/2015-July/010628.html
  - https://github.com/ffevotte/isend-mode.el

****** Don't tangle Property drawers
:PROPERTIES:
:ID:       4fc29cfc-0064-47f5-99b1-e35e80fa246d
:END:
#+begin_src emacs-lisp
(defun suppress-file-are-same-warning (orig-fun &rest args)
  "Suppress warnings when `file-truename' identifies files as the same."
  (let ((warning-minimum-level :error))
    (apply orig-fun args)))

(advice-add 'file-truename :around #'suppress-file-are-same-warning)

#+end_src
#+begin_src emacs-lisp
(with-eval-after-load 'files
  (setq find-file-suppress-same-file-warnings t))

#+end_src
#+begin_src emacs-lisp
(setq text-scale-mode-step 1.01)

#+end_src
#+begin_src emacs-lisp
;;https://github.com/joaotavora/yasnippet/pull/789
(advice-remove 'yas--auto-fill-wrapper #'ignore)
#+end_src
*** Processes
:PROPERTIES:
:ID:       608c6f89-a4da-483c-bb4d-818c54a37675
:END:
**** 0 Flat
:PROPERTIES:
:ID:       c6aece45-b4fc-4f7b-9a0c-44e04962d5f4
:END:
- https://askubuntu.com/questions/1163761/how-to-flatten-comments-using-okular
- ocr
  - https://unix.stackexchange.com/questions/377359/how-to-use-ocr-from-the-command-line-in-linux
  - [[https://unix.stackexchange.com/questions/377359/how-to-use-ocr-from-the-command-line-in-linux][optical character recognition in linux]]
- https://www.omgubuntu.co.uk/2019/07/scrcpy-mirror-android-to-ubuntu-linux
- https://www.google.com/search?q=stack+exchange+webpage+annotation+highlight
- https://askubuntu.com/questions/651309/software-to-automatically-remove-background-from-images
- https://www.google.com/search?q=linux+convert+epub+to+pdf
- https://www.google.com/search?q=calibre+convert+epub+to+pdf
- devops
  - http://howardism.org/Technical/Emacs/literate-devops.html
***** Merge docx files with python
:PROPERTIES:
:ID:       dd2ef51d-5427-4f38-be5e-411d212cfeef
:END:
#+begin_src python
from docx import Document

def merge_docx(files, output):
    merged_document = Document()

    for file in files:
        sub_doc = Document(file)

        # Append paragraphs from sub_doc to merged_document
        for paragraph in sub_doc.paragraphs:
            merged_document.add_paragraph(paragraph.text)

        # Append tables from sub_doc to merged_document
        for table in sub_doc.tables:
            merged_table = merged_document.add_table(rows=0, cols=0)
            for row in table.rows:
                row_cells = [cell.text for cell in row.cells]
                merged_table.add_row().cells
                for i, cell in enumerate(merged_table.rows[-1].cells):
                    cell.text = row_cells[i]

        # Append a page break between documents (optional)
        merged_document.add_page_break()

    merged_document.save(output)

# List of DOCX files in the order you want to merge them

files = [
    '/tmp/semenkovich/individual-documents/K08_CoverLetter.docx',
    '/tmp/semenkovich/individual-documents/K08_SummaryAbstract.docx',
    '/tmp/semenkovich/individual-documents/K08_Narrative.docx',
    '/tmp/semenkovich/individual-documents/K08_FacilitiesAndResources.docx',
    '/tmp/semenkovich/individual-documents/K08_Equipment.docx',
    '/tmp/semenkovich/individual-documents/K08_AuthenticationOfReagents.docx',
    '/tmp/semenkovich/individual-documents/K08_BudgetJustification.docx',
    '/tmp/semenkovich/individual-documents/K08_CandidateInfo.docx',
    '/tmp/semenkovich/individual-documents/K08_InstitutionalEnvironment.docx',
    '/tmp/semenkovich/individual-documents/K08_HumanSubjects.docx',
    '/tmp/semenkovich/individual-documents/K08_InclusionAcrossLifespan.docx',
    '/tmp/semenkovich/individual-documents/K08_SpecificAims.docx',
    '/tmp/semenkovich/individual-documents/K08_ResearchStrategy.docx',
    '/tmp/semenkovich/individual-documents/K08_ResourceSharing.docx',
]


output = '/tmp/semenkovich.docx'

merge_docx(files, output)

#+end_src
***** LibreOffice Impress pptx to pdf - import to inkscape w/ internal import to modify text
:PROPERTIES:
:ID:       edd74cdb-7a47-4f86-b187-7fee932b5ba8
:END:
***** Convert pdf image to png
:PROPERTIES:
:ID:       ddc81c83-9003-4ae1-8586-ec64b9e9bc79
:END:
#+begin_src bash :tangle ./scripts/pdf_to_png.sh
#!/usr/bin/env bash

# /etc/ImageMagick-6/policy.xml policy change allows work with PDF
# allows file overwrite

print_usage(){
    cat <<- EOF

    usage: $0 <input-file.pdf>

    Converts a PDF to a PNG with a white background.

    example: $0 input.pdf

    Notes:
    - /etc/ImageMagick-6/policy.xml policy change allows work with PDF
    - allows file overwrite
    - works from /tmp
    - set to 600 dpi
EOF
}

# Check for input file
if [ -z "$1" ]; then
  print_usage
  exit 1
fi

# Input file
input_file="$1"

# Output file based on input file
output_file=$(echo "$input_file" | sed 's/\.pdf$/.png/')

convert -density 600 -background white -flatten "$input_file" "$output_file"

echo "Conversion complete. Output saved to $output_file"

#+end_src

***** Convert pdf image to svg
:PROPERTIES:
:ID:       4bf9492b-1b57-420c-be60-a97b1f0cea79
:END:
#+begin_src bash :tangle ./scripts/pdf_to_png.sh
#!/usr/bin/env bash

# /etc/ImageMagick-6/policy.xml policy change allows work with PDF
# allows file overwrite

print_usage(){
    cat <<- EOF

    usage: $0 <input-file.pdf>

    Converts a PDF to a PNG with a white background.

    example: $0 input.pdf

    Notes:
    - /etc/ImageMagick-6/policy.xml policy change allows work with PDF
    - allows file overwrite
    - works from /tmp
    - set to 600 dpi
EOF
}

# Check for input file
if [ -z "$1" ]; then
  print_usage
  exit 1
fi

# Input file
input_file="$1"

# Output file based on input file
output_file=$(echo "$input_file" | sed 's/\.pdf$/.png/')

convert -density 600 -background white -flatten "$input_file" "$output_file"

echo "Conversion complete. Output saved to $output_file"

#+end_src

**** Web annotations
:PROPERTIES:
:ID:       4efbcfb7-76e0-42bd-86a8-e16e6dad618f
:END:
- https://webanno.github.io/webanno/
**** Downloading
:PROPERTIES:
:ID:       2f57b68f-2a45-4a76-89dc-c14b793f49a2
:END:
https://github.com/axel-download-accelerator/axel
**** PDF file processes
:PROPERTIES:
:ID:       670ed8f4-bb93-4d93-b9ea-a142a599169f
:END:
- Open to page via orgmode link, e.g. - [[cite:&ottolenghi2012jerusalem]]  [[shell:nohup okular --page 136 ~/library/ottolenghi2012jerusalem.pdf > /dev/null 2>&1 & disown][page 136]]
- https://askubuntu.com/questions/1163761/how-to-flatten-comments-using-okular
- merge
  - e.g. pdftk file1.pdf file2.pdf cat output merged.pdf
  - https://askubuntu.com/questions/2799/how-to-merge-several-pdf-files
- https://www.google.com/search?q=ubuntu+pdf+rotate+page
- Pages
  - Delete
    - https://www.google.com/search?q=linux+pdf+delete+page
  - merge
    - pdf files with pdftk file1.pdf file2.pdf cat output mergedfile.pdf
    - https://www.google.com/search?q=pdftk+merge
  - Select pages
    - https://www.google.com/search?q=ubuntu+command+line+select+pages+from+pdf&oq=ubuntu+command+line+select+pages+from+pdf&aqs=chrome..69i57.7826j0j1&sourceid=chrome&ie=UTF-8
- annotate
  - okular
  - https://www.google.com/search?q=linux+pdf+strip+annotation
- Convert
  - to png - https://askubuntu.com/questions/50170/how-to-convert-pdf-to-image
  - https://www.google.com/search?q=linux+convert+image+to+pdf
- https://askubuntu.com/questions/113544/how-can-i-reduce-the-file-size-of-a-scanned-pdf-file
- Ideas
  - Extract annotations
    - https://www.google.com/search?q=linux+extract+pdf+annotations
- https://www.ilovepdf.com/
**** Miscellaneous
:PROPERTIES:
:ID:       88c4ae60-8bcc-4b1d-8347-2bbfbd112398
:END:
- - The secret to using DDG is to pre-fix your query (!g for Google, !b for Bing and there are tons of other ones too) when DDG doesn't come up with something useful. This way you can use DDG kind of as the Swiss army knife of search engines.
- https://unix.stackexchange.com/questions/359832/converting-csv-to-tsv
- convert epub to pdf with calibre https://askubuntu.com/questions/299747/converting-epub-files-to-pdf-format
**** Setups
:PROPERTIES:
:ID:       181dcf49-4df1-4155-9564-ff7c85b408b0
:END:
***** All repo setup
:PROPERTIES:
:ID:       c90aaf71-7311-48d8-98e8-221be4ebc290
:END:
#+begin_src bash :tangle ./src/all_repo_setup.sh
unset repoDIRs
repoDIRs=(data figures imgs method miscellaneous presentations pubs reports results testing tex)
for dir in "${repoDIRs[@]}"
do
    mkdir -p $repo/"$dir"
done
#+end_src
***** R basecamp setup
:PROPERTIES:
:ID:       a843f826-cdbc-4ca3-a30c-a7f2c30a9cbc
:END:
#+begin_src R
#
# Theme
theme_general <- function () {
  theme_cowplot(16) %+replace%
    theme()
}


#
select=dplyr::select
filter=dplyr::filter
group_by=dplyr::group_by
summarise=dplyr::summarise
#+end_src

#+name: basecamp_r_setup_wrapper
#+begin_src org :noweb yes
<<basecamp_r_setup>>
#+end_src

- Set environmental variables
  ,#+begin_src R :tangle ./src/setup.R
# Set environmental variables

#+end_src
- Check CRAN packages, install as needed

- Set environment variables
  #+begin_src R :tangle ./src/setup.R
#########1#########2#########3#########4#########5#########6#########7#########8
# Set variables
select=dplyr::select
filter=dplyr::filter
#+end_src
- install
  - https://unix.stackexchange.com/questions/149451/install-r-in-my-own-directory
- Data model functions
  ## Data checks
### Check primary key uniqeness
primeKeyUnique = function(df,pk){
  nrow(df)==length(unique(df[,pk]))
}


- https://www.google.com/search?q=R+check+hostname
- https://www.google.com/search?q=R+where+to+store+packages


***** Basecamp bash setup
:PROPERTIES:
:ID:       426130a8-cc03-49a7-a35d-6a5db4b485c3
:END:
#+name: basecamp_bash_setup_wrapper
#+begin_src bash :noweb yes
<<docker_interactive>>
<<docker_check>>
<<check_software_dependencies>>
<<symlink-by-csv-script>>
<<check_local_software>>
#+end_src
***** Basecamp Docker
:PROPERTIES:
:ID:       c9327fad-4f38-4bbe-8b2e-58ad589fbdf6
:END:
****** Write [[file:docker/basecamp_Dockerfile][basecamp Dockerfile]]
:PROPERTIES:
:ID:       79e01a67-5ba1-4257-8353-8c5cf1ac8c4a
:header-args:bash: :tangle ./docker/basecamp_Dockerfile
:header-args: :mkdirp yes
:header-args+: :comments no
:header-args:bash+: :tangle-mode (identity #o555)
:END:
https://github.com/eclarke/ggbeeswarm
******* Preamble and environmental variables
:PROPERTIES:
:ID:       5a57a19a-3262-43a9-b271-83feac659121
:END:
#+begin_src bash
FROM ubuntu:bionic

#######################################################
#######################################################
###   Dockerfile to build a basecamp docker image   ###
#######################################################
#######################################################


#################
###   Notes   ###
#################
#
# After build, the image will be pushed to the dockerhub as
# jeszyman/basecamp
# (https://hub.docker.com/repository/docker/jeszyman/basecamp)

ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=America/Chicago
#+end_src

******* Ubuntu advanced packaging tool (APT) installs
:PROPERTIES:
:ID:       a248c178-0cff-45a7-bae2-4567efa2b61b
:END:
#+begin_src bash

#################
###    APT    ###
#################

RUN apt-get update

RUN apt-get install -yq --no-install-recommends --allow-unauthenticated --fix-missing \
    build-essential \
    bzip2 \
    cifs.utils \
    cmake \
    dirmngr \
    emacs \
    gcc \
    git \
    gnupg \
    libcurl4-openssl-dev \
    libfftw3-dev \
    libgsl-dev \
    libssl1.0.0 \
    libssl-dev \
    libtbb-dev \
    libtbb2 \
    libxmu-dev \
    libxml2-dev \
    locales \
    nano \
    parallel \
    screen \
    software-properties-common \
    wget


RUN apt-get autoremove -y && \
    apt-get autoclean -y && \
    apt-get clean
#+end_src
******* Environmental variables
:PROPERTIES:
:ID:       1dc3a94d-aaf3-4a73-83ac-931c2cc38e70
:END:
#+begin_src bash
RUN apt-get update
RUN apt-get install -y locales locales-all
RUN echo "en_US.UTF-8 UTF-8" | tee -a /etc/locale.gen
RUN locale-gen en_US.UTF-8

ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US.UTF-8

RUN echo "LC_ALL=en_US.UTF-8" >> /etc/environment
RUN echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
RUN echo "LANG=en_US.UTF-8" > /etc/locale.conf


#+end_src
******* Conda
:PROPERTIES:
:ID:       02538446-027a-46d0-9b34-52c387471768
:END:
#+begin_src bash
#####################
###   Miniconda   ###
#####################
RUN cd /tmp && wget --no-check-certificate https://repo.anaconda.com/miniconda/Miniconda3-py39_4.12.0-Linux-x86_64.sh
RUN bash /tmp/Miniconda3-py39_4.12.0-Linux-x86_64.sh -b -p /opt/miniconda
ENV PATH="/opt/miniconda/bin:${PATH}"
RUN conda update conda

RUN conda install -n base -c conda-forge mamba
RUN conda install -c bioconda -c conda-forge snakemake


#+end_src
******* R v4 and CRAN Packages
:PROPERTIES:
:ID:       771bb617-f07b-4ba6-8092-c36f7d8ee02f
:END:
#+begin_src bash


#################################
###   R 4 and CRAN Packages   ###
#################################

RUN apt-get update -qq \
	&& apt-get install -qq --no-install-recommends \
        libcurl4-openssl-dev \
        libssl-dev


# import the signing key (by Michael Rutter) for these repo
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
# add the R 4.0 repo from CRAN -- adjust 'focal' to 'groovy' or 'bionic' as needed
RUN add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"
#
RUN apt-get install -qq --no-install-recommends r-base r-base-dev

ENV PATH="/usr/bin:${PATH}"
RUN echo 'local({r <- getOption("repos"); r["CRAN"] <- "http://cran.r-project.org"; options(repos=r)})' > ~/.Rprofile

# R CRAN Installs
RUN R -e "install.packages(c('caret', \
                             'circularize', \
                             'ComplexUpset', \
                             'cowplot', \
                             'cutpointr', \
                             'data.table', \
                             'devtools', \
                             'elrm', \
                             'FSA', \
                             'ggplot2', \
                             'ggpval', \
                             'ggpubr', \
                             'ggsci', \
                             'ggvenn', \
                             'ggrepel', \
                             'ggsignif', \
                             'git2r', \
                             'grid', \
                             'gridExtra', \
                             'hexbin', \
                             'Hmisc', \
                             'kableExtra', \
                             'naniar', \
                             'optparse', \
                             'pheatmap', \
                             'plyr', \
                             'RColorBrewer', \
                             'rlang', \
                             'rstatix', \
                             'scales', \
                             'statmod', \
                             'stringr', \
                             'tidyverse', \
                             'UpSetR', \
                             'viridis'), \
                             repos='http://cran.rstudio.com/')"

RUN apt-get update -qq \
	&& apt-get install -qq --no-install-recommends \
        libxml2-dev

RUN R -e "install.packages('tidyverse',repos='http://cran.rstudio.com/')"
#+end_src
******* HOLD
:PROPERTIES:
:header-args:bash: :tangle no
:ID:       50f1686f-f503-43eb-adcf-4ca00080b239
:END:

****** Development
:PROPERTIES:
:header-args: :tangle no
:ID:       17a363ee-9e4d-4505-a28e-d66cde6c97e6
:END:
******* Ideas
:PROPERTIES:
:ID:       3fa45337-ad40-4d1d-8629-fbac6ffcb5d9
:END:
****** Build docker container
:PROPERTIES:
:ID:       32236b08-3aa2-45ed-87d1-2ee820701de5
:END:
#+begin_src bash :tangle no
buildDIR=~/repos/basecamp
user=jeszyman
repo=basecamp
#########1#########2#########3#########4#########5#########6#########7#########8
cd "$buildDIR"
docker build \
       --file Dockerfile \
       --no-cache \
       --pull \
       --tag "${user}/${repo}" .

docker push "${user}/${repo}"


#########1#########2#########3#########4#########5#########6#########7#########8

cd ~/repos/basecamp/docker
ls
docker build . --file basecamp_Dockerfile --tag jeszyman/basecamp
docker push jeszyman/basecamp
#+end_src
****** run docker interactively
:PROPERTIES:
:ID:       cff4499e-b420-4ae7-8a30-cbe04013db60
:END:
  #+name: docker_interactive
  #+begin_src bash :tangle ./src/functions.sh
docker_interactive() {
    if [ -f /.dockerenv ]; then
        echo "shell already in docker, exiting"
        exit 1
    else
        account="USER INPUT"
        container="USER INPUT"
        read -p "docker account name: " account
        account="${account:=jeszyman}"
        read -p "container name: " container
        container="${container:=biotools}"
        case $HOSTNAME in
            (radonc-cancerbio) docker run -it \
                                      --env HOME=${HOME} \
                                      --hostname ${HOSTNAME} \
                                      --user $(id -u ${USER}) \
                                      --volume /home/:/home/ \
                                      --volume /mnt/:/mnt/ \
                                      --volume /tmp/:/tmp/ \
                                      $account/$container \
                                      /bin/bash;;
            (acl*) docker run -it \
                          --env HOME=${HOME} \
                          --hostname ${HOSTNAME} \
                          -v /drive3/:/drive3/ \
                          -v /duo4/:/duo4/ \
                          -v /home/:/home/ \
                          -v /tmp/:/tmp/ \
                          -u $(id -u ${USER}) \
                          $account/$container \
                          /bin/bash;;
            (ACL*) docker run -it \
                          --env HOME=${HOME} \
                          --hostname ${HOSTNAME} \
                          -v /home/:/home/ \
                          -v /duo4/:/duo4/ \
                          -u $(id -u ${USER}):$(id -g ${USER}) \
                          $account/$container \
                          /bin/bash;;
            (virtual-workstation*.gsc.wustl.edu) bsub -Is -q docker-interactive -a 'docker($account/'"$container"')' /bin/bash;;
            (*) docker run -it \
                       --env HOME=/home/${USER} \
                       --hostname ${HOSTNAME} \
                       --user $(id -u ${USER}) \
                       --volume /home/:/home/ \
                       --volume /mnt/:/mnt/ \
                       --volume /tmp/:/tmp/ \
                       $account/$container \
                       /bin/bash;;
        esac
    fi
}
#+end_src
****** Reference
:PROPERTIES:
:ID:       e04ad9da-1aa6-4f66-9659-34e9c9634eae
:END:
  - [[file:~/repos/basecamp/Dockerfile]]
*** Licensing
:PROPERTIES:
:ID:       e3ea9633-1601-488a-b7f0-dad422747f70
:END:
  - https://creativecommons.org/licenses/by-sa/4.0/
  - GNU
    - General Public License
    - Free Documentation License

*** Networks and Interoperatbility
:PROPERTIES:
:ID:       3fe8d3cd-e9aa-466a-8293-7aaf487556f9
:END:
  - [[https://www.reddit.com/r/IWantToLearn/comments/7s7q32/computer_networking/][reddit: computer networking]]

**** Application programming interface (API)
:PROPERTIES:
:ID:       67e75118-ae4d-4c95-abc0-537f75ad6799
:END:
- APIs
  - https://www.reddit.com/r/programming/comments/5zbzpu/windows_hacks_creative_and_unusual_things_that/
  - <<<Application programming interface>>> (API)
    - <<<Representational state transfer>>> (REST or <<<RESTful>>>) API
      - - http://www.restapitutorial.com/
      - Rest api conmect r
      - 6 Constraints (RESTful d/n follow all)
        - Uniform Interface
        - Stateless
        - Cacheable
        - Client-Server
        - Layered System
        - Code on Demand (optional)
*** security
:PROPERTIES:
:ID:       bba17542-9c34-43d2-99f6-073d3e9b76d8
:END:
- [[https://www.reddit.com/r/LifeProTips/comments/7vf4ne/lpt_if_you_tell_a_website_to_recover_your/dtrwlkb/][reddit unencrypted password discussion]]

*** standards
:PROPERTIES:
:ID:       7db1f632-6aa9-45ac-b499-0ed4e398618f
:END:
- file formats
  - csv
    - https://github.com/secretGeek/awesomecsv
  - csv
    - https://datatracker.ietf.org/doc/html/rfc4180
  - Image files
    - Raster
      - PNG- raster, compressible
- Character encoding
  - ASCII- 1 bit
  - Unicode- 2 bits
*** Web development
:PROPERTIES:
:ID:       3A02CE83-279F-4D28-A56E-A8AF1094B77B
:END:
- https://www.nytimes.com/interactive/2023/10/23/upshot/sat-inequality.html
https://www.freecodecamp.org/news/create-a-simple-website-with-html-css-javascript/
- https://jsfiddle.net/zgk6jywb/
https://www.freecodecamp.org/news/learn-html-and-css-order-summary-component/
https://www.reddit.com/r/webdev/comments/r98r95/been_working_for_2_years_on_plasmic_a_visual/
https://www.freecodecamp.org/news/learn-html-beginners-course/
https://www.reddit.com/r/webdev/comments/r98r95/been_working_for_2_years_on_plasmic_a_visual/
https://www.freecodecamp.org/news/creating-apis-with-python-free-19-hour-course/
https://old.reddit.com/r/webdev/comments/pjfs7r/any_cheap_hosts/
https://docs.aws.amazon.com/efs/latest/ug/wt2-apache-web-server.html#wt2-apache-web-server-one-ec2-host

https://www.freecodecamp.org/news/react-and-googlesheets/
- Web scraping
  - [[https://github.com/YaboLee/reddit_crawler][reddit crawler]]
  - https://medium.com/towards-data-science/using-scrapy-to-build-your-own-dataset-64ea2d7d4673



https://www.freecodecamp.org/news/learn-how-to-use-the-chrome-devtools-to-troubleshoot-websites/
https://anvil.works/
https://merearchive.com/en?utm_source=reddit&utm_medium=post&utm_campaign=20210130-c
https://www.youtube.com/watch?v=aoQ6S1a32j8&ab_channel=freeCodeCamp.org
https://www.freecodecamp.org/news/the-ultimate-webhooks-course-for-beginners/
https://html5up.net/
http://kb1995-portfolio.surge.sh/#/
http://www.r2d3.us/visual-intro-to-machine-learning-part-2/
https://algorithms-tour.stitchfix.com/
https://github.com/Leniolabs/layoutit-grid
n- https://github.com/Microsoft/frontend-bootcamp
- [[https://www.w3.org/standards/semanticweb/][Semantic web]]
  - vocabulary: concepts and relationships (also referred to as “terms”) used to describe and represent an area of concern
  - ontology- no clear distinction from vocab, but terms with relationships
https://probmods.org/
https://www.reddit.com/r/learnjavascript/comments/hwf1m8/free_fullstack_htmlcssjs_nodeexpressmongodb_web/
https://roadmap.sh/
https://web.dev/text-fragments/#browser-compatibility
https://github.com/memetic-institute
https://www.maxlaumeister.com/pagecrypt/
https://google.github.io/styleguide/htmlcssguide.html
https://google.github.io/styleguide/jsguide.html
https://github.com/bradtraversy/design-resources-for-developers
https://vuejs.org/v2/guide/
https://github.com/ahansrisuk/pocket-value/tree/master/src/components
https://www.sitepoint.com/quick-tip-persist-checkbox-checked-state-after-page-reload/
https://www.jqueryscript.net/demo/jQuery-Plugin-To-Persist-Checkbox-State-Using-Local-Storage/
https://stackoverflow.com/questions/38138307/is-it-possible-to-host-interactive-r-markdown-files-on-github-pages
https://www.w3schools.com/howto/howto_js_todolist.asp
https://www.reddit.com/r/statistics/comments/g57z7t/e_interactive_post_illustrating_maximum/
https://via.hypothes.is/https://stackoverflow.com/questions/31655085/database-on-a-personal-github-page#31655819
https://github.com/matteobrusa/Password-protection-for-static-pages
https://www.reddit.com/r/programming/comments/futozl/university_of_helsinki_offers_a_world_class/
https://pudding.cool/2017/05/song-repetition/?fbclid=IwAR0BAUJ_L_BXM_QWG0iF2P-fSuHPfkIgCPT_HZa8nXzEHoUBIi6LNOS1FUM
https://pudding.cool/2017/05/song-repetition/?fbclid=IwAR0BAUJ_L_BXM_QWG0iF2P-fSuHPfkIgCPT_HZa8nXzEHoUBIi6LNOS1FUM
https://designsystem.digital.gov/
https://www.reddit.com/r/webdev/comments/d9vgsn/what_are_the_best_engineered_websitesweb_apps/
http://185.204.216.136:8000/login
https://tools.wmflabs.org/pageviews/?project=en.wikipedia.org&platform=all-access&agent=user&start=2017-05-31&end=2019-08-29&pages=Cat|Dog
https://fullstackopen.com/en/
https://hackernoon.com/the-2019-web-developer-roadmap-ab89ac3c380e
https://www.reddit.com/r/webdev/comments/cge238/i_compiled_a_list_of_the_all_the_web_devdesign/
https://www.figma.com/
https://fullstackopen.com/en/
https://developers.google.com/web/tools/lighthouse/
https://www.reddit.com/r/webdev/comments/bra3ni/what_is_the_thinking_process_to_start_designing/
https://utkuufuk.com/2019/05/12/fullstack-roadmap/
https://websitesetup.org/html5-periodical-table/
https://stripe.com/blog/connect-front-end-experience
https://codepen.io/ivorjetski/pen/xMJoYO
https://www.reddit.com/r/webdev/comments/apiqdg/a_nodejs_crash_course_in_90_minutes/
https://www.google.com/search?q=javascript+diagram&oq=Javascript+dia&aqs=chrome.2.69i57j0l3.12055j1j7&sourceid=chrome-mobile&ie=UTF-8
- tampermonkey
  - https://www.jeffersonscher.com/gm/google-hit-hider/
- web tools and code
  - https://codepen.io/chriscoyier/project/editor/ZepgLg
  - [[https://www.w3schools.com/html/html5_intro.asp][w3 schools html5]]v
- https://www.reddit.com/r/webdev/comments/a92hbv/last_october_i_knew_nothing_not_even_html_my_life/
- [[https://sites.wustl.edu/jeszyman/wp-admin/][my washu site]]
  - https://sites.wustl.edu/get-started/
  - [[https://sites.wustl.edu/jeszyman/][front]]
  - [[https://sites.wustl.edu/jeszyman/wp-admin/][back]]
- Web development
  - - https://developers.google.com/apps-script/overview
  - Javascript
    - https://devdocs.io/dom/
    - javascript
      - https://github.com/30-seconds/30-seconds-of-code
  - tampermonkey
    - [[https://greasyfork.org/en][Greasy Fork]]
    - http://commons.oreilly.com/wiki/index.php/Greasemonkey_Hacks/Getting_Started#Add_or_Remove_Content_on_a_Page
    - http://nulleffort.com/getting-started-with-tampermonkey/
    - https://medium.freecodecamp.org/applying-javascript-user-scripts-2e505643644d
    - https://codepen.io/rjstone/post/write-a-user-script-with-tampermonkey
    - https://hibbard.eu/tampermonkey-tutorial/
  - html
  - css
- CSS
  - https://codepen.io/ivorjetski/pen/xMJoYO
***** Web Development
:PROPERTIES:
:ID:       11FA43AD-19D9-42D3-B3DF-72ABC3594D73
:END:

  - http://downtothewire.io/ghpages-ghcomments/about/
  - https://developer.mozilla.org/en-US/
  - https://rhiever.github.io/name-age-calculator/index.html?Gender=M&Name=Jeffrey

  - https://www.reddit.com/r/webdev/comments/9ge8zr/the_basic_architecture_concepts_i_wish_i_knew/

  - [[https://www.reddit.com/r/webdev/comments/9h4zy1/what_are_the_best_courses_that_are_projects/][reddit: webdev: what are the best courses that are projects]]
  - [[https://www.reddit.com/r/webdev/comments/9lhx23/how_do_developers_get_such_amazing_background/][reddit: how do developers get such amazing backgrounds?]]
  - [[https://www.reddit.com/r/webdev/comments/7kw7oo/what_are_the_best_web_dev_youtube_channels_and/#ampf=undefined][reddit: What are the "best" web dev youtube channels and books?]]
  - github pages
    -   - https://github.com/toperkin/staticFormEmails/blob/master/README.md

****** Javascript                                                    :career:
:PROPERTIES:
:ID:       76047F17-44EE-4A0B-97F1-93AEE6F49EB2
:END:
:LOGBOOK:
CLOCK: [2020-06-14 Sun 19:38]--[2020-06-14 Sun 20:15] =>  0:37
CLOCK: [2020-06-14 Sun 18:38]--[2020-06-14 Sun 18:58] =>  0:20
:END:
https://github.com/luism6n/finances-app
https://www.reddit.com/r/learnjavascript/comments/twdemi/best_videobased_course_to_learn_javascript_both/
https://www.theodinproject.com/paths/full-stack-javascript/courses/javascript
https://www.freecodecamp.org/news/full-javascript-course-for-beginners/
https://www.freecodecamp.org/news/functional-programming-in-javascript-for-beginners/
https://emacs-lsp.github.io/lsp-mode/tutorials/reactjs-tutorial/
- https://github.com/morris/vanilla-todo
- https://old.reddit.com/r/learnjavascript/comments/ilvh4u/html_css_javascript_slider_tutorial_step_by_step/
- https://www.reddit.com/r/learnjavascript/comments/i6ic2m/learning_to_think_in_react_by_building_a_shopping/
- https://javascript.info/
- https://observablehq.com/@erikbrinkman/d3-dag-sugiyama-with-arrows
- https://www.jbpm.org/learn/gettingStarted.html
- https://vuejs.org/v2/guide/
  - https://github.com/ahansrisuk/pocket-value
- https://taski.app/
- https://www.reddit.com/r/javascript/comments/hev6rk/fullstack_javascript_microservice_web_app_in/
- [[https://www.youtube.com/watch?v=vEROU2XtPR8&app=desktop][traversy: javascript bashs for beginners]]
  - node.js is how javascript runs server side
  - placement
    - main.js is preferable
    - put javascript at bottom of html body
  - traversy ide setup
    - vs.code and chrome with dev tools consol log as the output window and console.log(<VARIABLE>)
    - vscode saves auto-reload browser
  - variable
    - setters
      - use const (block level scope) unless local scope, the use let, avoid var
    - types
      - primatives (directly assigned to memory)
        - strings (single quotes)
        - nubmers
        - boolean
        - null
        - undefined
        - symbol
  -
- https://www.typescriptlang.org/
- https://www.w3schools.com/Js/
- https://stackoverflow.com/questions/27065192/how-do-i-protect-a-directory-within-github-pages#46522434
- https://www.codecademy.com/learn/introduction-to-javascript?coursePageWithSignup=true

******* code.js
:PROPERTIES:
:ID:       5c2e54cf-797e-4ccb-b12e-2167d06ce7a4
:END:
#+name: code.js
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/code.js
# -*- mode: snippet -*-
# key: code.js
# expand-env: ((yas-indent-line 'none))
# condition: 'auto
# --
,#+begin_src javascript
$0
,#+end_src
#+end_src


****** HTML
:PROPERTIES:
:ID:       53B361B3-11C8-45C7-9C7F-B9D4539F4982
:END:
https://www.w3schools.com/TAGS/tryit.asp?filename=tryhtml_td
  - https://www.youtube.com/watch?v=UB1O30fR-EE&app=desktop
https://www.codecademy.com/courses/web-beginner-en-HZA3b/0/1?curriculum_id=50579fb998b470000202dc8b

****** CSS
:PROPERTIES:
:ID:       1B7FE5C7-8E08-499B-A742-D916138193EF
:END:
https://www.freecodecamp.org/news/learn-css-in-11-hours/
- https://www.freecodecamp.org/news/how-to-create-and-implement-a-design-system-with-css/
  - https://css-tricks.com/building-a-jekyll-site-part-3-of-3/
  - [[https://www.youtube.com/watch?v=yfoY53QXEnI][Traversy CSS Crash Course For Absolute Beginners]]

**** Jekyll
:PROPERTIES:
:ID:       5D6DDCDA-1DD4-4600-96F9-98D9F34929E8
:END:

https://programminghistorian.org/en/lessons/building-static-sites-with-jekyll-github-pages#tweaking-the-settings-
https://mmistakes.github.io/jekyll-theme-basically-basic/recipes/chocolate-chip-cookies/
  - https://css-tricks.com/building-a-jekyll-site-part-3-of-3/
  - [[file:~/data/library/compend.org::*Jekyll][Jekyll]]
    - https://jekyllrb.com/docs/github-pages/
    - https://learn.cloudcannon.com/jekyll-cheat-sheet/
- https://github.com/daviddarnes/alembic
- https://stackoverflow.com/questions/25151736/jekyll-2-2-0-error-address-already-in-use-bind2
- https://chowdown.io/ / https://github.com/clarklab/chowdown
- https://github.com/CloudCannon/treat-jekyll-template
- https://learn.cloudcannon.com/jekyll-cheat-sheet/
- https://orgmode.org/worg/org-tutorials/org-jekyll.html
- https://orgmode.org/worg/org-tutorials/org-jekyll.html
- https://stackoverflow.com/questions/40197197/jekyll-how-to-display-and-image-in-a-post
- https://talk.jekyllrb.com/
- https://www.dominicsayers.com/recipe_markup/
- start local server
  -

*** Computer programming and programming languages                   :career:
:PROPERTIES:
:ID:       CBD1C9BA-44CB-4510-8ACD-F12CEF7E3402
:END:
https://www.reddit.com/r/programming/comments/1eo2lo5/uncle_bob_martin_i_am_in_the_midst_of_writing_the/
**** Style Guide
:PROPERTIES:
:ID:       593672e1-82b2-44e0-aa00-d28825860706
:END:
- See [[id:8ddb3ced-a572-43cd-82d9-69fe449fe320][Bioinformatics style guide]]
- Spaces in directory names are hyphens. Spaces in file names are underscores. /E.g./ /the-directory/the_file.txt
- Langugage-specific conventions
  - Python
    - Use 'single' quotes for strings. Only use "double quotes" to avoid escapes within a string, /e.g./ when strings contain
  - R
    - Use "double quotes" rather than 'single quotes' for strings. See https://stackoverflow.com/questions/20572436/are-double-and-single-quotes-always-interchangeable-in-r
    - See [[id:419ba6f0-4977-4eed-9d25-93a45933ad56][R references for best practices and style]]
**** Programming languages
:PROPERTIES:
:ID:       b9145567-7654-45d7-abb9-4418d3f12b90
:END:
- domain-specific
  - SQL
- https://www.reddit.com/r/bioinformatics/comments/qpuhn5/which_programming_languages_should_i_learn/hjx3ocg/
https://www.freecodecamp.org/news/rust-in-replit/
***** [[https://en.wikipedia.org/wiki/MUMPS][MUMPS]]
:PROPERTIES:
:ID:       d182a7b4-101a-4184-bfed-9af5c08d1890
:END:
  - https://en.wikipedia.org/wiki/GT.M
***** AppScript
:PROPERTIES:
:ID:       2db380e2-d2ee-4e7e-bcf1-1936aa16135b
:END:
  - https://developers.google.com/apps-script/articles/helpdesk_tutorial

***** Reference
:PROPERTIES:
:ID:       d0804b95-a481-43da-a8dd-3be54f45ba88
:END:
- [[https://github.com/mohd-akram/languages][Language graph using cytoscape]]
***** Matlab
:PROPERTIES:
:ID:       f8d76da7-3ddb-4e88-824c-87118e6f83c3
:END:
- [[http://proquest.safaribooksonline.com/9780124052123][Matlab by example]]
- [[https://www.mathworks.com/mwaccount/?status=success][matlab washu license]]
***** Scripting languages
:PROPERTIES:
:ID:       5b11a048-4ea6-44da-b05a-1f04d719493e
:END:
  - AutoHotKey
    - [[https://autohotkey.com/docs/AutoHotkey.htm][Documentation]]
    - [[https://autohotkey.com/boards/viewtopic.php?t=9806][AutoHotKey-like resources on UNIX-based]]
***** C-based
:PROPERTIES:
:ID:       29b72e69-dd5f-4cb6-8067-23b49fe0ed5f
:END:
- https://www.freecodecamp.org/news/learn-c-with-free-31-hour-course/
****** C++
:PROPERTIES:
:ID:       d3ca9115-002e-44ec-b1d9-8d01b92e6369
:END:
  - https://www.freecodecamp.org/news/learn-object-oriented-programming-oop-in-c-full-video-course/
  - http://www.seqan.de/
  - https://www.ncbi.nlm.nih.gov/IEB/ToolBox/CPP_DOC/
***** [[id:F9ACCF3D-896B-4FC4-92FD-31A2D6E977DD][R Statistical Computing]]
:PROPERTIES:
:ID:       1672D6B1-BCB8-428C-8AF1-013BC82A91AC
:END:

***** Python                                                         :career:
:PROPERTIES:
:ID:       CA21AAC9-F147-4086-A24C-64451EE349F3
:END:
- https://github.com/rougier
****** Processes                                                  :hierarchy:
:PROPERTIES:
:ID:       2d89162b-ce67-4846-9e58-5f6143f2fe05
:END:
******* 0 Flat                                                         :flat:
:PROPERTIES:
:ID:       44795652-aa62-46e7-b7ed-e9961feef83a
:END:
******** Convert docx to txt
:PROPERTIES:
:ID:       7b935cb6-0b89-42c4-a383-663b4f402671
:END:
- [[https://www.google.com/search?q=python+convert+docx+to+text][google:python convert docx to text]]

#+begin_src python
import docx
from collections import Counter


def extract_text_from_docx(file_path):
    doc = docx.Document(file_path)
    full_text = []
    for para in doc.paragraphs:
        full_text.append(para.text)
    return '\n'.join(full_text)

text = extract_text_from_docx('/tmp/test.docx')
print(text)

from collections import Counter

def most_common_word_pairs(text):
    # split the text into words
    words = text.split()
    # create a list of word pairs
    word_pairs = [(words[i], words[i+1]) for i in range(len(words) - 1)]
    # count the occurrences of each word pair
    word_pair_counts = Counter(word_pairs)
    # return the most common word pairs
    return word_pair_counts.most_common(n=100)

#text = "this is a sample text used to demonstrate the solution"
print(most_common_word_pairs(text))

#+end_src
******** Write function
:PROPERTIES:
:ID:       4a413630-f234-42b3-82db-f65d86b6d936
:END:
[[https://www.google.com/search?q=python+write+function][google:python write function]]
******** Install package
:PROPERTIES:
:ID:       51d36d0f-8601-41cf-b845-c21358757b80
:END:
- Install package
  - https://www.google.com/search?q=python+install+pandas
******* Probability and statistics
:PROPERTIES:
:ID:       bb7d034f-fa52-4032-bcb4-1aab08b3121d
:END:
https://allendowney.blogspot.com/2016/06/there-is-still-only-one-test.html?m=1
https://www.reddit.com/r/statistics/comments/12slcf6/d_ive_just_ordered_drunkards_walk_can_you/
- https://stackoverflow.blog/2021/02/23/level-up-mastering-statistics-with-python-part-2/?cb=1&_ga=2.59352485.940265309.1614263567-766544545.1565628865
******* Lead-time bias
:PROPERTIES:
:ID:       fc047a77-0b3e-4b7b-b535-5941e604f5af
:END:
- "lead time" analysis
  - "landmark KM"/ [[https://mail.google.com/mail/u/0/#inbox/FMfcgxwHMPmTRLxnwTQpJxwLvtMpsfst][time-depend-cox]] on resist
    #+begin_src R
  # sample data
  (subject_id=rep(LETTERS[1:5],10))
  start=runif(50,min=0,max=200)
  stop_delta=runif(50,min=1,max=40)
  stop=start+stop_delta
  ichor_class=c(1,0)
  ichor_tf=sample(ichor_class,50,replace=T)
  pd_class=c(1,0)
  pd=sample(pd_class,50,replace=T)
  resist=data.frame(subject_id,start,stop,ichor_tf,pd)
  resist=as_tibble(resist)
  resist
  #
  tdpendcox=coxph(formula = Surv(start,stop,pd)~ichor_tf,data=resist)
  surv_object=Surv(time = resist$stop, event = resist$pd)
  fit1=survfit(surv_object ~ ichor_tf, data=resist)
  ggsurvplot(fit1, data=resist, pval=T, ylab="Progression",xlab="Days")
  #+end_src
******* General
:PROPERTIES:
:ID:       854d1089-327d-41e6-9bf4-ad3b6e8c7340
:END:
- https://www.google.com/search?q=python+change+directories
- Get variable type https://www.google.com/search?q=python+get+variable+type type()
******* Working with text
:PROPERTIES:
:ID:       8cfc0331-510f-40db-986c-6d861a9c6ca5
:END:
- https://www.google.com/search?q=python+append+characters+to+each+in+list
  https://stackoverflow.com/questions/15738267/add-a-character-to-each-item-in-a-list
  #+begin_src python
suits = ["h","c", "d", "s"]
aces = ["a" + suit for suit in suits]
aces = [suit + "a" for suit in suits]
aces

#+end_src
******* Python dictionaries
:PROPERTIES:
:ID:       f20681eb-de70-4540-a9ba-63de0c800321
:END:
  #+begin_src snakemake
ALLLIB = []
for number in range(1,249):
    ALLLIB.append((str("lib"f"{number:03d}")))
ALLLIB.remove("lib115")
ALLLIB.remove("lib118")
ALLLIB.remove("lib200")
ALLLIB.remove("lib234")
ALLLIB.remove("lib240")
#+end_src
******* Data
:PROPERTIES:
:ID:       7f108d64-c86c-480f-befd-69015cde8a32
:END:
- https://www.google.com/search?q=python+filter+one+list+by+another+list
******* Working with shell
:PROPERTIES:
:ID:       5c7e5c00-2ea4-43fc-9ce1-3e1a72775f3d
:END:
- https://www.linuxjournal.com/content/python-scripts-replacement-bash-utility-scripts
******* Working with paths and system files
:PROPERTIES:
:ID:       0713d484-c3ca-4ecf-8820-9c65f8728191
:END:
https://fabienmaussion.info/scientific_programming/week_03/02-Strings-Paths.html
- working w/ file paths https://medium.com/@ageitgey/python-3-quick-tip-the-easy-way-to-deal-with-file-paths-on-windows-mac-and-linux-11a072b58d5f
- https://stackoverflow.com/questions/57459455/changing-the-name-of-multiple-files-based-on-an-index
- https://stackoverflow.com/questions/7152762/how-to-redirect-print-output-to-a-file
- https://www.btelligent.com/en/blog/best-practice-working-with-paths-in-python-part-1/
****** [[id:6d4098eb-b91f-46b5-84af-c39442c0c5c9][Basecamp python documentation]]
****** [[id:99c189db-c124-4f8e-923e-99dd2e67a4b8][Basecamp python conda environment]]
****** [[id:e7806712-9607-4b78-8662-80a2659c203d][Emacs - Python integration]]
:PROPERTIES:
:ID:       a650fe0b-5853-4984-8e16-fa5a7e7c8859
:END:
****** Local YAS
:PROPERTIES:
:ID:       83ab8d81-d8b9-4430-b639-2cbe92ec49b4
:END:
******* script                                                          :yas:
:PROPERTIES:
:ID:       8831a898-195c-4a85-804a-891cbad213fb
:END:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/python-mode/script
# -*- mode: snippet -*-
# key: script
# expand-env: ((yas-indent-line 'none))
# --
#!/usr/bin/env python3
"""
$1
"""

# ---   Load Packages   --- #
# ------------------------- #

import argparse

# ---   Load Inputs   --- #
# ----------------------- #

def load_inputs():
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument("--your_option", type=str, default="", help="Description of option")

    args = parser.parse_args()

    return args

# ---   Main   --- #
# ---------------- #

def main():

# ---   Functions   --- #
# --------------------- #

# ---   Main Guard   --- #
# ---------------------- #

if __name__ == "__main__":
    main()

#+end_src
******* function                                                        :yas:
:PROPERTIES:
:ID:       c3c12474-7191-4ef9-82cf-62e223311570
:END:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/python-mode/function
# -*- mode: snippet -*-
# key: function
# expand-env: ((yas-indent-line 'none))
# --

def ${1:FUNCTIONNAME$$(replace-regexp-in-string " " "_" yas-text)}(${2:PARAM$$(replace-regexp-in-string " " "_" yas-text)}):
    """
    ${3: <DOC STRING>}

    """
    $0
#+end_src

******* code.py
:PROPERTIES:
:ID:       4105e3bc-fd2b-48d8-b8bf-08955f707236
:END:
#+name: code.py
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/code.py
# -*- mode: snippet -*-
# key: code.py
# expand-env: ((yas-indent-line 'none))
# condition: 'auto
# --
,#+begin_src python
$0
,#+end_src
#+end_src
******* head1                                                           :yas:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/python-mode/head1
# -*- mode: snippet -*-
# key: head1
# expand-env: ((yas-indent-line 'none))
# --
${1:$(make-string (+ (string-width yas-text) 12) ?\#)}
###   ${1:$$(capitalize yas-text)}   ###
${1:$(make-string (+ (string-width yas-text) 12) ?\#)}
#+end_src

******* head2
:PROPERTIES:
:ID:       840a0b67-22c0-4937-a97e-8714cb935ad8
:END:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/python-mode/head2
# -*- mode: snippet -*-
# key: head2
# expand-env: ((yas-indent-line 'none))
# --
# ---   ${1:$$(capitalize yas-text)}   --- #
# ${1:$(make-string (+ (string-width yas-text) 12) ?\-)} #
$0
#+end_src
******* 80
:PROPERTIES:
:ID:       1afd02e0-8fdf-4899-adb6-106d83152829
:END:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/python-mode/80
# -*- mode: snippet -*-
# key: 80
# expand-env: ((yas-indent-line 'none))
# --
#########1#########2#########3#########4#########5#########6#########7#########8
$0
#+end_src

******* function.py                                                     :yas:
:PROPERTIES:
:ID:       2cae42c1-0610-4e22-a588-e405b699f8a1
:END:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/bash-mode/function.py
# -*- mode: snippet -*-
# key: function.py
# expand-env: ((yas-indent-line 'none))
# --
def ${1: <FUNCTION NAME>}(${2: <ARGUMENT 1>}):
    $0
#+end_src
****** Packages
:PROPERTIES:
:ID:       7facb855-05a8-4cc5-b61e-cc3112251524
:END:
- https://seaborn.pydata.org/generated/seaborn.barplot.html#seaborn.barplot
- https://www.reddit.com/r/datascience/comments/itzylb/the_numpy_paper_is_out_nature_open_access_paper/
- https://www.selenium.dev/
- https://www.reddit.com/r/datascience/comments/f6xk72/for_any_python_pandas_users_out_there_heres_a/
- packages
- package management
  - pip
  - conda
    - - https://stackoverflow.com/questions/51526503/why-does-base-appear-in-my-anaconda-command-prompt
    - "Conda is a packaging tool and installer that aims to do more than what pip does; handle library dependencies outside of the Python packages as well as the Python packages themselves. Conda also creates a virtual environment, like virtualenv does" https://stackoverflow.com/questions/20994716/what-is-the-difference-between-pip-and-conda
    - https://www.google.com/search?q=python+conda
- [[id:BFB941F1-990D-4328-9609-CF480DCF945B][NLTK]]
- matplotlib
  - https://github.com/io99/Resources
- Package installation and management
  - pip
    - [[https://pip.pypa.io/en/stable/][Documentation]]
    - pip freeze to see installed packages
- scikit for machine learning
  - http://scikit-learn.org/stable/index.html
  - https://www.kdnuggets.com/2019/02/introduction-scikit-learn-gold-standard-python-machine-learning.html
- sciPy
  - numPy
    - [[https://docs.scipy.org/doc/numpy-1.12.0/index.html][Manual]]
  - pandas
    - for dashborads https://github.com/JosPolfliet/pandas-profiling
- BioPython
  - https://github.com/peterjc/biopython_workshop
  - http://pythonforbiologists.com/index.php/introduction-to-python-for-biologists/
  - http://biopython.org/wiki/Main_Page
  - http://biopython.org/wiki/SeqIO
- [[https://github.com/pandas-dev/pandas/blob/master/doc/cheatsheet/Pandas_Cheat_Sheet.pdf][github: pandas cheatsheet]]
- installing packages/modules
  - pip install is preferred
- [[http://biopython.org/DIST/docs/tutorial/Tutorial.html][Biopython Tutorial]]
- [[http://www.androidxu.com/2017/04/python-pandas-tutorial-with-example.html][Beginners Pandas Getting Started]]
- https://github.com/JosPolfliet/pandas-profiling
- [[http://conference.scipy.org/proceedings/scipy2015/allen_downey.html][scipy2015 conference]]
- [[file:~/Box%20Sync/comp_bio/Huber,14%20Orchestrating%20high%20throughput%20genomic%20analysis%20with%20bioconductor.pdf][Huber,14 Orchestrating high throughput genomic analysis with bioconductor]]
- Get list of installed packages with pip freeze
- [[https://pypi.org/][Python Package Index]]
- https://github.com/mstamy2/PyPDF2
******* pytorch
:PROPERTIES:
:ID:       a11658ad-dbce-4915-bb22-f379b0fd800a
:END:
- https://www.freecodecamp.org/news/learn-pytorch-for-deep-learning-in-day/
******* pandas
:PROPERTIES:
:ID:       8aae8b78-33b0-41f3-a9ab-c9f277ae0233
:END:
******** Processes
:PROPERTIES:
:ID:       194e3fa8-53a5-4c08-a4e4-82b70477c91c
:END:
- https://www.google.com/search?q=pandas+re.sub+change+character+string+in+column
- https://www.google.com/search?q=pandas+filter+by+multiple+criteria
- https://www.google.com/search?q=pandas+export+tsv
- https://www.google.com/search?q=pandas+filter+column
- https://www.google.com/search?q=pandas+import+csv
- https://www.google.com/search?q=pandas+column+to+list
********                                                                :ref:
:PROPERTIES:
:ID:       0a79d306-781d-484e-91f4-4d9b01d2609f
:END:
- https://towardsdatascience.com/how-to-learn-pandas-108905ab4955
- [[https://github.com/pandas-profiling/pandas-profiling][pandas-profiling]]
******* [[http://www.nltk.org][NLTK]]
:PROPERTIES:
:CREATED:  [2019-02-19 Tue 11:02]
:ID:       BFB941F1-990D-4328-9609-CF480DCF945B
:END:

******** [[http://www.nltk.org/book/][NLTK Book]]
:PROPERTIES:
:CREATED:  [2019-02-19 Tue 11:03]
:ID:       CCF2B40B-47EE-4D26-9FC3-E1A0EC6F1974
:END:
:LOGBOOK:
CLOCK: [2019-02-19 Tue 11:31]--[2019-02-19 Tue 12:00] =>  1:33
CLOCK: [2019-02-19 Tue 11:04]--[2019-02-19 Tue 11:25] =>  0:21
:END:
1. Preface
  -
3. Language Processing and Python
4. Accessing Text Corpora and Lexical Resources
5. Processing Raw Text
6. Writing Structured Programs
7. Categorizing and Tagging Words (minor fixes still required)
8. Learning to Classify Text
9. Extracting Information from Text
10. Analyzing Sentence Structure
11. Building Feature Based Grammars
12. Analyzing the Meaning of Sentences (minor fixes still required)
13. Managing Linguistic Data (minor fixes still required)
14. Afterword: Facing the Language Challenge
****** Best practices and style
:PROPERTIES:
:ID:       dd9c7b11-7bb1-4a3d-8a40-b74ed0e2b55e
:END:
- See [[id:593672e1-82b2-44e0-aa00-d28825860706][My general programming style guide]]
****** General reference
:PROPERTIES:
:ID:       27cebc08-c8fd-4384-9fd4-6399d31a0652
:END:
- https://www.google.com/search?q=python+commenting+best+practices
- https://python-charts.com/
- https://www.reddit.com/r/bioinformatics/comments/y9vy90/good_resources_to_use_for_learning_bioinformatics/
- https://www.freecodecamp.org/news/20-beginner-python-projects/
- https://www.freecodecamp.org/news/python-programming-course/
- https://www.freecodecamp.org/news/intro-to-algorithms-with-python/
- https://www.freecodecamp.org/news/how-to-automate-things-using-python/
- Examples
  - Python notebook projects
    - https://github.com/norvig/pytudes/blob/main/ipynb/risk.ipynb
- https://www.reddit.com/r/bioinformatics/comments/n4i9f4/how_to_learn_python_from_scratch_for/
- Standards and best practices
  - [[https://www.python.org/dev/peps/pep-0008/][PEP 8]]
- https://www.freecodecamp.org/news/the-python-handbook/
- [[https://www.youtube.com/watch?v=GPVsHOlRBBI&ab_channel=freeCodeCamp.org][free code camp data analysis]]
******* tutorials, courses, learning resources, best practices
:PROPERTIES:
:ID:       f6377a77-334d-4084-82df-9c50bd605af9
:END:
- https://www.freecodecamp.org/news/django-for-everybody-learn-the-popular-python-framework-from-dr-chuck/

- https://www.freecodecamp.org/news/exploratory-data-analysis-with-numpy-pandas-matplotlib-seaborn/

- https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/
- [[https://www.edx.org/course/statistics-and-probability-in-data-science-using-python][edX stats with python]]
- Learning resources
  - [[https://www.reddit.com/r/datascience/comments/7u4c05/python_tools_that_everyone_should_know_about/][reddit: data science python tools that everyone should know about]]
  - Python books
    - cite:urban2016murachs
    - [[http://openbookproject.net/thinkcs/python/english3e/][How to think like a computer scientist]]
  - courses
    - [[http://bafflednerd.com/category/learn-analytics/][Baffled Nerd: Online python courses]]
    - [[https://www.udemy.com/the-python-mega-course/learn/v4/overview][Udemy python megacourse]]
  - [[https://www.datacamp.com/courses/network-analysis-in-python-part-1?utm_source=adwords_ppc&utm_campaignid=898687156&utm_adgroupid=48303643819&utm_device=c&utm_keyword=&utm_matchtype=b&utm_network=g&utm_adpostion=1t1&utm_creative=229335520231&utm_targetid=dsa-377762271983&utm_loc_interest_ms=&utm_loc_physical_ms=9060420&gclid=Cj0KCQiAl8rQBRDrARIsAEW_To9A6evIhhajnoTZrssSRA70JFF7i5pPvlMXV-ixMnrpXZQgRSuKAX0aAvp9EALw_wcB][DataCamp Network Analysis in Python (Part 1)]]
  - https://www.coursera.org/learn/python
  - http://www.pythonlearn.com/
- Rougier
  - [[https://www.labri.fr/perso/nrougier/from-python-to-numpy/][book- from python to numpy]] and associated [[https://github.com/rougier/from-python-to-numpy][github]]
  - [[http://www.labri.fr/perso/nrougier/teaching/matplotlib/matplotlib.html][matplotlib tutorial]]
- cite:sweigart2015
- [[https://www.python.org/dev/peps/pep-0008/][PEP 8 -- Style Guide for Python Code]]
- https://wiki.python.org/moin/BeginnersGuide/Programmers
- [[https://github.com/JulianGaal/python-cheat-sheet][github: python cheatsheet]]
- https://google.github.io/styleguide/pyguide.html
- https://realpython.com/podcasts/rpp/8/
- https://www.tutorialspoint.com/python/python_command_line_arguments.htm
- https://www.simple-is-better.org/template/pyratemp.html
- https://drive.google.com/drive/folders/0ByIrJAE4KMTtaGhRcXkxNHhmY2M
- https://www.simple-is-better.org/template/pyratemp.html
- https://en.m.wikipedia.org/wiki/Zen_of_Python
****** Interfaces, platforms, and IDEs
:PROPERTIES:
:ID:       7db4987d-0daa-4d58-8660-37fbe566d8be
:END:
- emacs
  #+begin_src emacs-lisp
(defun blacken-buffer ()
  "Formats the current Python buffer using Black."
  (interactive)
  (when (and (derived-mode-p 'python-mode)
             (executable-find "black"))
    (shell-command-on-region (point-min) (point-max) "black -q -" nil t)))

#+end_src
  #+begin_src emacs-lisp
(use-package highlight-indentation
  :ensure t
  :hook (python-mode . highlight-indentation-mode))
(use-package rainbow-delimiters
  :ensure t
  :hook (prog-mode . rainbow-delimiters-mode))

#+end_src
  - https://www.emacswiki.org/emacs/PythonProgrammingInEmacs
  - https://www.reddit.com/r/orgmode/comments/johcin/org_mode_org_roam_poetry_for_python_literate/
  - [[https://kozikow.com/2016/05/21/very-powerful-data-analysis-environment-org-mode-with-ob-ipython/][Very powerful data analysis environment – org mode with ob-ipython]]
  - python-emacs-orgmode ide
    - https://jonathanabennett.github.io/blog/2019/06/20/python-and-emacs-pt.-1/
    - https://github.com/gregsexton/ob-ipython
  - python/emacs/org-mode integration
    - elpy
      - https://elpy.readthedocs.io/en/latest/concepts.html
      - https://github.com/jorgenschaefer/elpy
    - kitchin
      - [[http://kitchingroup.cheme.cmu.edu/blog/2016/05/29/Expanding-orgmode-py-to-get-better-org-python-integration/][kitchin: Expanding orgmode.py to get better org-python integration]]
      - [[https://raw.githubusercontent.com/jkitchin/dft-book/master/dft.org][kitchin full org example]]
- jupyter
  - https://www.reddit.com/r/datascience/comments/b2gzo2/productivity_tips_for_jupyter_when_working_in/
  - jupyter lab
    - http://jupyterlab.readthedocs.io/en/stable/getting_started/starting.html
  - Jupyter
    - - http://beakernotebook.com/features
    - [[http://nbviewer.jupyter.org/github/JosPolfliet/pandas-profiling/blob/master/examples/meteorites.ipynb][jupyter pandas example]]
    - Command index
      | Function                    | Command         |
      |-----------------------------+-----------------|
      | Show function documentation | <SHIFT> + <TAB> |
      | Delete cell                 | dd              |
      | New cell below current      | b               |
      |                             |                 |
      - commands
        - run is <SHIFT> <ENTER>
        - run and inset new <ALT> <ENTER>
        - for stalls / while loops, do kernel -> interrupt/restart
        - move to previous arrow up
    - [[https://precision.heart.org/about_jupyter_notebooks][AHA Precision Jupyter notebooks]]
    - [[http://bobbywlindsey.com/dev/2017/08/10/remote-computing-with-jupyter-notebooks.html][Remote Computing with Jupyter Notebooks]]
    - [[https://jakevdp.github.io/blog/2017/03/03/reproducible-data-analysis-in-jupyter/][reproducible data analysis in jupyter]]
    - [[https://www.youtube.com/watch?v=T385txAYSt8][youtube: Jupyter: Notebooks in Multiple Languages for Data Science]]
    - https://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/
    - show function documentation with <SHIFT> + <TAB>
    - [ ] keyboard shortcut to show function documentation?
    - launch at terminal w/ jupyter notebook and paste URL, will launch into the directory terminal was in
    - http://jupyter.org/
    - https://datascientistworkbench.com/
    - https://medium.com/@kacawi/jupyter-notebook-tutorial-the-definitive-guide-660c7e651ecd#.igwzel9ai
    - [[https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-Notebooks][A gallery of interesting Jupyter Notebooks]]
  - https://github.com/lambdalisue/jupyter-vim-binding
- visual studio- https://code.visualstudio.com/docs/python/python-tutorial
******* [[id:79cc7fdf-5e4b-4d3a-ace2-60cae707f81b][LINK TO elpy]]
:PROPERTIES:
:ID:       b8f010c5-7968-4dcc-ad5c-6f288b343bdb
:END:
****** applications
:PROPERTIES:
:ID:       25602177-b0aa-4c5a-8a54-c74a872b7ef5
:END:
:LOGBOOK:
CLOCK: [2020-12-10 Thu 20:06]--[2020-12-11 Fri 07:51] => 11:45
:END:
- text parsing
  #+name:
  #+begin_src python :tangle no
import re
import pandas as pd
myfile = open("/home/jeszyman/repos/basecamp/Dockerfile")
contents = myfile.read()
print(contents)
rx_dict = {
	'school' : re.compile(r'School =  (.*)\n
#+end_src
  - http://biopython.org/DIST/docs/tutorial/Tutorial.pdf
- data visualization
  -
  - https://github.com/paulvangentcom/python_corona_simulation?files=1
  - https://towardsdatascience.com/how-to-use-ggplot2-in-python-74ab8adec129
  - https://www.reddit.com/r/dataisbeautiful/comments/js9gsu/oc_illustration_of_different_path_finding/
- data science
  - https://jakevdp.github.io/PythonDataScienceHandbook/
  - https://www.reddit.com/r/datascience/comments/i94fu6/r_for_data_science_python_equivalent/
  - https://jakevdp.github.io/PythonDataScienceHandbook/
- computational biology
  - https://pythonforbiologists.com/printing-and-manipulating-text/
  - http://biopython.org/DIST/docs/tutorial/Tutorial.html
- web tools
  - [[http://stackoverflow.com/questions/8335630/how-to-crawl-a-website-extract-data-into-database-with-python][stack: crawl a website with python]]
- science
  - [[https://www.youtube.com/watch?v=mLuIB8aW2KA][youtube: Python as Super Glue for the Modern Scientific Workflow]]
- miscellaneous
  - [[https://soundcloud.com/talkpython/104-game-theory-in-python][soundcloud: python for game theory]]
  - https://www.freecodecamp.org/news/python-for-system-administration-tutorial/
  - https://automatetheboringstuff.com/
- graph theory and trees
  - [[https://www.analyticsvidhya.com/blog/2016/04/complete-tutorial-tree-based-modeling-scratch-in-python/#one][A Complete Tutorial on Tree Based Modeling from Scratch (in R & Python)]]
- machine learning
  - - https://www.reddit.com/r/statistics/comments/bzrco1/introduction_to_statistical_learning_anything/
  - machine learning
    - [[https://iamtrask.github.io//2015/11/15/anyone-can-code-lstm/][github neural network]]
    - [[http://radimrehurek.com/data_science_python/][practical data science with python]]
    - [[http://www.dataschool.io/about/][Wash U- affiliated machine learning guy]]
    - [[https://github.com/Aelvangunduz/PyDataAnkara/blob/master/Intro%20to%20DS%20-%20R.ipynb][Data Science in Python]]
    - [[http://www.nltk.org][nltk]]
  - [[file:~/Box%20Sync/statistical_computing/Scanbot%20Sep%2024,%202016%2015.35.pdf][scikit-learn algorithm]]
    - http://swcarpentry.github.io/python-novice-inflammation/ -https://www.codecademy.com/learn/python/?utm_source=customerio&utm_campaign=back_to_school&utm_medium=email_newsletter&utm_content=button_python
  - https://www.analyticsvidhya.com/blog/2017/06/architecture-of-convolutional-neural-networks-simplified-demystified/
  - [[https://www.opendatascience.com/blog/2-supervised-learning-predicting-an-output-variable-from-high-dimensional-observations/][supervised learning with sciki-learn]]
- imaging
  - pathology- [[https://pypi.python.org/pypi/openslide-python][python interface with OpenSlide C library for whole slide imaging]]
- full use case examples
  - [[https://www.reddit.com/r/programming/comments/651fzh/wedding_at_scale_how_i_used_twilio_python_and/][reddit: Wedding at Scale: How I Used Twilio, Python and Google to Automate My Wedding]]
****** [[https://docs.python.org/3/][documentation]]
:PROPERTIES:
:ID:       5947bbe8-732f-4df3-82c0-19706ae44ada
:END:
  - functions
    - https://www.datacamp.com/community/tutorials/functions-python-tutorial
***** Lisp
:PROPERTIES:
:ID:       BF9D824A-02EF-4580-97A1-B887299AD461
:END:
https://www.reddit.com/r/emacs/comments/1hop56b/elisp_best_practices/
****** Processes
:PROPERTIES:
:ID:       64bf8adc-4e02-4c0a-b407-2fa458a07f33
:END:
******* 0 Flat
:PROPERTIES:
:ID:       f61ca67d-403a-4eda-8de0-12a414a8bba3
:END:
******** Open a vterm window
:PROPERTIES:
:ID:       9f26ec4d-88b8-4184-93c4-9385f3a65782
:END:

#+begin_src emacs-lisp :tangle ./lib/lisp_functions.el
(defun open-vterm-in-new-frame ()
  "Open a new vterm buffer in a new frame."
  (interactive)
  (let* ((current-prefix-arg '(4))  ; simulate pressing C-u
         (timestamp (format-time-string "%Y%m%d%H%M%S")) ; timestamp generated
         (buffer-name (concat "TEST-" timestamp)) ; buffer-name created
         (new-frame (make-frame))) ; create new frame
    (select-frame-set-input-focus new-frame) ; focus the new frame
    (call-interactively 'vterm)    ; execute M-x vterm
    ;; Rename the buffer.
    (rename-buffer buffer-name t)))  ; The t parameter forces the renaming even if a buffer named "TEST-<timestamp>" already exists.

#+end_src

******* Launch program
:PROPERTIES:
:ID:       305dcf2f-3103-41d3-9216-e7cb18bece49
:END:
#+begin_src emacs-lisp
(start-process "my-chrome-process" nil "google-chrome")
#+end_src
****** Local YAS
:PROPERTIES:
:ID:       c9377556-a350-466e-a2b1-a671ea984102
:header-args:bash: :padline no
:END:
- uses emacs-lisp-mode

#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/code.lisp
# -*- mode: snippet -*-
# key: #+begin_src emacs-lisp

#+end_src

# expand-env: ((yas-indent-line 'none))
# condition: 'auto
# --
,#+begin_src emacs-lisp
$0
,#+end_src
#+end_src



******* 80
:PROPERTIES:
:ID:       56dab545-4948-4a63-a3ad-fdfa49c1f3db
:END:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/emacs-lisp-mode/80
# -*- mode: snippet -*-
# key: 80
# expand-env: ((yas-indent-line 'none))
# --
;;;;;;;;;1;;;;;;;;;2;;;;;;;;;3;;;;;;;;;4;;;;;;;;;5;;;;;;;;;6;;;;;;;;;7;;;;;;;;;8

#+end_src

******* code.lisp                                                       :yas:
[[file:emacs/public_yasnippets/org-mode/code.lisp]]
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/code.lisp :padline no
# -*- mode: snippet; require-final-newline: nil; -*-
# key: code.lisp
# expand-env: ((yas-indent-line 'none))
# condition: 'auto
# --
,#+begin_src emacs-lisp
$1
,#+end_src$0
#+end_src
******* function                                                        :yas:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/emacs-lisp-mode/function
# -*- mode: snippet -*-
# key: function
# expand-env: ((yas-indent-line 'none))
# --
(defun ${1: <FUNCTION NAME>} (${2: <VARIABLE 1 NAME>})
  "${3: <DOC STRING>}

$2 ${4: <VARIABLE 1 DEFINITION>}

Example usage:
  ($1 ${5: <USAGE>})"

$0
#+end_src
******* head3
******* head2                                                           :yas:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/emacs-lisp-mode/head2
# -*- mode: snippet -*-
# key: head2
# expand-env: ((yas-indent-line 'none))
# --
; ---   ${1:$$(capitalize yas-text)}   --- ;
; ${1:$(make-string (+ (string-width yas-text) 12) ?\-)} ;
$0

#+end_src
******* head3                                                           :yas:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/emacs-lisp-mode/head3
# -*- mode: snippet -*-
# key: head3
# expand-env: ((yas-indent-line 'none))
# --
;; ---   ${1:$$(capitalize yas-text)}   --- ;;
;; ${1:$(make-string (+ (string-width yas-text) 12) ?\-)} ;;
$0

#+end_src
******* head4                                                           :yas:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/emacs-lisp-mode/head4
# -*- mode: snippet -*-
# key: head4
# expand-env: ((yas-indent-line 'none))
# --
;;; ---   ${1:$$(capitalize yas-text)}   --- ;;;
;;; ${1:$(make-string (+ (string-width yas-text) 12) ?\-)} ;;;
$0

#+end_src
******* head1                                                           :yas:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/emacs-lisp-mode/head1
# -*- mode: snippet -*-
# key: head1
# expand-env: ((yas-indent-line 'none))
# --
${1:$(make-string (+ (string-width yas-text) 12) ?\;)}
;;;   ${1:$$(capitalize yas-text)}   ;;;
${1:$(make-string (+ (string-width yas-text) 12) ?\;)}
#+end_src
****** Scripts
:PROPERTIES:
:ID:       320936bb-80a9-4636-9e51-6d65c6e8ce5c
:END:
- Lisp export function for master inputs table
  #+begin_src emacs-lisp :tangle ./src/org_master_input_tbl_export.el
(require 'org)

(defun my-tbl-export (name)
"Search for table named `NAME` and export."
(interactive "s")
(show-all)
(let ((case-fold-search t))
  (if (search-forward-regexp (concat "#\\+NAME: +" name) nil t)
  (progn
    (next-line)
    (org-table-export (format "data/%s_table.csv" name) "orgtbl-to-csv")))))
#+end_src
- Lisp export function
  #+begin_src emacs-lisp :tangle ./src/org_tbl_export.el
(require 'org)

(defun my-tbl-export (name)
"Search for table named `NAME` and export."
(interactive "s")
(show-all)
(let ((case-fold-search t))
  (if (search-forward-regexp (concat "#\\+NAME: +" name) nil t)
  (progn
    (next-line)
    (org-table-export (format "data/inputs/%s.csv" name) "orgtbl-to-csv")))))
#+end_src
- Bash non-interactive emacs function
  #+begin_src bash :tangle ./src/org_tbl_export.sh
source config/${HOSTNAME}.sh

org_tables=()
org_tables=("libraries"
            "participants")

for table in "${org_tables[@]}";
do
  /usr/bin/emacs-snapshot --batch "${repo}/mpnst.org" -l "${repo}/src/org_tbl_export.el" --eval '(my-tbl-export "'"$table"'")'
done

/usr/bin/emacs-snapshot --batch "${repo}/mpnst.org" -l "${repo}/src/org_master_input_tbl_export.el" --eval '(my-tbl-export "'"input"'")'

#+end_src
  locvars
- Lisp export functions
  #+begin_src emacs-lisp :tangle ./src/org_tbl_export.el
(require 'org)

(defun my-tbl-export ()
"Search for table named `NAME` and export."
(interactive "s")
(show-all)
  (if (search-forward-regexp (concat("#\\+name: .*_input$") nil t)
  (progn
    (next-line)
    (org-table-export (format "/tmp/%s.csv" name) "orgtbl-to-csv"))))
#+end_src
  #+begin_src emacs-lisp :tangle ./src/org_tbl_export.el
(require 'org)

(defun my-tbl-export (name)
"Search for table named `NAME` and export."
(interactive "s")
(show-all)
(let ((case-fold-search t))
  (if (search-forward-regexp ("#\\+NAME: .*_name$") nil t)
  (progn
    (let (name (replace-match
    (next-line)
    (org-table-export (format "/tmp/%s.csv" name) "orgtbl-to-csv")))))
#+end_src
  #+begin_src emacs-lisp :tangle ./src/org_input_tbl_export.el
(require 'org)

(defun my-tbl-export (name)
"Search for table named `NAME` and export."
(interactive "s")
(show-all)
(let ((case-fold-search t))
  (if (search-forward-regexp (concat "#\\+NAME: +" name) nil t)
  (progn
    (next-line)
    (org-table-export (format "data/%s_table.csv" name) "orgtbl-to-csv")))))
#+end_src
- Bash to make the csvs
  #+begin_src bash :session cardshell :tangle ./src/org_tbl_export.sh
org_tables=()
org_tables=("experiments"
          "cohorts"
          "subjects"
          "specimens"
          "isolates"
          "seq_runs"
          "libraries"
          "tarbase_targeting_gja1"
          "lit_targeting_gja1"
          "mirdb_targeting_human_gja1"
          "mirdb_targeting_mouse_gja1"
          "notch_rentschler")

for table in "${org_tables[@]}";
do
  /usr/bin/emacs-snapshot --batch "/home/jeszyman/repos/card-rad-bio/card-rad-bio.org" -l "/home/jeszyman/repos/card-rad-bio/src/org_tbl_export.el" --eval '(my-tbl-export "'"$table"'")'
done

/usr/bin/emacs-snapshot --batch "/home/jeszyman/repos/card-rad-bio/card-rad-bio.org" -l "/home/jeszyman/repos/card-rad-bio/src/org_input_tbl_export.el" --eval '(my-tbl-export "'"input"'")'


#+end_src

***** Bash and shell
:PROPERTIES:
:ID:       89576FD2-F863-4220-BAD7-D4E179AEA644
:END:
https://www.reddit.com/r/bash/comments/1hz2kku/something_i_do_on_all_bash_scripts_i_write_what/
https://www.reddit.com/r/bash/comments/1hshm3u/how_many_lines_is_your_bashrc_file_mine_is/
****** [[id:f2557e40-0d81-438a-93e9-6917a40c1d8e][Emacs as a bash IDE]]
****** [[file:~/repos/basecamp-private/basecamp-private.org::*Shell and bash setup][My shell and bash setup]]
****** General
:PROPERTIES:
:ID:       05d3b23a-4d88-4bd4-b151-34c6aecf201f
:END:
- https://www.reddit.com/r/bash/comments/yp8afm/some_scripts_that_might_be_useful/
- https://www.reddit.com/r/commandline/comments/zigu22/in_dept_guide_how_to_create_a_shell_script_to/
- https://www.reddit.com/r/bash/comments/12bptfj/are_there_any_quality_of_life_improvements_that/
- https://getaido.app/
- https://github.com/awesome-lists/awesome-bash
- https://github.com/TheR1D/shell_gpt
- https://www.programming-helper.com/linux
- https://www.reddit.com/r/bash/comments/z09oiu/bashlib_a_helpful_source_file_for_any_script/
- https://github.com/jlevy/the-art-of-command-line
- https://www.reddit.com/r/bash/comments/yp8afm/some_scripts_that_might_be_useful/
- https://www.reddit.com/r/bash/comments/xt40e2/bgit_the_beginners_git_script/
- [[id:c7d8dd07-098e-4bc4-b008-5da0abcabb0d][The Missing Semester of Your CS Education]]
- https://www.reddit.com/r/emacs/comments/x2mmfc/from_vanilla_emacs_to_bash_ide_in_17_minutes/
-
- https://explainshell.com/explain?cmd=set+-euxo+pipefail
- http://redsymbol.net/articles/unofficial-bash-strict-mode/
- [[id:BDC42DA2-A632-4FB7-A586-E100B2A045DC][LINK TO UNIX-based operating systems]]
- [[id:76c4836c-fe3f-4948-86dd-25d8df38d1af][LINK TO GNU tools]]
- https://pastebin.com/9itu8v0w
- https://www.linuxtopia.org/online_books/advanced_bash_scripting_guide/
- [[https://google.github.io/styleguide/shellguide.html][Google shell style guide]]
- [[https://www.gnu.org/software/bash/manual/bash.html][documentation]]
- [[http://www.tldp.org/LDP/abs/html/abs-guide.html][Advanced Bash-Scripting Guide]]
- [[http://mywiki.wooledge.org/FullBashGuide][wooledge bash guide]]
- [[https://bash.cyberciti.biz/guide/Main_Page][nixCraft linux tutorial]]
- http://bash3boilerplate.sh/
- a -c flag essentially adds an extra shell around multi-part command, see https://superuser.com/questions/1214597/calling-a-script-with-bash-c-option
- [[id:07b8634c-70a6-4a99-90b5-0f5083ccaf04][Emacs shell IDE]]
- Guides, tutorials, cheatsheets, books
  - http://ryanstutorials.net/bash-scripting-tutorial/
  - http://linuxcommand.org/lc3_writing_shell_scripts.php
  - https://www.youtube.com/watch?v=3ME7gayYeUQ
  - https://www.youtube.com/results?search_query=shell+scripts+bioinformatics&page=&utm_source=opensearch
  - https://google.github.io/styleguide/shell.xml
  - http://mywiki.wooledge.org/BashGuide
  - http://www.davidpashley.com/articles/writing-robust-shell-scripts/
  - https://emb.carnegiescience.edu/sites/default/files/140602-sedawkbash.key_.pdf
  - https://github.com/dylanaraps/pure-bash-bible
  - https://devhints.io/bash
  - https://www.ibm.com/developerworks/aix/library/au-satbash.html
  - [[http://tldp.org/LDP/LG/issue18/bash.html][string manipulations]]
  - cite:veeraraghavan2002
  - http://tldp.org/LDP/abs/html/
  - https://github.com/onceupon/Bash-Oneliner
  - https://devhints.io/bash?source=post_page---------------------------
  - [[https://www.ostechnix.com/test-your-bash-skills-by-playing-command-line-games/][bash games]]
  - [[https://www.reddit.com/r/commandline/comments/kbeoe/you_can_make_readline_and_bash_much_more_user/?st=j6k0lbfa&sh=6d214d1f][reddit: You can make readline (and bash) much more user friendly by adding a few options to ~/.inputrc]]
  - best practices
    - include error calling, but avoid -e http://mywiki.wooledge.org/BashFAQ/105
    - https://www.google.com/search?q=shell+script+formatting+best+practices
    - include usage example
    - a -c flag essentially adds an extra shell around multi-part command, see https://superuser.com/questions/1214597/calling-a-script-with-bash-c-option
    - ideas
    - [[file:~/.basecamp/emacs/public_yasnippets/sh-mode/write.bash]]
    - https://stackoverflow.com/questions/33297857/how-to-check-dependency-in-bash-script
  - https://unix.stackexchange.com/questions/42728/what-does-31-12-23-do-in-a-script
  - http://tldp.org/LDP/abs/html/index.html
  - https://www.gnu.org/savannah-checkouts/gnu/bash/manual/bash.html
  - https://github.com/dylanaraps/pure-bash-bible
  - https://github.com/anordal/shellharden/blob/master/how_to_do_things_safely_in_bash.md
- https://www.reddit.com/r/commandline/comments/fyla88/ux_design_principles_for_command_line_interfaces/
- https://github.com/hopeseekr/BashScripts
- https://www.reddit.com/r/programming/comments/aw0zko/bash_creating_tabcompletion_for_your_programs/
- reference
  - https://github.com/shellspec/shellspec
- examples
  - https://github.com/hopeseekr/BashScripts
- [[https://www.gnu.org/software/bash/manual/bash.html][documentation]] and general reference
  - guides, tutorials, cheatsheets, books
    - [[http://www.tldp.org/LDP/abs/html/abs-guide.html][Linux documentation project: Advanced Bash-Scripting Guide]]
    - http://bash3boilerplate.sh/
    - [[https://bash.cyberciti.biz/guide/Main_Page][Linux Shell Scripting Tutorial]]
    - http://ryanstutorials.net/bash-scripting-tutorial/
    - http://linuxcommand.org/lc3_writing_shell_scripts.php
    - https://www.youtube.com/watch?v=3ME7gayYeUQ
    - https://www.youtube.com/results?search_query=shell+scripts+bioinformatics&page=&utm_source=opensearch
    - https://google.github.io/styleguide/shell.xml
    - http://mywiki.wooledge.org/BashGuide
    - http://www.davidpashley.com/articles/writing-robust-shell-scripts/
    - https://emb.carnegiescience.edu/sites/default/files/140602-sedawkbash.key_.pdf
    - https://github.com/dylanaraps/pure-bash-bible
    - https://devhints.io/bash
    - https://www.ibm.com/developerworks/aix/library/au-satbash.html
    - [[http://tldp.org/LDP/LG/issue18/bash.html][string manipulations]]
    - cite:veeraraghavan2002
    - http://tldp.org/LDP/abs/html/
    - https://github.com/onceupon/Bash-Oneliner
    - https://devhints.io/bash?source=post_page---------------------------
    - [[https://www.ostechnix.com/test-your-bash-skills-by-playing-command-line-games/][bash games]]
    - [[https://www.reddit.com/r/commandline/comments/kbeoe/you_can_make_readline_and_bash_much_more_user/?st=j6k0lbfa&sh=6d214d1f][reddit: You can make readline (and bash) much more user friendly by adding a few options to ~/.inputrc]]
    - https://unix.stackexchange.com/questions/42728/what-does-31-12-23-do-in-a-script
    - http://tldp.org/LDP/abs/html/index.html
    - https://www.gnu.org/savannah-checkouts/gnu/bash/manual/bash.html
    - https://github.com/dylanaraps/pure-bash-bible
    - https://github.com/anordal/shellharden/blob/master/how_to_do_things_safely_in_bash.md
  - [[http://mywiki.wooledge.org/FullBashGuide][Full bash guide]]
- https://mywiki.wooledge.org/BashPitfalls
- [[https://tldp.org/LDP/abs/html/][Advanced bash scripting guide]]
- cite:greenberg2021
- Style and best practices
  - https://google.github.io/styleguide/shellguide.html
  - https://stackoverflow.com/questions/64786/error-handling-in-bash/13099228#13099228
  - function and variable names
    - https://www.google.com/search?q=bash+best+practice+function+name
      - https://google.github.io/styleguide/shellguide.html#s7.1-function-names
****** Ideas
:PROPERTIES:
:ID:       0ab13eb3-64dc-4696-888a-0caf1e7997dc
:END:
- https://www.reddit.com/r/emacs/comments/x2mmfc/from_vanilla_emacs_to_bash_ide_in_17_minutes/
- check and set file permissions as best practice
- ideas for function development protocol-
  - first I/O validation, make example, then optimization of a) process and b) outcomes, then error handling
- size filter
  - #find $localdata/frag-filt-bams -name "*.bam" -type 'f' -size -4M -delete
     # small bam check
     ##
     #if [ -f /drive3/users/jszymanski/repos/mpnst/data/small_bams ]; then rm /drive3/users/jszymanski/repos/mpnst/data/small_bams; fi
     ##
     #minimum_bam_size=200000000
- ideas
  - check and set file permissions as best practice
  - ideas for function development protocol-
    - first I/O validation, make example, then optimization of a) process and b) outcomes, then error handling
****** Local scripts
:PROPERTIES:
:ID:       50fa6877-2a58-43b7-a412-565822746257
:END:
#+begin_src bash
#!/bin/bash
#########1#########2#########3#########4#########5#########6#########7#########8

####################################
###   Choose and Run Snakefile   ###
####################################

# Setup
#set -euxov pipefail

source config/${HOSTNAME}.sh
echo "The following `*.smk` archives were found; select one:"

# set the prompt used by select, replacing "#?"
PS3="Use number to select an option"

select filename in ./workflow/*.smk

do
    if [[ "$filename" == "" ]]
    then
        echo "'$REPLY' is not a valid number"
        continue
    fi
    echo $filename
    select run_option in dry_run normal force_final force_all
    do
        echo selected $run_option
        case $run_option in
            dry_run)
                source activate snakemake
                snakemake \
                    --configfile config/${HOSTNAME}.yaml \
                    --cores $threads \
                    --directory ${repo} \
                    --dry-run \
                    --rerun-incomplete \
                    --singularity-args "--bind $mntpt:$mntpt" \
                    --use-singularity \
                    --snakefile $filename
                ;;
            normal)
                source activate snakemake
                select nohup_option in no yes
                do
                    case $nohup_option in
                        no)
                            snakemake \
                                --configfile config/${HOSTNAME}.yaml \
                                --cores $threads \
                                --directory ${repo} \
                                --singularity-args "--bind $mntpt:$mntpt" \
                                --use-singularity \
                                --snakefile $filename
                            ;;
                        yes)
                            nohup snakemake \
                                  --configfile config/${HOSTNAME}.yaml \
                                  --cores $threads \
                                  --directory ${repo} \
                                  --singularity-args "--bind $mntpt:$mntpt" \
                                  --use-singularity \
                                  --snakefile $filename
                            ;;
                    esac
                done
                ;;
            force_final)
                source activate snakemake
                select nohup_option in no yes
                do
                    case $nohup_option in
                        no)
                            snakemake \
                                --configfile config/${HOSTNAME}.yaml \
                                --cores $threads \
                                --directory ${repo} \
                                --force \
                                --singularity-args "--bind $mntpt:$mntpt" \
                                --use-singularity \
                                --snakefile $filename
                            ;;
                        yes)
                            nohup snakemake \
                                  --configfile config/${HOSTNAME}.yaml \
                                  --cores $threads \
                                  --directory ${repo} \
                                  --force \
                                  --singularity-args "--bind $mntpt:$mntpt" \
                                  --use-singularity \
                                  --snakefile $filename
                            ;;
                    esac
                done
                ;;
            force_all)
                source activate snakemake
                select nohup_option in no yes
                do
                    case $nohup_option in
                        no)

                snakemake \
                    --configfile config/${HOSTNAME}.yaml \
                    --cores $threads \
                    --directory ${repo} \
                    -F \
                    --singularity-args "--bind $mntpt:$mntpt" \
                    --use-singularity \
                    --snakefile $filename
                                            ;;
                        yes)
                nohup snakemake \
                    --configfile config/${HOSTNAME}.yaml \
                    --cores $threads \
                    --directory ${repo} \
                    -F \
                    --singularity-args "--bind $mntpt:$mntpt" \
                    --use-singularity \
                    --snakefile $filename
                            ;;
                    esac
                done
                ;;
        esac
        break
    done
    break
done
#+end_src
- Command line script
  #+name: bash_cmdline_script_preamble
  #+begin_src bash :noweb yes
#!/usr/bin/env bash
#########1#########2#########3#########4#########5#########6#########7#########8
# Notes:
#  This script is tangled from source code in the mpnst-frag.org file
#  Therefore any changes to this compiled file in place will likely be reverted
#  by a subsequent tangle operation.
#
#  This script assumes you are running from the repository main directory in
#  order to source the appriopriate configuation file.

# Load bash configuation
if [ -f ./config/${HOSTNAME}.sh ]; then
    source ./config/${HOSTNAME}.sh
else
    echo "No bash config found. Are you running from repo main dir?"
fi
#+end_src
****** Local YAS                                                       :flat:
:PROPERTIES:
:ID:       42e37db5-29e7-418f-a74d-e91ffc81167f
:END:
- Uses sh-mode
******* array.from.find
:PROPERTIES:
:ID:       68960305-58e3-43a8-8d63-ec7ea71720c4
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/sh-mode/array.from.find
# -*- mode: snippet -*-
# name: array.from.find
# key: array.from.find
# --
${1:ARRAY NAME}=()
while IFS=  read -r -d $'\0'; do
    $1+=("$REPLY")
done < <(find ${2:FIND DIR} -name ${3:FIND TERM} -print0)
printf '%s\n' "\${$1[@]}"
$0
#+end_src
******* code.sh
:PROPERTIES:
:ID:       5c2e54cf-797e-4ccb-b12e-2167d06ce7a4
:END:
#+name: code.sh
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/code.sh
# -*- mode: snippet -*-
# key: code.sh
# expand-env: ((yas-indent-line 'none))
# condition: 'auto
# --
,#+begin_src bash
$0
,#+end_src
#+end_src
[[file:emacs/public_yasnippets/org-mode/code.sh]]
******* Development                                                     :dev:
:PROPERTIES:
:header-args: :tangle no
:ID:       57eeb820-d0b7-4387-b426-758c5cce2ba8
:END:

******** getops
:PROPERTIES:
:ID:       e0cc5fbf-f903-4b68-a84a-b8e64a4fae18
:END:
# Getops
while getopts "${7:OPTIONS}" options;
do
    case "${options}" in
        -h | --help) print_usage ;;
        \?)
            echoerr "Invalid option -$OPTARG"
            print_usage
            exit 1
            ;;
    esac
done
shift $((OPTIND -1))


******** block.comment                                                  :yas:
#+begin_src bash :tangle no
# -*- mode: snippet -*-
# key: block.comment
# expand-env: ((yas-indent-line 'none))
# --
$(let* ((text (yas-text))
        (lines (split-string text "\n"))
        (commented-lines (mapcar (lambda (line)
                                   (with-temp-buffer
                                     (insert line)
                                     (goto-char (point-min))
                                     (while (not (eobp))
                                       (move-to-column 78 t)
                                       (if (not (eobp))
                                           (progn
                                             (backward-word)
                                             (insert "\n")))
                                       (forward-line 1))
                                     (goto-char (point-min))
                                     (while (not (eobp))
                                       (insert "# ")
                                       (forward-line 1))
                                     (buffer-string)))
                                 lines)))
   (mapconcat 'identity commented-lines "\n"))

#+end_src
#+begin_src bash
block.${2:$(let ((input (s-trim yas-text)))
           (s-wrap input 80 "\n"))}

block.${2:$(let ((input (s-trim yas-text)))
           (s-wrap input 80 "\n"))}
#+end_src

******* doc.fun                                                         :yas:
:PROPERTIES:
:ID:       56dffa5f-ae66-47d0-abc1-a7a1076c12b5
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/sh-mode/doc.fun
# -*- mode: snippet --*
# key: doc.fun
# expand-env: ((yas-indent-line 'none))
# --
  [[ "\$1" =~ (-h|--help) || -z "\$1" ]] && {
    cat <<EOF
Usage: ${1: <FUNCTION NAME>} ${2: <USAGE>}
${3: <DESCRIPTION>}
EOF
    return
  }

#+end_src

******* function
:PROPERTIES:
:ID:       1a349f9b-02cd-483a-aa15-2f81df598fef
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/sh-mode/function
# -*- mode: snippet -*-
# key: function
# expand-env: ((yas-indent-line 'fixed))
# --
${1:$$(replace-regexp-in-string " " "_" yas-text)}(){
    local ${2: <VARIABLE NAME> }="\${1}"
    $0
}

#+end_src
******* head1                                                           :yas:

#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/sh-mode/head1 :comments no
# -*- mode: snippet -*-
# key: head1
# expand-env: ((yas-indent-line 'none))
# --
${1:$(make-string (+ (string-width yas-text) 12) ?\#)}
###   ${1:$$(capitalize yas-text)}   ###
${1:$(make-string (+ (string-width yas-text) 12) ?\#)}
$0
#+end_src

******* [[id:fcd48576-a658-44c4-8a98-9d9404366c1b][head2]]
******* [[id:2870f5de-4af4-4d76-a8bc-89823e4e09a0][head3]]
******* [[id:1b86754e-15fd-4b7b-8b4d-675208aa8d89][head4]]
******* must.src
:PROPERTIES:
:ID:       7bce1c80-34ca-4419-826c-99ac5af2bf6a
:END:
******* must.src                                                        :yas:
:PROPERTIES:
:ID:       af579d0a-ea85-4538-a120-e06c0c19cc8a
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/sh-mode/must.src
# -*- mode: snippet -*-
# key: must.src
# expand-env: ((yas-indent-line 'none))
# --
if [[ "\${BASH_SOURCE[0]}" == "\${0}" ]]; then
  echo "You must source this script"
  exit 1
fi

#+end_src
******* print_array
:PROPERTIES:
:ID:       8d263d03-7b0c-4695-9a8a-2ee6e4d4650d
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/shell-mode/print_array
# -*- mode: snippet -*-
# name: print_array
# key: print_array
# --
printf '%s\n' "${${1:ARRAY_NAME}[@]}"
$0
#+end_src

******* script
:PROPERTIES:
:ID:       72a9b2a8-3215-4472-be95-410a7d242508
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/sh-mode/script
# -*- mode: snippet -*-
# key: script
# --
#!/usr/bin/env bash

head1

# Block comment here

set -o errexit   # abort on nonzero exitstatus
set -o nounset   # abort on unbound variable
set -o pipefail  # don't hide errors within pipes

usage

variables

main(){
    variables /$1
}

main "$@"


#+end_src
******* 80                                                              :yas:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/sh-mode/80
# -*- mode: snippet -*-
# key: 80
# expand-env: ((yas-indent-line 'fixed))
# --
##########1##########2##########3##########4##########5##########6##########7##########8
$0
#+end_src
******* return_usage_any
Returns usage if any arguements are provided
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/sh-mode/return_usage_any
# -*- mode: snippet -*-
# key: return_usage_any
# expand-env: ((yas-indent-line 'fixed))
# --
# Return usage if any arguments are provided
if [[ $# -gt 0 ]]; then
    print_usage
    return 0
fi
$0
#+end_src
******* usage
:PROPERTIES:
:ID:       e383d5cd-7ad8-4761-89ed-7d028acb79f8
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/sh-mode/usage
# -*- mode: snippet -*-
# key: usage
# expand-env: ((yas-indent-line 'fixed))
# --

print_usage(){
    cat <<- EOF

 Usage: ${1:${1:SCRIPT NAME}$$(replace-regexp-in-string " " "_" yas-text)} [OPTIONS] ${2:${2:REQUIRED OPERAND}$$(upcase yas-text)}  ${3:${3:[OPTIONAL OPERAND]}$$(upcase yas-text)}

 ${4:<DESCRIPTION>}

 Options:
   -h, --help    Show this help message and exit

 Arguements:
   ${2:$(ignore-errors (format (yas-field-value 2)))} ${5: <OPERAND DESCRIPTION>}

 Example:
   ${1:$(ignore-errors (format (yas-field-value 1)))} ${6: <EXAMPLE>}

EOF
}

# See print usage caller yas
# return_usage_any
#+end_src

******* variables                                                       :yas:

A variables function template for shell scripts

#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/sh-mode/variables
# -*- mode: snippet -*-
# key: variables
# expand-env: ((yas-indent-line 'none))
# --
variables(){
    ${1:$$(replace-regexp-in-string " " "_" yas-text)}="\${1${2:$$(when (and yas-moving-away-p (not (string= "" yas-text)))(concat ":-" yas-text))}}"
    ${3:$$(replace-regexp-in-string " " "_" yas-text)}="\${2${4:$$(when (and yas-moving-away-p (not (string= "" yas-text)))(concat ":-" yas-text))}}"
}
$0

#+end_src

******* var                                                             :yas:
:PROPERTIES:
:ID:       67ca3ccc-7bca-4b12-b513-05b246a217b8
:END:
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/sh-mode/var
# -*- mode: snippet -*-
# key: var
# expand-env: ((yas-indent-line 'none))
# --
$1="$\{$2}"$0
#+end_src

****** Processes
:PROPERTIES:
:ID:       c3e424cd-7191-423e-815b-7e7fcb770100
:END:
******* 0 Flat list of bash and shell processes
:PROPERTIES:
:ID:       eb57ddca-919e-4167-9112-8fc378d00486
:END:
#!/bin/echo ### For documentation, not intended to be executable
- # see https://stackoverflow.com/questions/7131670/make-a-bash-alias-that-takes-a-parameter
- bash error output to log
  -
- https://www.google.com/search?q=bash+prevent+script+execution
- https://www.google.com/search?q=bash+rm+use+regex
- https://www.google.com/search?q=bash+test+before+rm
- https://stackoverflow.com/questions/169511/how-do-i-iterate-over-a-range-of-numbers-defined-by-variables-in-bash
- [[https://askubuntu.com/questions/892604/meaning-of-exit-0-exit-1-and-exit-2-in-a-bash-script][Meaning of exit 0, exit 1 and exit 2 in a bash script]]
- [[https://www.cyberciti.biz/faq/linux-unix-formatting-dates-for-display/][formatting dates for display]]
- https://stackoverflow.com/questions/22962591/how-to-prevent-direct-bash-script-execution-and-allow-only-usage-from-other-scri
- https://unix.stackexchange.com/questions/10646/repeat-a-unix-command-every-x-seconds-forever
******** Check dependencies with which
#+begin_src sh
dependencies=("docker" "wget" "bash")
for i in ${dependencies[@]}; do
    if [ "$(which $i)" = "" ] ; then
        echo "EARLY EXIT- $i needs to be installed and on PATH"
        exit 0
    else
        echo "$i installed"
    fi;
done
#
source ~/repos/mpnst/bin/global-setup.sh
#
if [ $HOSTNAME == "aclm350" ]; then
    basedir=/mnt/xt3/mpnst
else
    echo "No on Chaudhuri-roche server, exiting"
    exit 1
fi
echo "Local setup complete for Chaudhuri-Roche server"
#+end_src
******** case esac
:PROPERTIES:
:ID:       8356ea0b-2249-4e60-8bda-47889e120ac3
:END:
- eg
  #+begin_src bash :tangle no
readonly project=cbergom-congenic
# Host-local variables
case $HOSTNAME in
 (jeff-server) \
     readonly all_repo=/home/jeszyman/repos \
             readonly data_dir=/mnt/ris/cbergom \
             readonly mntpt=/mnt/ris/cbergom \
             readonly repo=/home/jeszyman/repos/"${project}";;
 (jeszyman-work) \
     readonly all_repo=/home/jeszyman/repos \
             readonly data_dir=/mnt/ris/cbergom \
             readonly mntpt=/mnt/ris/cbergom \
             readonly repo=/home/jeszyman/repos/"${project}";;
 (jeff-mac-book) \
     readonly all_repo=/home/jeszyman/repos \
             readonly data_dir=/mnt/ris/cbergom \
             readonly mntpt=/mnt/ris/cbergom \
             readonly repo=/home/jeszyman/repos/"${project}";;
 (radonc-cancerbio) \
     readonly all_repo=/home/jeszyman/repos \
             readonly data_dir=/mnt/ris/cbergom \
             readonly mntpt=/mnt/ris/cbergom \
             readonly ref_dir=/mnt/users/jeszyman/data/ref \
             readonly repo=/home/jeszyman/repos/"${project}";;
 (*) echo "Host not recognized" && exit 1;;
esac

# Check mount active
if grep -qs $mntpt /proc/mounts; then
 echo "RIS storage mounted."
else
 echo "RIS storage NOT mounted, exiting." && exit 1
fi

# Source functions
cd $repo
## submodule or symlinked repos functions
source ./basecamp/src/functions.sh
source ./biotools/src/functions.sh
## repo-local functions
source ./src/functions.sh

#
#source ./src/functions.sh

#
# Ensure repo structure
mkdir -p $repo/config
mkdir -p $repo/data
mkdir -p $repo/imgs
mkdir -p $repo/pubs
mkdir -p $repo/reports
mkdir -p $repo/src
mkdir -p $repo/test/fastq
mkdir -p $repo/test/qc
chmod 444 $repo/data/chr3_congenic.bed
chmod 444 $repo/data/samples.csv
chmod 444 $repo/data/strains.csv

#
echo "Bergom RNA setup complete for $HOSTNAME"
#+end_src
******** Provide per-function documentation
:PROPERTIES:
:ID:       6576448a-6833-4f37-88be-515572406f43
:END:
https://unix.stackexchange.com/questions/295022/displaying-usage-comments-in-functions-intended-to-be-used-interactively

******** terminal colors
:PROPERTIES:
:ID:       b7fef3cb-c4d5-417e-8c28-fc54edabfa1f
:END:
[[id:61cef427-947e-4d91-9dfe-8758ccbe3512][convert_pdf_to_png()]]
https://chat.openai.com/c/29bd45d7-ee7e-4711-954f-26cf8cabff44
******* Checkers
:PROPERTIES:
:ID:       5efce201-5375-42a8-a8d0-827a0325a7bf
:END:
- https://www.google.com/search?q=bash+if+function+completes+without+error+then+do+next
- https://stackoverflow.com/questions/26675681/how-to-check-the-exit-status-using-an-if-statement
- if readable
  - https://www.google.com/search?q=bash+check+if+file+is+readable
- if exists
  - https://www.google.com/search?q=bash+check+if+variable+is+defined
  - [[https://stackoverflow.com/questions/592620/how-can-i-check-if-a-program-exists-from-a-bash-script][check if program exists]]
  - [[https://stackoverflow.com/questions/59838/how-can-i-check-if-a-directory-exists-in-a-bash-shell-script][check if dir exists]]
- https://www.google.com/search?q=bash+check+if+on+vpn
- -z string is True if string is null, e.g.     if [ -z "$1" ] || [[ $1 == -h ]] || [[ $1 == --help ]];
  - variables
    #+name:
    #+begin_src bash :tangle no
  # Check if variable is set
  if [ -z ${var+x} ]; then echo "var is unset"; else echo "var is set to '$var'"; fi
  #+end_src
- https://www.google.com/search?q=bash+variable+file+name+with+spaces
- [[https://unix.stackexchange.com/questions/322817/how-to-find-the-file-where-a-bash-function-is-defined][check were function is called from]]
- [[https://askubuntu.com/questions/102093/how-to-see-the-command-attached-to-a-bash-alias][check where alias goes w/ type]]
- https://theterminallife.com/check-if-file-exists-and-is-not-empty/
- links
  - https://stackoverflow.com/questions/5767062/how-to-check-if-a-symlink-exists
- file and directory metadata
  - https://superuser.com/questions/120078/unix-files-starting-with-a-dash
  - https://www.google.com/search?q=bash+compare+files+by+date
    - https://unix.stackexchange.com/questions/372857/compare-two-file-modification-dates
        #+begin_src bash
    cd /tmp/
    rm file1
    rm file2
    touch file2; sleep 2; touch file1
    if [ file1 -nt file2 ]; then
        echo "yes"
    fi
        #+end_src
    - https://unix.stackexchange.com/questions/88525/need-to-move-files-to-different-folder-based-on-the-creation-date
  - https://www.google.com/search?q=bash+check+file+size
  - https://www.google.com/search?q=bash+list+directory+sizes
  - https://www.google.com/search?q=bash+add+date+to+file+name
  - https://www.google.com/search?q=bash+bulk+rename+files
- # Declare variable if currently empty
  if [ -z ${repo+x} ]; then repo=~/repos/bergom_rna; fi
- https://stackoverflow.com/questions/33297857/how-to-check-dependency-in-bash-script
- globbing
  - https://stackoverflow.com/questions/2937407/test-whether-a-glob-has-any-matches-in-bash?noredirect=1&lq=1
******* Input
:PROPERTIES:
:ID:       cab2ac79-9202-4ad4-a475-f0d4c0a017f8
:END:
https://www.google.com/search?q=bash+read+csv
******* Linting, parsing, and debugging
:PROPERTIES:
:ID:       df3acc6f-0a6c-4199-9061-474a80cff9b2
:END:
- https://github.com/mvdan/sh
- https://www.reddit.com/r/bash/comments/1f38s1q/out_of_curiosity_how_many_of_you_use_shellcheck/
- https://github.com/loeffel-io/ls-lint
- https://github.com/koalaman/shellcheck#in-your-editor
- https://stackoverflow.com/questions/171924/how-do-i-syntax-check-a-bash-script-without-running-it#171932
- http://www.skybert.net/emacs/bash-linting-in-emacs/
- https://zwischenzugs.com/2018/10/09/learn-bash-debugging-techniques-the-hard-way/
******* Open files based on type
:PROPERTIES:
:ID:       53e79bac-0644-464e-a28b-cd582cadaa5c
:END:
#+name: open_choose
#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/open_choose
# -*- mode: snippet -*-
# key: open_choose
# expand-env: ((yas-indent-line 'fixed))
# --
,#+begin_src bash

,#+end_src
#+END_SRC

******* Outputs
:PROPERTIES:
:ID:       e9bddd31-2395-40cd-a993-44c56b17faef
:END:
- Error outputs and exits
  - traps
  - set -e
    - http://mywiki.wooledge.org/BashFAQ/105
- exits
  - https://askubuntu.com/questions/892604/meaning-of-exit-0-exit-1-and-exit-2-in-a-bash-script#:~:text=All%20by%20itself%2C%20exit%20implies,successful%20completion%20of%20your%20script.&text=However%20by%20specifying%20the%201,exited%20with%20an%20error%20condition.
- https://www.reddit.com/r/commandline/comments/d9x9m2/formatting_script_output/
- Printing outputs
  - printing across terminal width
    - https://www.reddit.com/r/commandline/comments/d9x9m2/formatting_script_output/
- logging
  - https://stackoverflow.com/questions/18278223/method-to-write-in-log-files-in-a-shell-script
******** Output
:PROPERTIES:
:ID:       91b901ec-5015-4df5-9a22-8aef7126fefa
:END:
- https://www.google.com/search?q=bash+redirect+to+logfile
- output direction
  - - 1 & 2 https://stackoverflow.com/questions/10508843/what-is-dev-null-21
******* Pattern matching
:PROPERTIES:
:ID:       ccff4529-a532-4111-9ac3-e8df91ec50fa
:END:
- if [ "${file: -4}" == ".txt" ] https://stackoverflow.com/questions/407184/how-to-check-the-extension-of-a-filename-in-a-bash-script
- File size
  - https://www.google.com/search?q=bash+find+and+delete+by+size
    - https://unix.stackexchange.com/questions/287629/find-and-remove-files-bigger-than-a-specific-size-and-type
******* Pipes
:PROPERTIES:
:ID:       2cb03148-64b0-4a63-985f-c26447342aaa
:END:
- pipe
  - https://www.google.com/search?q=pipe+store+output+as+variable
******* Resource use control
:PROPERTIES:
:ID:       069254a6-95ec-48dd-a5ce-802687ec99eb
:END:
  - https://linuxhint.com/limit_cpu_usage_process_linux/
  - https://stackoverflow.com/questions/4651234/how-to-determine-the-process-memory-limit-in-linux
  - https://unix.stackexchange.com/questions/52313/how-to-get-execution-time-of-a-script-effectively
  - setting local resource limits
    - http://coldattic.info/post/40/
- multi threading
  - https://duckduckgo.com/?q=multithread+grep&ia=qa
  - https://stackoverflow.com/questions/1455695/forking-multi-threaded-processes-bash
******* Scripts
******** Error handling
******* Setup
:PROPERTIES:
:ID:       12419776-9b0e-42e9-8392-8f17dc89a63f
:END:
- bashrc
  - https://www.google.com/search?q=alias+function+bashrc
  - https://www.reddit.com/r/commandline/comments/9md3pp/a_very_useful_bashrc_file/
- themes- https://github.com/ohmybash/oh-my-bash
******* Sysadmin
:PROPERTIES:
:ID:       8d0e9896-cf9d-4b8b-acf0-71d513057bf6
:END:
- see [[id:25e57644-f710-41ba-8bf4-d6ee9cc2c9c6][Linux sysadmin]]
******* Text file manipulations
:PROPERTIES:
:ID:       28a66d42-f97b-4166-8afe-7b86de7a33b6
:END:
- https://www.google.com/search?q=command+line+remove+first+line+of+text+file
******* User inputs
:PROPERTIES:
:ID:       17707f3f-aee6-4eab-9d79-de07c975a3d5
:END:
- with read
  #+begin_src bash
## identifies server in docker containers
server_ask() {
    echo -n "Choose your server: "
    read SERVER
    SERVER="${SERVER:=chaudhuri-roche}"
}

## interactive docker initialization
docker_interactive() {
    repo="USER INPUT"
    read -p "repo name: " repo
    case $HOSTNAME in
        (radonc-cancerbio) docker run -it \
                                  -v /media/:/media/ \
                                  -v /home/:/home/ \
                            -u $(id -u ${USER}) \
                            jeszyman/$repo \
                            /bin/bash;;
        (jeszyman-*) docker run -it \
                            -v /home/:/home/ \
                            -u $(id -u ${USER}) \
                            jeszyman/$repo \
                            /bin/bash;;
        (acl*) docker run -it \
                      -v /drive3/:/drive3/ \
                      -v /duo4/:/duo4/ \
                      -v /mnt/:/mnt/ \
                      -v /home/:/home/ \
                      -u $(id -u ${USER}) \
                      jeszyman/$repo \
                      /bin/bash;;
        (ACL*) docker run -it \
                      -v /home/:/home/ \
                      -v /duo4/:/duo4/ \
                      -u $(id -u ${USER}):$(id -g ${USER}) \
                      -h=${HOSTNAME} \
                      jeszyman/$repo \
                      /bin/bash;;
        (virtual-workstation*.gsc.wustl.edu) bsub -Is -q docker-interactive -a 'docker(jeszyman/'"$repo"')' /bin/bash;;
    esac
}

#+end_src

- https://stackoverflow.com/questions/2642585/read-a-variable-in-bash-with-a-default-value
- Choose from list
  - https://linuxize.com/post/bash-select/
  - https://linuxize.com/post/bash-case-statement/
  - https://askubuntu.com/questions/1705/how-can-i-create-a-select-menu-in-a-shell-script
  - https://askubuntu.com/questions/682095/create-bash-menu-based-on-file-list-map-files-to-numbers
  - https://stackoverflow.com/questions/2596807/bash-shell-script-nested-select-statements
  - https://www.google.com/search?q=bash+choose+options+from+list
- https://www.google.com/search?q=linux+sudo+pipe+password&oq=bash+pipe+sudo+pa&aqs=chrome.1.69i57j0i22i30l2.7394j0j4&sourceid=chrome&ie=UTF-8

- https://www.google.com/search?q=bash+read+and+store+as+variable
- https://www.reddit.com/r/programming/comments/aw0zko/bash_creating_tabcompletion_for_your_programs/
- https://www.google.com/search?q=bash+read+default+input
- prompt for user input
- [[https://stackoverflow.com/questions/226703/how-do-i-prompt-for-yes-no-cancel-input-in-a-linux-shell-script][stack: How do I prompt for Yes/No/Cancel input in a Linux shell script?]]
- https://www.google.com/search?q=bash+prompt+user+input
  - examples
    - [[id:c9327fad-4f38-4bbe-8b2e-58ad589fbdf6][Basecamp Docker]]
  - https://www.reddit.com/r/bash/comments/n65i3n/prompt_user_for_specific_key_abort_with_any_other/
- Simulate key presses
  - https://www.google.com/search?q=bash+pass+ENTER+to+script
  - https://stackoverflow.com/questions/30712126/how-to-simulate-two-consecutive-enter-key-presses-for-a-command-in-a-bash-script?noredirect=1&lq=1
******** TUI
:PROPERTIES:
:ID:       97b458fa-8a96-415d-b582-d0c730e09316
:END:
- tui
  - https://linuxconfig.org/how-to-use-ncurses-widgets-in-shell-scripts-on-linux
******* Variables
:PROPERTIES:
:ID:       f824de5e-ecce-4f4e-aa25-1daf675577a6
:END:
- [[id:9cbffcad-49c3-4936-9111-d2472d40276c][Arrays]]
- [[https://stackoverflow.com/questions/91368/checking-from-shell-script-if-a-directory-contains-files][use globbing in variables with shopt]]
- General reference
  - [[https://data36.com/variables-if-statements-while-loops-bash-data-science/][variables for if statements and while loops]]
******* Writing bash scripts
:PROPERTIES:
:ID:       f54ac1df-f52d-42ee-a339-6557e7293a59
:END:
- https://nochlin.com/blog/6-techniques-i-use-to-create-a-great-user-experience-for-shell-scripts
- prevent script runs with https://stackoverflow.com/questions/22962591/how-to-prevent-direct-bash-script-execution-and-allow-only-usage-from-other-scri/22963631#22963631
- https://unix.stackexchange.com/questions/313256/why-write-an-entire-bash-script-in-functions
- best practices
  - include shebang
    - https://unix.stackexchange.com/questions/50425/shell-scripts-are-still-working-without-sha-bang-line
******* Writing functions
:PROPERTIES:
:ID:       e6966fff-7c43-4bb9-952e-66dfc6c11c43
:END:
- https://stackoverflow.com/questions/2500436/how-does-cat-eof-work-in-bash
- use type to see function definition
- https://www.reddit.com/r/commandline/comments/d9x9m2/formatting_script_output/
- https://www.shellhacks.com/print-usage-exit-if-arguments-not-provided/
- function template- add run type
  - updating
  - overwrite
- Parameters and usage
  - https://stackoverflow.com/questions/687780/documenting-shell-scripts-parameters
  - https://stackoverflow.com/questions/34567826/what-is-usage-in-shell-scripting/34567852#:~:text=It's%20a%20just%20a%20convention,filename%3D%241%20fi%20...
- https://www.shellhacks.com/print-usage-exit-if-arguments-not-provided/
- for loops
  - examples
    - Recursively git commit with date tag
      #+BEGIN_SRC sh

   d=$(date +%Y-%m-%d)
   echo "$d"
   cd ~/Box\ Sync/
   for i in ./*/ ; do (cd "$i" && git commit -a -m "$d"); done
   end

   #+END_SRC
- commenting
  - comments https://www.google.com/search?q=bash+comment+in+pipe
- feedback, traps, eof, etc
  - traps
    - https://opensource.com/article/20/6/bash-trap
  - error reporting
    - interupt with && https://serverfault.com/questions/252448/bash-script-alert-on-error
    - [[https://askubuntu.com/questions/892604/meaning-of-exit-0-exit-1-and-exit-2-in-a-bash-script][Meaning of exit 0, exit 1 and exit 2 in a bash script]]
******** My bash functions
:PROPERTIES:
:ID:       569d1afa-e991-47b7-be15-3dd6364f5258
:END:
- http://mywiki.wooledge.org/BashGuide
- [[file:~/repos/dotfiles/bashrc]]
- Git pull all repos
  #+name: git_pull_all
  #+begin_src bash :tangle ./src/git_pull_all.sh :dir ~/repos/basecamp
#!/bin/bash
#########1#########2#########3#########4#########5#########6#########7#########8
#                                                                              #
#                       Script to automate git pulls                           #
#             from a set of repositories within the same root dir              #
#                                                                              #
#########1#########2#########3#########4#########5#########6#########7#########8
#
# 1. Script Checks
#
## Check if git exist
command -v git >/dev/null 2>&1 # stop if git not found
if [ $? -eq 1 ]; then
    echo "Git not found"
    exit 1; fi
##
## Check if any repos exist
shopt -s nullglob
repo_dirs=(~/repos/*)
if [ ${#repo_dirs[@]} -eq 0 ]; then
    echo "No repos at ~/repos/"
    exit 1; fi
shopt -u nullglob
##
# 2. Pull Function
#
for d in $HOME/repos/*
do
    [[ ! -d "$d" ]] && continue
    echo "$d" &&
    cd "$d" &&
    git pull &&
    git submodule update --recursive &&
    git submodule update --remote &&
    cd "$OLDPWD"
done
#
#+end_src
# Check setup exit status
if [ "$?" != "0" ]; then
    echo "setup error" 1>&2
    exit 1
else
    echo "Setup completed successfully"
fi

#+name: docker_check
#+begin_src bash :tangle ./src/functions.sh
# Check for docker environment
docker_check() {
if [ -f /.dockerenv ]; then
    echo "shell already in docker, exiting"
    exit 1
fi
}

#+end_src

#+name:check_software_dependencies
#+begin_src bash :tangle ./src/functions.sh
#########1#########2#########3#########4#########5#########6#########7#########8
function check_dependencies {
    if [[ $# -eq 0 ]] || [[ $1 = -h ]] || [[ $1 = --help ]] ; then
        printf "\n check_dependencies
                     \n Uses WHICH command to confirm software install
                     \n \$1 = a bash array of software names, e.g. dependencies=("docker" "wget" "bash")
                     \n  "
    else
        local -n arr=$1
        for dependency in "${arr[@]}"
        do
            if [ "$(which $dependency)" = "" ] ; then
                echo "EARLY EXIT- $dependency needs to be installed and on PATH"
                exit 0
            else
                echo "$dependency installed"
            fi
        done
    fi
}
#+end_src

#+name:symlink-by-csv-script
#+begin_src sh :tangle ./src/bash_functions.sh
#
######################
### symlink-by-csv ###
######################
#
# Purpose: generates symbolic links in bulk from a csv file
#
# Input:
# A .csv file of two columns,
#  Column 1 with source file paths
#  Column 2 with destination symbolic link paths
#
# Function:
symlink_by_csv(){
    # Set internal field separator
    export IFS=","
    # Take csv and pass to while/read
    cat $1 | while read a b; do
        ln -s $a $b; done
}
#
# Example:
# cd /tmp
# mkdir -p csv-symlink-test
# cd csv-symlink-test
# touch csv-for-links.csv
# touch file-to-link-from.txt
# echo "file-to-link-from.txt,path-to-link-to.txt" >> csv-for-links.csv
# echo "test link" > file-to-link-from.txt
# export IFS=","
# cat csv-for-links.csv | while read a b; do
#     ln -s $a $b ; done
# cat path-to-link-to.txt
# cd ../
# rm -rf csv-symlink-test
#+end_src

#+name:copy-file-text-to-clipboard
#+begin_src sh
#
###################################
### copy-file-text-to-clipboard ###
###################################
#
# Purpose: for pandoc supported file, copies file text to system clipboard
#
# Dependencies:
dependencies=("pandoc" "xclip")
check_dependencies dependencies[@]
#
# Input:
# Any pandoc supported file
#
# Function:
text_to_clip() { pandoc -S $1 | xclip -selection clipboard}
#
# Example
cd /tmp/ && rm -rf ./example && mkdir -p ./example && cd ./example
echo "Hello" | pandoc -o out.docx
chmod 777 ./out.docx
text_to_clip()
./out.docx
test=out.docx
pandoc -S $test | xclip -selection clipboard

#+end_src

#+name: check_local_software
#+begin_src bash :tangle ./src/bash_functions.sh
check_local_software(){
    # Usage
    ##
    ## Message
    usage(){
                #########1#########2#########3#########4#########5#########6#########7#########8
        printf "\n check_local_software
                \n Checks list of software in bash array and exits with error message if any
 software in the array is not found
                \n \$1 = Bash array of software, e.g. try software=(bash, git)
                \n "
    }
    ##
    ## Check
    [[ $# -eq 0 ]] && usage
    #
    # Variables
    software=$1
    #
    # Run
    for i in "${software[@]}"; do
    if command -v $i >/dev/null 2>&1 ; then
        echo "$i installed"
    else
        echo "$i not found, exiting"
        exit 1
    fi
done
}
#+end_src


- bash functions
  - docker interactive
  #+name:
  #+begin_src bash :tangle ./src/functions.sh
docker_interactive() {
    if [ -f /.dockerenv ]; then
        echo "shell already in docker, exiting"
        exit 1
    else
        account="USER INPUT"
        container="USER INPUT"
        read -p "docker account name: " account
        account="${account:=jeszyman}"
        read -p "container name: " container
        container="${container:=biotools}"
        case $HOSTNAME in
            (radonc-cancerbio) docker run -it \
                                      --env HOME=${HOME} \
                                      --hostname ${HOSTNAME} \
                                      --user $(id -u ${USER}) \
                                      --volume /home/:/home/ \
                                      --volume /mnt/:/mnt/ \
                                      --volume /tmp/:/tmp/ \
                                      $account/$container \
                                      /bin/bash;;
            (acl*) docker run -it \
                          --env HOME=${HOME} \
                          --hostname ${HOSTNAME} \
                          -v /drive3/:/drive3/ \
                          -v /duo4/:/duo4/ \
                          -v /home/:/home/ \
                          -u $(id -u ${USER}) \
                          $account/$container \
                          /bin/bash;;
            (ACL*) docker run -it \
                          --env HOME=${HOME} \
                          --hostname ${HOSTNAME} \
                          -v /home/:/home/ \
                          -v /duo4/:/duo4/ \
                          -u $(id -u ${USER}) \
                          $account/$container \
                          /bin/bash;;
            (virtual-workstation*.gsc.wustl.edu) bsub -Is -q docker-interactive -a 'docker($account/'"$container"')' /bin/bash;;
            (*) docker run -it \
                       --env HOME=/home/${USER} \
                       --hostname ${HOSTNAME} \
                       --user $(id -u ${USER}) \
                       --volume /home/:/home/ \
                       --volume /mnt/:/mnt/ \
                       --volume /tmp/:/tmp/ \
                       $account/$container \
                       /bin/bash;;
        esac
    fi
}
#+end_src

#+name:
#+begin_src bash :tangle no
sudo npm i -g bash-language-server
cd /home
#+end_src

#+begin_src emacs-lisp
(use-package lsp-mode
  :commands lsp
  :hook
  (sh-mode . lsp))

(setq lsp-bash-highlight-parsing-errors 1)
(setq lsp-bash-explanshell-endpoint 1)
(setq lsp-bash-glob-pattern 1)
#+end_src
********* dev
:PROPERTIES:
:ID:       e4020f0e-ee6b-4d52-862a-8be622e8a590
:END:
#+name:
#+begin_src bash :tangle no
open(){
    # Check for parameters, return usage
    if [[ $# -eq 0 ]] ; then
        printf "\n open
              \n xdg-open wrapper
              \n \$1 = file to open
              \n  "
        exit 0
    elif [ $1 == *.pdf ] ;then
        okular $1 & exit
    else
        xdg-open $1
    fi
}

open
okular ~/library/allen2015.pdf
#+end_src

********* [[file:~/repos/basecamp/src/shell/functions.sh][Common Process Functions]]
:PROPERTIES:
:CREATED:  [2020-04-14 Tue 09:05]
:ID:       15071151-f519-4c7f-b21f-997d6d7b6bc5
:END:
#+name: check_local_software
#+begin_src bash :tangle ./src/functions.sh
check_local_software(){
    if [[ $# -eq 0 ]] ; then
        printf "\n check_local_software
              \n Checks list of software in array, exits with error message if not found
              \n \$1 = Bash array of software, e.g. software=(bash, git)
              \n "
    else
        software=$1
        for i in "${software[@]}"; do
            if command -v $i >/dev/null 2>&1 ; then
                echo "$i installed"
            else
                echo "$i not found, exiting"
                exit 1
            fi
        done
    fi
}
#
# check_local_software
# unit test
#softwarecheck=(bash git)
#check_local_software $softwarecheck
#+end_src

#+name: git_pull_all
#+begin_src bash :tangle ./src/git_pull_all.sh :dir ~/repos/basecamp
#!/bin/bash
#########1#########2#########3#########4#########5#########6#########7#########8
#                                                                              #
#                       Script to automate git pulls                           #
#             from a set of repositories within the same root dir              #
#                                                                              #
#########1#########2#########3#########4#########5#########6#########7#########8
#
# 1. Script Checks
#
## Check if git exist
command -v git >/dev/null 2>&1 # stop if git not found
if [ $? -eq 1 ]; then
    echo "Git not found"
    exit 1; fi
##
## Check if any repos exist
shopt -s nullglob
repo_dirs=(~/repos/*)
if [ ${#repo_dirs[@]} -eq 0 ]; then
    echo "No repos at ~/repos/"
    exit 1; fi
shopt -u nullglob
##
# 2. Pull Function
#
for d in $HOME/repos/*
do
    [[ ! -d "$d" ]] && continue
    echo "$d" &&
    cd "$d" &&
    git pull &&
    git submodule update --recursive &&
    git submodule update --remote &&
    cd "$OLDPWD"
done
#
#+end_src

#+name: jpg_to_pdf
#+begin_src bash
#########1#########2#########3#########4#########5#########6#########7#########8#########9#########0#########1
jpg_to_pdf() {
    printf "Function to convert jpeg images to pdf
    Accepts:
    Returns: "
}
#+end_src

#+name:symlink-by-csv-script
#+begin_src sh :tangle ./src/functions.sh
#
######################
### symlink-by-csv ###
######################
#
# Purpose: generates symbolic links in bulk from a csv file
#
# Input:
# A .csv file of two columns,
#  Column 1 with source file paths
#  Column 2 with destination symbolic link paths
#
# Function:
symlink_by_csv(){
    # Set internal field separator
    export IFS=","
    # Take csv and pass to while/read
    cat $1 | while read a b; do
        ln -s $a $b; done
}
#
# Example:
# cd /tmp
# mkdir -p csv-symlink-test
# cd csv-symlink-test
# touch csv-for-links.csv
# touch file-to-link-from.txt
# echo "file-to-link-from.txt,path-to-link-to.txt" >> csv-for-links.csv
# echo "test link" > file-to-link-from.txt
# export IFS=","
# cat csv-for-links.csv | while read a b; do
#     ln -s $a $b ; done
# cat path-to-link-to.txt
# cd ../
# rm -rf csv-symlink-test
#+end_src

#+name:copy-file-text-to-clipboard
#+begin_src sh
#
###################################
### copy-file-text-to-clipboard ###
###################################
#
# Purpose: for pandoc supported file, copies file text to system clipboard
#
# Dependencies:
dependencies=("pandoc" "xclip")
check_dependencies dependencies[@]
#
# Input:
# Any pandoc supported file
#
# Function:
text_to_clip() { pandoc -S $1 | xclip -selection clipboard}
#
# Example
cd /tmp/ && rm -rf ./example && mkdir -p ./example && cd ./example
echo "Hello" | pandoc -o out.docx
chmod 777 ./out.docx
text_to_clip()
./out.docx
test=out.docx
pandoc -S $test | xclip -selection clipboard

#+end_src

***** Document markup langugaes
:PROPERTIES:
:ID:       d0814f52-3b46-4d3a-b46c-20e2864e43d7
:END:
****** YAML
:PROPERTIES:
:ID:       2d51112e-b2a4-41c5-bbd9-d9fc85cc59c5
:END:

******* Example
#+begin_src yaml :tangle /tmp/example.yaml
# Simple YAML Example

# Comment types

# A standalone comment

key: value # An inline comment


# Scalars
## Boolean
enabled: true
## String
mode: auto

# Numbers
integer: 42
float: 3.14
scientific: 1e6

# Null (empty values)
unset: null
missing_value: ~

# Lists
# Strings
fruits:
  - apple
  - banana
  - cherry

# Inline format example for a list
colors: [red, green, blue]

# Dictionaries
servers:
  - name: web-server
    ip: 192.168.1.1
    status: active
  - name: db-server
    ip: 192.168.1.2
    status: inactive

# Nested
nested_list:
  - - - item1  # First element of the first innermost list
      - item2  # Second element of the first innermost list
    - - item3  # First element of the second innermost list
      - item4  # Second element of the second innermost list
  - - - item5  # First element of the third innermost list
      - item6  # Second element of the third innermost list
    - - item7  # First element of the fourth innermost list
      - item8  # Second element of the fourth innermost list

#+end_src

******* Processes
:PROPERTIES:
:ID:       a7ab5383-e7c2-4341-ab78-48967db4c9ca
:END:
- validation https://codebeautify.org/yaml-validator
- Cannot do string concatenation
  - https://stackoverflow.com/questions/5484016/how-can-i-do-string-concatenation-or-string-replacement-in-yaml
- https://www.google.com/search?q=yaml+make+value+from+other+values
******* General reference
:PROPERTIES:
:ID:       7e4af24b-2b05-44bc-b87c-a16393f1e9dc
:END:
- https://www.educative.io/blog/advanced-yaml-syntax-cheatsheet
******* Local YAS
******* code.yaml                                                       :yas:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/code.yaml
# -*- mode: snippet -*-
# key: code.yaml
# expand-env: ((yas-indent-line 'none))
# condition: 'auto
# --
,#+begin_src yaml
$0
,#+end_src
#+end_src
***** JSON JavaScript Object Notation
:PROPERTIES:
:ID:       9E10CCC0-BC92-4C96-BBF2-99B54E88143D
:END:
https://github.com/antonmedv/fx/blob/master/DOCS.md
  - JSON
    - https://www.w3schools.com/js/js_json_syntax.asp
- When exchanging data between a browser and a server, the data can only be text.
- JSON is text, and we can convert any JavaScript object into JSON, and send JSON to the server.
-

***** Markup languages
:PROPERTIES:
:ID:       817CE006-4FD6-4F53-8A62-9D2D86E237EE
:END:

  - [[https://guides.github.com/features/mastering-markdown/][Mastering Markdown]]
  - http://markup.rocks/
- for mkdown drop down- {% include question.html question="Answer" answer='EcoRI site (GAATTC) count = 71525' %}
  - collapse code block
    - http://tomnorian.com/toggle-code-display-jekyll.html
  - long code lines- https://demisx.github.io/jekyll/2014/01/13/improve-code-highlighting-in-jekyll.html
  - [[https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet][Markdown cheat sheet]]
- Markup
  - Markdown
    - - example of figure include: {% include figure.html image="/assets/module_4/CNA_illustration.png" position="left" width="450" %}

****** Markdown
:PROPERTIES:
:ID:       CDECCD81-E262-4D7F-AD4A-90CE29BF7DF5
:END:
- https://stackedit.io/app#org3511de7
- org-markdown-html workflow
  - keep html with #+begin_html
https://commonmark.org/
https://stackoverflow.com/questions/5319754/cross-reference-named-anchor-in-markdown
Internal links (e.g. for table of contents):

1. [Section 1](#section1)
2. [Section 2](#section2)

### Section 1
### Section 2


Add a vertical line to the left:
> This is an important point


****** Unified Modeling Language (UML)
:PROPERTIES:
:ID:       06E539D4-B9EC-4D73-96FF-613D8CC51067
:END:

cite:yasini2012guideline
- http://creately.com/blog/diagrams/part-2-what-type-of-uml-diagram-should-you-be-using/
- http://creately.com/blog/diagrams/uml-diagram-types-examples/

**** Standards and formats
:PROPERTIES:
:ID:       95011C22-8436-481A-B512-B0E82648B50C
:END:

- standards and formats
- svg
  - https://codepen.io/sdras/pen/NqYGZv
  - http://slides.com/sdrasner/svg-can-do-that#/22
  - svgs
    - https://www.dwitter.net/top
    - https://codepen.io/sdras/pen/waXKPw

***** <<<Regular Expressions>>> and text parsing
:PROPERTIES:
:ID:       673D5E8D-64C5-4E9F-A664-612C2A6B1770
:END:
- https://regexr.com/
- https://regex101.com/
- https://www.debuggex.com/r/C8MSTUM9sPxE1-hj
- https://regex101.com/
- https://anystyle.io/
- https://blog.theodo.fr/2018/03/regex-warrior/
- https://stackoverflow.com/questions/6208367/regex-to-match-stuff-between-parentheses
- [[http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap09.html][POSIX documentation]]
- [[https://stackoverflow.com/questions/22937618/reference-what-does-this-regex-mean/22944075#22944075][The Stack Overflow Regular Expressions FAQ]]
- https://regexr.com/
- https://www.emacswiki.org/emacs/RegularExpression
- [[http://www.rexegg.com/regex-quickstart.html][Quick-Start: Regex Cheat Sheet]]
- [[https://regexone.com/][RegexOne]]
  - Common operations
    | Operation | Command |
    |-----------+---------|
    | re        |         |
  - Metacharacters
    - \d for any single numeral
      - \d* matches any number of digits (including zero)
      - \d+ matches any number of digits above zero
    - . matches any single character (escape metacharacter with \.)
    - match zero or one of the preceding character group with ? (plain with \?)
    - whitespace
      - space _
      - tab \t
      - new line \n
      - any whitespace \s
    - start ^ and end
    - capture groups of characters with parenthesis
    - match specific characters with [brackets]
    - exclude specific characters with [^exclude]
    - dash indicate character range, a-z and 0-9
    - repetitions with {#}
    - capitals for NON e.g.:
      - non-whitespace is \S
      - non-digit is \D

**** Literate programming
:PROPERTIES:
:ID:       10af5937-004b-46f8-818d-b81d30462164
:END:
https://www.reddit.com/r/emacs/comments/13wuk38/what_is_literate_programming_used_for/
https://www.reddit.com/r/LitProg/comments/13luqbj/tangleup_versus_tangledown/
http://howardism.org/Technical/Emacs/literate-devops.html
- https://github.com/norvig/pytudes/blob/main/ipynb/risk.ipynb
- https://github.com/alhassy/emacs.d/blob/master/README.org#what-does-literate-programming-look-like

- Donald Knuth developed the idea in 1980s
- [[https://www.youtube.com/watch?v=dljNabciEGg&ab_channel=HowardAbrams][Literate Deveops with Emacs]]
  -
**** General reference
:PROPERTIES:
:ID:       48dfc684-aa60-4222-8641-d1646b3451be
:END:
- https://carlosschults.net/en/fivel-levels-readable-code/
- https://www.reddit.com/r/programming/comments/axt97a/ghidra_nsas_reverse_engineering_tool_is_now/
- https://github.com/nas5w/100-days-of-code-frontend/blob/master/README.md

- education, tutorials, cheatsheats, theory
  - one-off programming projects
    - https://www.reddit.com/r/programming/comments/aajb7r/how_doom_fire_was_done/
    - https://www.madewithcode.com/projects/marypoppinsreturns?utm_source=made%20with%20code
  - https://julien.danjou.info/
  - cheatsheets
    - https://github.com/chubin/cheat.sh
  - Educational resources
    - [[https://mail.google.com/mail/u/0/#inbox/15e112cb4784f88f][email: new udemy courses]]
      - python mega course
      - iOS 10 & Swift3
      - NLTK
    - Challenges, integrated, educational, fun
      - [[https://www.youtube.com/user/shiffman?app=desktop][Shiffman creative coding video tutorials]]
      - [[http://upskillcourses.com/p/essential-web-developer-course][Upskill web development course]]
      - https://code.org/minecraft
      - https://asciinema.org/browse/featured
    - https://flatironschool.com/
    - https://github.com/sindresorhus/awesome
    - https://leetcode.com/
    - Cool example application builds
      - https://redditblog.com/2017/04/13/how-we-built-rplace/
      - https://tallys.github.io/color-theory/
    - https://www.reddit.com/r/programming/comments/7rgz78/a_lot_of_free_pdfs_about_programming_from_stack/
    - https://www.syncfusion.com/resources/techportal/ebooks
    - [[https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-00sc-introduction-to-computer-science-and-programming-spring-2011/][MIT Intro to computer science and programming 2011]]
    - [[http://www.russpoldrack.org/2016/05/advice-for-learning-to-code-from-scratch.html?m=1][Poldrack learn to code]]
  - General and theory
    - cite:abelson1996
  - Literate programming
    - declare defaults when important for a process or workflow
- [[https://ronjeffries.com/articles/016-0607/yaks/][Yaks]]
- https://www.reddit.com/r/programming/comments/150sr0g/walter_bright_programming_language_ideas_that/
- https://www.freecodecamp.org/news/learn-c-programming-classic-book-dr-chuck/
- https://www.technig.com/best-github-repositories-every-programmer/
- https://missing.csail.mit.edu/
  - https://www.reddit.com/r/programming/comments/eyagcd/the_missing_semester_of_your_cs_education_mit/
- https://www.reddit.com/r/ProgrammerHumor/comments/wqugqh/i_thought_programming_was_hard_until_i_found_this/
- https://goalkicker.com/
- https://krisbogdanov.com/personal-projects-before-first-internship/?fbclid=IwAR1hna-buWCrhA7pd2qRp-NkNXGEN0pUrUNoll8peSpOK6F3H-ceeevkcNE
- [[https://www.gnu.org/prep/standards/standards.html][GNU Coding Standards]]
- object oriented
  - http://fredhutchio.github.io/intro-bioinformatics/06-python-oop.html#/now-lets-add-some-functionality
- good software practices
  - https://x-team.com/blog/programming-best-practices/
- miscellaneous
  - - https://www.reddit.com/r/ProgrammerHumor/comments/f4dbmj/saw_this_on_dank_memes/
- https://www.reddit.com/r/programming/comments/f9ut5f/the_most_recommended_programming_books_of_alltime/
- https://stackoverflow.com/questions/1711/what-is-the-single-most-influential-book-every-programmer-should-read
- https://altbulletin.com/how-to-code-like-the-top-programmers-at-nasa-10-critical-rules/
- principles and philosophy
  - [[https://en.wikipedia.org/wiki/Robustness_(computer_science)][robustness]]
  - transparency
  - reproducibility
- paradigms
  - object-oriented programming
    - inheritance
    -
    - objects relate to real-world entities
    - 'bottom-up'
    - class: logical grouping specifying components of specific objects
      - class variable: shared by all instances
      - instance variable: unique to each instance=object in class
      - data member: holds data associated with class and its objects
    -
  - procedure-oriented- sequence of actions is more important to data
    - 'top down'
**** Ideas
:PROPERTIES:
:ID:       47C83191-1387-4161-9E0C-A5F7EC1A8914
:END:


*** Hardware
:PROPERTIES:
:ID:       5186083B-28F0-47B1-9CED-E8F8C4181C1C
:END:
- https://android.izzysoft.de/applists/category/named/sensors
**** Computers
:PROPERTIES:
:ID:       6A924528-7B1B-406E-85DB-8D2497F5D42A
:END:

- http://www.voltaicsystems.com/blog/powering-a-raspberry-pi-from-solar-power/
https://www.upwork.com/signup/create-account/freelancer_direct

https://www.dataquest.io/blog/apartment-finding-slackbot/

https://www.codecademy.com/learn/make-a-website/?utm_source=customerio&utm_campaign=back_to_school&utm_medium=email_newsletter&utm_content=buttom_maw

 [[http://www.linuxfromscratch.org/][build custom linux from source code]]

 [[http://lcorg.blogspot.com/2009/02/project-building-all-text-linux.html][build all text linux from scratch]]

 https://www.reddit.com/r/IWantToLearn/comments/4xmdjm/iwtl_how_to_create_a_website_and_a_mobile_app_and/

 https://www.launchcode.org/?referrer_token=0cUMHJqETlQ&utm_campaign=Reddit&utm_medium=Reddit&utm_source=Reddit

 - Porteus Linux build
   - links
     - [[http://build.porteus.org/][Porteus website]]
     - [[http://www.porteus.org/faq.html][FAQ]]
 - bootable usb from command line via [[http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-mac-osx][this link]]

***** Work
:PROPERTIES:
:ID:       4E312964-5ECE-45A8-8CD6-2329FF5D1ECB
:END:

****** Tasks
:PROPERTIES:
:ID:       3D7769D5-8640-4B31-B95B-5FB701659019
:END:

****** Projects
:PROPERTIES:
:ID:       46E13DE1-A3DB-4857-9FF6-1E8667D0FA4D
:END:

****** Ideas
:PROPERTIES:
:ID:       13F57CC1-414D-43A7-AE5C-98DA502B3C13
:END:

***** Notes
:PROPERTIES:
:ID:       C7BC3009-24C5-4E14-94A3-7E5F0578ED12
:END:

- [[https://www.codeschool.com/][Code School]]
- git
- source control
- - [[https://www.codeschool.com/][Code School]]
http://www.nand2tetris.org/
https://m.reddit.com/r/InternetIsBeautiful/comments/4g7nvl/simple_tutorial_on_how_to_make_your_door_tell_you/
Notes
Code, Programming, Scripting
Google
Hacking
Networks
Internet
Operating Systems
Chrome
Windows 7
Software
Website Design
Hardware
Building Computers
Electronics

**** Robotics
:PROPERTIES:
:ID:       BD627071-3342-4C6A-9B80-EAD8235847A8
:END:



*** Networks and Systems
:PROPERTIES:
:ID:       C6BA678A-7E03-4C41-9CAB-A5EEFC48185D
:END:
- https://dev.to/radpangolin/persistent-ssh-sessions-with-tmux-25dm
- https://github.com/donnemartin/system-design-primer
- ssh/scp
    - https://askubuntu.com/questions/970794/tab-completion-doesnt-work-over-ssh
    - [[file:~/.ssh/config][config]]
    - rsa:
    - [[http://www.thegeekstuff.com/2008/11/3-steps-to-perform-ssh-login-without-password-using-ssh-keygen-ssh-copy-id][keygen for no password]]
    - [[https://help.ubuntu.com/community/SSH/OpenSSH/Configuring][configuring to receive]]
    - [[https://stackoverflow.com/questions/10197559/ssh-configuration-override-the-default-username][stack: ssh configuration: override the default username]]
    - [[https://stackoverflow.com/questions/954302/how-to-make-a-programme-continue-to-run-after-log-out-from-ssh][stack: How to make a programme continue to run after log out from ssh? {duplicate}]]
*** Human-computer Interaction
:PROPERTIES:
:ID:       72EDC65E-5721-48AF-9FCA-69497D45DFD0
:END:

*** Applied Computing
:PROPERTIES:
:ID:       65BC9D56-26D2-47F1-A54E-40F151FAF357
:END:

- https://apps.ionic.io/app/350491ff/overview
- https://www.raywenderlich.com/117609/sketch-indie-developers
- [[https://ionicframework.com/getting-started/][Iconic IDE for IOS]]
- https://www.thesoftwareguild.com/introduction-web-development/

**** [[file:~/Box%20Sync/org/career.org::*Computational%20Biology%20and%20Bioinformatics][Computational Biology]]
:PROPERTIES:
:ID:       BAD5BF49-9818-4BA4-AA62-4406F18FF1FB
:END:

**** Statistical Computing                                           :career:
:PROPERTIES:
:ID:       3C0D4F95-61BB-4E67-86D1-D9376B25014A
:END:
:LOGBOOK:
CLOCK: [2020-03-18 Wed 15:47]--[2020-03-18 Wed 16:01] =>  0:14
CLOCK: [2018-12-11 Tue 13:40]--[2018-12-11 Tue 14:37] =>  0:57
CLOCK: [2018-11-25 Sun 09:29]--[2018-11-25 Sun 09:55] =>  0:26
CLOCK: [2017-08-08 Tue 20:11]--[2017-08-08 Tue 20:35] =>  0:24
CLOCK: [2017-07-11 Tue 14:45]--[2017-07-11 Tue 15:15] =>  0:30
CLOCK: [2017-04-18 Tue 11:17]--[2017-04-18 Tue 11:28] =>  0:11
:END:
-

- [[id:F80F3FAF-1D79-40F5-934B-F74D19143DBD][Probability and Statistics]]
- http://statsthinking21.org/index.html
- https://www.graphpad.com/guides/prism/7/statistics/index.htm?stat_howto_survival.htm
- https://sctyner.github.io/OpenForSciR/
- https://www.reddit.com/r/statistics/comments/bzrco1/introduction_to_statistical_learning_anything/
- cite:downey2011
- [[https://www.lunametrics.com/blog/2018/04/20/data-studio-calculated-fields/][google data studio]]
-
***** [[id:F9ACCF3D-896B-4FC4-92FD-31A2D6E977DD][LINK TO R Statistical Computing]]
:PROPERTIES:
:ID:       b3db5bd9-2abd-418f-8104-8ffe22ef5ad6
:END:
***** Ideas
:PROPERTIES:
:ID:       65A4EBD3-045B-4FD8-AE07-7BA6F3D6954E
:END:

- [[http://stat-computing.org/awards/jmc/winners.html][John Chambers Award]]
- https://www.reddit.com/r/dataisbeautiful/comments/64y44g/the_mostupvoted_comments_in_reddit_threads_arent/
- build standard data models in R for lab tests and sequencing
- https://www.reddit.com/r/dataisbeautiful/comments/640me5/pepsi_ad_sparked_20000_increase_in_social_media/
- https://www.reddit.com/r/science/comments/641h3y/science_discussion_series_the_importance_of/


 [[file:~/Box%20Sync/statistical_computing/Scanbot%20Sep%2024,%202016%2015.36.pdf][a workthrough]]



 https://learnr.wordpress.com/2009/03/17/ggplot2-barplots/

 https://drive.google.com/file/d/0B4udF24Yxab0S1hnZlBBTmgzM3M/view

 http://blog.revolutionanalytics.com/2016/09/pirates-guide-to-r.html

     https://www.reddit.com/r/datascience/comments/53f6nb/gaining_sql_experinence/

 https://www.reddit.com/r/datascience/comments/51es6d/which_online_courses_should_i_take/

 [[file:~/Box%20Sync/comp_bio/Carlson,13%20Intermediate%20R%20bioconductor%20for%20sequencing%20analysis.pdf][Carlson,13 Intermediate R bioconductor for sequencing analysis]]

 http://www.ats.ucla.edu/stat/r/seminars/intro.htm

 https://r-podcast.org/

 http://eli.thegreenplace.net/2016/drawing-animated-gifs-with-matplotlib

 https://cran.r-project.org/web/views/ReproducibleResearch.html

 cite:schulte12_multi_languag_comput_envir_liter

 https://cran.r-project.org/doc/Sysmanuals/r-release/R-admin.html

 https://www.bioconductor.org/help/course-materials/2016/CSAMA/

 https://www.bioconductor.org/help/course-materials/

 http://manuals.bioinformatics.ucr.edu/home/R_BioCondManual


 http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3444174/

 http://www.leeds.ac.uk/educol/documents/00002182.htm

 https://www.dataquest.io/blog/build-a-data-science-portfolio/

 http://r4ds.had.co.nz/index.html

 https://bioconductor.org/packages/release/bioc/html/RDAVIDWebService.html

 [[file:~/Box%20Sync/library/Cumming,14%20The%20new%20statistics%20why%20and%20how.pdf][Cumming,14 The new statistics why and how]]

 http://www.r-bloggers.com/adding-metadata-to-variables/

 http://vissoc.co/

 https://www.r-bloggers.com/run-remote-r-in-emacs-with-ess/

 http://piiq.co.uk/Stats/


 per-column classifier
 per-column pop stat
 per dataframe data screening- incompletes

 idea for R- a solve for all possible relationships script
 http://www.r-bloggers.com/one-function-to-run-them-all-or-just-eval/

 see the runif function

 how to require packages on RStudio load?


 http://mgalarnyk.github.io/Clustering.html

****** statistical testing logic function
:PROPERTIES:
:ID:       CB567192-D35F-4202-87D9-3E05A48E826F
:END:

#+BEGIN_SRC python
# Ask for the number and store it in userNumber
userNumber = raw_input('Give me an integer number: ')

try:
    # Try to convert the user input to an integer
    userNumber = int(userNumber)
# Catch the exception if the input was not a number
except ValueError:
    userNumber = 0
else:
    # Get the square of the number
    # userNumber**2 is the same as saying pow(userNumber, 2)
    userNumber = userNumber**2

# Print square of given number
print 'The square of your number is: ' + str(userNumber)

#+END_SRC

#+RESULTS:

#+BEGIN_SRC emacs-lisp
(+ 3 4)

; printing
(message "hi")

; printing variable values
(message "Her age is: %d" 16)        ; %d is for number
(message "Her name is: %s" "Vicky")  ; %s is for string
(message "My list is: %S" (list 8 2 3))  ; %S is for any lisp

#+END_SRC

#+RESULTS:
: My list is: (8 2 3)

****** Notes
:PROPERTIES:
:ID:       8EB96C51-96FD-4502-A325-A003FBE788B5
:END:

 http://stackoverflow.com/questions/1295955/what-is-the-most-useful-r-trick

 https://r-dir.com/reference/crib-sheets.html

 http://blog.stackoverflow.com/2016/07/introducing-stack-overflow-documentation-beta/

 https://m.reddit.com/r/science/comments/4s2bgu/not_even_scientists_can_easily_explain_pvalues/d55ymc4

 [[https://www.datacamp.com/community/tutorials/15-easy-solutions-data-frame-problems-r][good intro to data frames]]

 [[http://projects.fivethirtyeight.com/p-hacking/][Hack Your Way To Scientific Glory]]

 http://www.r-bloggers.com/

 efficient scripting philosophy- first get something that works, then reduce any step done more than twice


 http://bioconnector.org/workshops/lessons/r/r-intro/
 [[https://stackoverflow.com/questions/13656699/update-r-using-rstudio/17625368#17625368][when bioconductor moves to new R]]
 to install bioconductor packages, use biocite:

 remove from a list
 change column name:
 [[http://blog.revolutionanalytics.com/2009/01/10-tips-for-making-your-r-graphics-look-their-best.html][summary of visualization export]]
 [[http://science.nature.nps.gov/im/datamgmt/statistics/r/bashs/manipulation.cfm][R data manipulation guide from the National Parks Service]]
 [[https://www.google.com/search?q=sweave&oq=sweave&aqs=chrome..69i57.3986j0j7&sourceid=chrome&ie=UTF-8][R to LaTEX- sweave]]
 [[https://www.datacamp.com/community/tutorials/15-easy-solutions-data-frame-problems-r][good intro to data frames]]

******* Resources
:PROPERTIES:
:ID:       03E425D5-5700-4071-9DD3-B5EA63F15617
:END:

 [[http://www.ats.ucla.edu/stat/r/][UCLA R resources]]

 R datasets package
 http://stat.ethz.ch/R-manual/R-patched/library/datasets/html/00Index.html

 Introduction to R Programming Youtube Tutorials, see R_training
 https://www.youtube.com/watch?v=cX532N_XLIs&list=PLqzoL9-eJTNBDdKgJgJzaQcY6OXmsXAHU

 natural log is just log()

 http://rattle.togaware.com/ , http://onepager.togaware.com/

 book list
 https://www.r-project.org/doc/bib/R-books.html

 ebook from becker
 http://www.crcnetbase.com/doi/book/10.1201/9781439827567

 [[https://cran.r-project.org/doc/FAQ/R-FAQ.html][Hornik,15 R FAQ]]
 Packages
 To find out which additional packages are available on your system, type library() at the R prompt
 You can “load” the installed package pkg by library(pkg)
 You can then find out which functions it provides by typing one of library(help = pkg) help(package = pkg)
 You can unload the loaded package pkg by detach("package:pkg", unload = TRUE)
 R posting guidelines
 R fo Mac OS FAQ
 dataset- collection of variables in columns

******** [[https://www.datacamp.com/courses/data-analysis-the-data-table-way][Datacamp data.table Course]]
:PROPERTIES:
:ID:       3D3CC243-34CC-4948-8E8A-2CFB811E54B4
:END:
     :LOGBOOK:
     CLOCK: [2016-05-17 Tue 11:09]--[2016-05-17 Tue 11:35] =>  0:26
     :END:
 data.table is a special subtype of data.frame


 based on i, j , by

 - i: select row
 - j: select column
 - by:

******* Reference
:PROPERTIES:
:ID:       20D723FA-8590-4E3E-B606-064B008B550D
:END:

******** Saving data
:PROPERTIES:
:ID:       015B949A-D170-48AD-8F00-4536CEB37222
:END:

 | type      | function | command            |
 | workspace | save     | save.image(<FILE>) |
 |           | load     | load(<FILE>)       |

******** Packages
:PROPERTIES:
:ID:       4F9B3CB8-66B9-4BA2-8975-CE794E2A6E52
:END:

********* Installing
:PROPERTIES:
:ID:       7DC2696F-E48E-4A80-BE7D-ACA1A2C3ABF2
:END:

********** From command line
:PROPERTIES:
:ID:       0529DC34-2624-453C-A22A-67D434E34EB8
:END:
      CLOCK: [2016-03-29 Tue 14:01]--[2016-03-29 Tue 14:13] =>  0:12
 [[https://stat.ethz.ch/R-manual/R-devel/library/utils/html/INSTALL.html][man]]

******** () around code means run then print result
:PROPERTIES:
:ID:       FEF63C80-B199-41CE-9C2F-81C8717D2029
:END:

*** Teaching Computers and Computer Science
:PROPERTIES:
:ID:       1336B66E-EDFE-4255-A772-C592843A9DCD
:END:

- - whiteboard youtube videos
  - http://www.videoscribe.co/
  - http://www.makeuseof.com/tag/how-to-make-whiteboard-videos-for-your-website/
- [[http://blog.hackerearth.com/introduction-naive-bayes-algorithm-codes-python-r?utm_source=linkedin-post&utm_campaign=naivebayes&utm_medium=he-handle][good example of a teaching handout]]
  - [[http://cole-maclean.github.io/blog/RNN-Based-Subreddit-Recommender-System/][another one]]
- link to my bioionformatics teaching sessions

*** Operating Systems
:PROPERTIES:
:ID:       16DB2FD8-1988-48E4-8D8D-E69398823A70
:END:

where are osx dameons?
- Windows
  - http://stackoverflow.com/questions/7195503/setting-up-a-cron-job-in-windows
- Containers and virtual machines
  - [[https://stackoverflow.com/questions/16047306/how-is-docker-different-from-a-normal-virtual-machine][Docker vs. virtual machine]]
    - VMs have only virtual access to kernal through hypervisor
    - containers run apps natively on real kernal
    - Docker image contains only the differences from the base
    - Docker shares the kernal, VM does not
    - Containers have only libraries and settings to make software work
    - https://github.com/wsargent/docker-cheat-sheet
    - Containers can share kernal with other containers
    - https://www.docker.com/what-container
      - [[file:compend.org_imgs/20170828_091936_19148Pqg.png]]
  - Virtual Box
    - copying a VM- go to export appliance
    - in VirtualBox, double-press <CMD> to tab out to mac programs

**** image development
:PROPERTIES:
:CREATED:  [2019-05-29 Wed 14:47]
:ID:       82b8ccaa-3bb3-4a71-8123-bce4f20c5242
:END:
:LOGBOOK:
CLOCK: [2019-05-29 Wed 14:47]--[2019-05-29 Wed 15:05] =>  0:18
:END:

**** UNIX-based                                             :software:career:
:PROPERTIES:
:ID:       BDC42DA2-A632-4FB7-A586-E100B2A045DC
:CREATED:  [2019-08-15 Thu 16:17]
:END:
:LOGBOOK:
CLOCK: [2020-06-25 Thu 07:47]--[2020-06-25 Thu 08:13] =>  0:26
CLOCK: [2020-02-12 Wed 10:15]--[2020-02-12 Wed 10:19] =>  0:04
CLOCK: [2019-09-18 Wed 14:02]--[2019-09-18 Wed 14:40] =>  0:38
CLOCK: [2019-08-30 Fri 09:48]--[2019-08-30 Fri 09:53] =>  0:05
CLOCK: [2019-08-15 Thu 16:15]--[2019-08-15 Thu 16:45] =>  0:30
CLOCK: [2019-05-21 Tue 10:42]--[2019-05-21 Tue 11:04] =>  0:22
CLOCK: [2019-05-15 Wed 16:15]--[2019-05-15 Wed 19:33] =>  3:18
CLOCK: [2019-03-06 Wed 10:15]--[2019-03-06 Wed 12:14] =>  1:59
CLOCK: [2019-03-06 Wed 09:30]--[2019-03-06 Wed 10:00] =>  0:30
CLOCK: [2019-01-12 Sat 08:41]--[2019-01-12 Sat 08:51] =>  0:10
CLOCK: [2018-09-10 Mon 14:04]--[2018-09-10 Mon 14:43] =>  0:39
CLOCK: [2018-04-28 Sat 18:04]--[2018-04-28 Sat 18:05] =>  0:01
CLOCK: [2018-04-28 Sat 17:43]--[2018-04-28 Sat 17:45] =>  0:02
CLOCK: [2017-11-29 Wed 14:14]--[2017-11-29 Wed 15:00] =>  0:46
CLOCK: [2017-10-25 Wed 10:37]--[2017-10-25 Wed 10:48] =>  0:11
CLOCK: [2017-10-25 Wed 09:48]--[2017-10-25 Wed 10:23] =>  0:35
CLOCK: [2017-10-12 Thu 13:37]--[2017-10-12 Thu 13:40] =>  0:03
CLOCK: [2017-08-07 Mon 08:42]--[2017-08-07 Mon 09:14] =>  0:32
:END:
- for config https://stackoverflow.com/questions/1019116/using-ls-to-list-directories-and-their-total-sizes
- configuration management
  - https://en.wikipedia.org/wiki/Ansible_(software)
***** Processes and commands
:PROPERTIES:
:ID:       f6c816d4-6f1a-4954-bf90-ed90de4d0979
:END:
:LOGBOOK:
CLOCK: [2021-08-25 Wed 08:33]--[2021-08-25 Wed 09:13] =>  0:40
:END:
  | du -shc . | [[https://stackoverflow.com/questions/1019116/using-ls-to-list-directories-and-their-total-sizes][disk usage in current dir]]                       |
  | l         | lscpu grep -E '^Thread  ^Core  ^Socket  ^CPU\(' |

  | change password                     | passwd                      |
  | disk usage, top level               | du -h --summarize           |
  | see total disk usage                | df -h                       |
  | see files location on physical disk | df <PATH>                   |
  | see distro                          | lsb_release -a              |
  | see system disks                    | lsblk                       |
  | add to path (temporary?)            | export PATH=$PATH:/new/path |

- account management
  - https://www.google.com/search?q=unix+create+user

***** general
:PROPERTIES:
:ID:       b387cb19-73dd-4783-8e57-8da47837e129
:END:
- guides, tutorials, cheatsheets
  - http://www.ee.surrey.ac.uk/Teaching/Unix/
  - [[http://linuxcommand.org/][LinuxCommand.org]]
  - [[http://korflab.ucdavis.edu/Unix_and_Perl/current.html][UC Davis Unix and Perl for biologists]]
  - http://www.chm.bris.ac.uk/compres/unix/index.html
  - http://www.commandlinefu.com/commands/browse
  - [[http://catb.org/jargon/html/U/Unix.html][Unix name origin]]
  - [[https://sanctum.geek.nz/arabesque/unix-as-ide-introduction/][Unix as IDE: Introduction]]
  - [[http://cecs.wright.edu/~p/mateti/Courses/333/Top/index.html][Wright State CEG 333: Introduction to Unix]]
  - [[http://www.commandlinefu.com/commands/browse/sort-by-votes][commandlinefu]]
  - [[https://unix.stackexchange.com/questions/12762/how-do-i-temporarily-bypass-an-alias-in-tcsh][How do I temporarily bypass an alias in tcsh?]]
  - [[https://unix.stackexchange.com/][stack: unix]]
  - [[https://en.wikibooks.org/wiki/Guide_to_Unix][wikibooks: unix]]
  - http://www.thegeekstuff.com/
  - [[http://mywiki.wooledge.org/FullBashGuide][Full bash guide]]
  - https://www.reddit.com/r/commandline/comments/9md3pp/a_very_useful_bashrc_file/
  - https://sneak.berlin/20191011/stupid-unix-tricks/
- standards and best practices
  - POSIX
  - naming conventions- [[https://unix.stackexchange.com/questions/49008/for-filenames-are-underscores-or-dashes-more-common-in-unix-file-names][stack: For filenames, are underscores or dashes more common in Unix file names? {closed}]]
- file structure
  - https://unix.stackexchange.com/questions/4186/what-is-usr-local-bin
- POSIX
  - [[https://github.com/dylanaraps/pure-sh-bible][pure sh bible]]
***** Tools (software)
:PROPERTIES:
:ID:       7b10faa5-721d-48bb-aa15-26cd3d1143dd
:END:
PROPERTIES:
:ID:       4a8bbace-0e0a-4eb2-92fd-03048d6f1ec5
:END:
:LOGBOOK:
CLOCK: [2020-06-25 Thu 08:25]--[2020-06-25 Thu 08:30] =>  0:05
:END:
- ifconfig
  - [[file:/usr/share/man/man8/ifconfig.8.gz]]
- https://github.com/denisidoro/navi
- cron
  - commands
    | function                          | command                                   |
    |-----------------------------------+-------------------------------------------|
    | access user-specific crontab file | env EDITOR=nano sudo crontab -e -u <USER> |
    | see jobs                          | sudo crontab -u <USER> -l                 |
    | create job                        | sudo crontab -u <USER> -e                 |
  - [[https://stackoverflow.com/questions/4984725/how-to-test-a-weekly-cron-job][Test]]
  - [[https://askubuntu.com/questions/419548/how-to-set-up-a-root-cron-job-properly?noredirect=1&lq=1][Access root]]
  - [[https://crontab.guru/every-week][Guide to times]]
  - [[https://ole.michelsen.dk/blog/schedule-jobs-with-crontab-on-mac-osx.html][On macos]]
  - https://opensource.com/article/17/11/how-use-cron-linux
- curl
  - https://www.reddit.com/r/commandline/comments/am28qh/try_curl_httpwttrin_image_of_a_shell/
- cut
- du
  - - https://stackoverflow.com/questions/15141588/exclude-all-permission-denied-messages-from-du
- grep
  - https://www.thegeekstuff.com/2011/10/grep-or-and-not-operators/
  - https://unix.stackexchange.com/questions/37313/how-do-i-grep-for-multiple-patterns-with-pattern-having-a-pipe-character/37316
- head and tail
  - to trim file header lines
    - e.g.: tail -n +2 file.txt > file.stdout
- https://github.com/tqdm/tqdm/blob/master/README.rst
- https://www.reddit.com/r/commandline/comments/7ejk45/what_are_some_of_awesome_curl_web_commands/
- https://www.reddit.com/r/commandline/comments/ad6ryp/10_tools_to_power_up_your_command_line_dev/
- http://www.theunixschool.com/p/awk-sed.html
- ls
  - [[https://unix.stackexchange.com/questions/48492/list-only-regular-files-but-not-directories-in-current-directory][List only regular files (but not directories) in current directory]]
  - file size w/ ls -l --block-size=M
- [[https://askubuntu.com/questions/185661/hide-files-ending-in-tilde][ls- hide files ending in tilde]]
- mail
  -
- make
  - - https://stackoverflow.com/questions/3239343/make-install-but-not-to-default-directories
- [[- https://www.xpdfreader.com/pdftotext-man.html][pdftotext]]
- pigz
  - https://zlib.net/pigz/
- samba share
  - - https://superuser.com/questions/1337257/clients-cant-create-symlinks-on-samba-share
- rsync
  - [[https://rsync.samba.org/]]
  - commands
    |----------+---------|
    | function | command |
    |----------+---------|
    | <35>     | <35>    |
    |          |         |
  - processes
  - standards and best practice
  - [[https://rsync.samba.org/documentation.html][documentation]]
  - applications
  - reference
    - [[file:~/.basecamp/emacs/public_yasnippets/org-mode/software]]
- to concat csvs- https://www.quora.com/How-do-you-combine-multiple-csv-files-into-a-single-file-using-the-command-line
- unzip - https://askubuntu.com/questions/994731/how-to-skip-unzipping-a-file-that-already-exists
- Unison
  - commands
    |----------+---------|
    | function | command |
    |----------+---------|
    | <35>     | <35>    |
    |          |         |
  - processes
  - [[https://www.cis.upenn.edu/~bcpierce/unison/download/releases/stable/unison-manual.html][documentation]]
  - applications
- X11
  - https://www.windowmaker.org/
- GNU tools
  - make
    - tutorial https://github.com/kyclark/make-tutorial
  - grep
    - https://stackoverflow.com/questions/19380925/grep-a-large-list-against-a-large-file
  - nohup
    - https://unix.stackexchange.com/questions/373461/open-less-scrolled-to-the-end
  - grep
    - [[https://www.macworld.com/article/1041504/software-development/jangeekfactor.html][Macworld: Find anything with grep]]
****** GNU and GNU tools
:PROPERTIES:
:ID:       76c4836c-fe3f-4948-86dd-25d8df38d1af
:END:
- sort and uniq
- gnome-terminal geometry https://www.reddit.com/r/bash/comments/imn867/setting_window_size_for_script/
- [[https://www.gnu.org/prep/standards/standards.html][GNU Coding Standards]]
- diff
  - https://stackoverflow.com/questions/4717250/extracting-unique-values-between-2-sets-files
- echo
  - https://www.google.com/search?q=gnu+echo+formatting+best+practices
  - [[https://unix.stackexchange.com/questions/65803/why-is-printf-better-than-echo][printf vs echo]]
  - https://www.google.com/search?q=bash+echo+tab
- find
  - https://stackoverflow.com/questions/12522269/how-to-find-the-largest-file-in-a-directory-and-its-subdirectories
  - https://unix.stackexchange.com/questions/140367/finding-all-large-files-in-the-root-filesystem
  - https://www.google.com/search?q=bash+find+and+delete
  - https://www.google.com/search?q=bash+find+by+date
    - https://stackoverflow.com/questions/158044/how-to-use-find-to-search-for-files-created-on-a-specific-date
- printf
  - [[https://unix.stackexchange.com/questions/65803/why-is-printf-better-than-echo][printf vs echo]]
- coreutils
  - sort
    - https://unix.stackexchange.com/questions/76049/what-is-the-difference-between-sort-u-and-sort-uniq
- nohup
  - https://unix.stackexchange.com/questions/373461/open-less-scrolled-to-the-end
******* gnu parallel
:PROPERTIES:
:ID:       e13df1a8-f5f1-4495-91a7-b33ff1c4ab84
:END:
  - - https://www.nas.nasa.gov/hecc/support/kb/using-gnu-parallel-to-package-multiple-jobs-in-a-single-pbs-job_303.html
  - https://stackoverflow.com/questions/36042951/feed-gnu-parallel-with-an-array
  - https://www.msi.umn.edu/support/faq/how-can-i-use-gnu-parallel-run-lot-commands-parallel
  - https://www.biostars.org/p/63816/
  - https://www.biostars.org/p/216905/
  - https://www.gnu.org/software/parallel/man.html#EXAMPLE:-Working-as-xargs--n1.-Argument-appending
******* [[elisp:(with-minibuffer-input (call-interactively 'woman) "wget")][wget]]
:PROPERTIES:
:ID:       15b0cab6-1167-49f0-a5b2-6559c9e62251
:END:
#+begin_src bash :tangle ./src/gtac_wget.sh
# Check for parameters, return usage if empty
if [ $# -ne 2 ]; then
    printf "\n usage: gtac_wget.sh <DIR PREFIX> <GTAC HTML>
           \n wget wrapper for WUSTL GTAC downloads
           \n"
elif [[ ! -r $1 ]]; then
    echo "Directory prefix at $1 is not readable."
else
    wget \
        --continue \
        --directory-prefix $1 \
        --execute robots=off \
        --force-directories \
        --no-host-directories \
        --no-parent \
        --recursive \
        --reject="index.html*" \
        --timestamping \
        $2
fi
#+end_src
- [[https://www.google.com/search?q=wget+force+overwrite][google:wget force overwrite]]
- [[id:a8415f7e-36e1-4641-b909-565b73f79e1b][Chaudhuri medgenome wget]]
- [[https://www.tecmint.com/commandline-download-accelerators-for-linux/amp/][pass list to]]
- [[https://superuser.com/questions/283481/how-do-i-properly-set-wget-to-download-only-new-files][download only on server side change]]
  - AND SET -O !!
- download in background & resume broke  wget -bqc <PATH>
- https://www.google.com/search?q=wget+github+raw
- clobber = overwrite
******* make
:PROPERTIES:
:ID:       5b075f74-e2cf-4d2f-a8f7-db7c64080f47
:END:
- install
  - configure, make, install
    - https://www.tldp.org/HOWTO/Software-Building-HOWTO-3.html
    - https://superuser.com/questions/360178/what-does-make-install-do
  - https://stackoverflow.com/questions/10961439/why-always-configure-make-make-install-as-3-separate-steps
- tutorial https://github.com/kyclark/make-tutorial
- http://blog.byronjsmith.com/makefile-shortcuts.html
- Processes
  - Pass variables
****** gawk
:PROPERTIES:
:ID:       ec6a8328-2003-48ce-b8d0-fd11252d75cd
:END:
- Add a column in middle
  - https://stackoverflow.com/questions/11950641/add-column-to-middle-of-tab-delimited-file-sed-awk-whatever
- output as tsv
  awk -v FS='\t' -v OFS='\t' ...
  - https://stackoverflow.com/questions/5374239/tab-separated-values-in-awk
- https://www.google.com/search?q=awk+filter+duplicates+by+column&oq=awk+filter+duplicates+by+column&aqs=chrome..69i57.7808j0j1&sourceid=chrome&ie=UTF-8
- commands
  |----------------------+-----------------|
  | function             | command         |
  |----------------------+-----------------|
  | <35>                 | <35>            |
  | set delimiter        | -F<DELIM>       |
  | set output delimiter | OFS = "<DELIM>" |
  |                      |                 |
- processes
  - [[https://www.google.com/search?q=awk+filter+to+column+less+than][google:awk filter to column less than]]
  - https://www.google.com/search?q=awk+filter+greater+than
  - https://www.google.com/search?q=awk+pass+variable
  - [[https://stackoverflow.com/questions/19149731/use-awk-to-find-average-of-a-column][find average]]
  - https://www.google.com/search?q=awk+print+except+first
  - sorting
    - [[https://stackoverflow.com/questions/17048188/how-to-use-awk-sort-by-column-3][sort column]]
    - [[https://stackoverflow.com/questions/5917576/sort-a-text-file-by-line-length-including-spaces][by line length]]
  - variables
    - [[https://stackoverflow.com/questions/19075671/how-do-i-use-shell-variables-in-an-awk-script][external from shell]]
    - https://www.linuxnix.com/awk-scripting-learn-awk-built-in-variables-with-examples/
  - [[https://stackoverflow.com/questions/17001849/awk-partly-string-match-if-column-word-partly-matches][stack: awk partly string match (if column/word partly matches)]]
  - [[https://stackoverflow.com/questions/47091464/print-for-loop-input-filename-on-piped-awk-output][file name as variable]]
- standards and best practice
- documentation
  - [[http://www.tutorialspoint.com/awk/awk_basic_examples.htm][AWK - Basic Examples]]
- applications
  - [[http://reasoniamhere.com/2013/09/16/awk-gtf-how-to-analyze-a-transcriptome-like-a-pro-part-1/][AWK GTF! How to Analyze a Transcriptome Like a Pro]]
- reference
  - [[file:~/.basecamp/emacs/public_yasnippets/org-mode/software]]
****** grep
:PROPERTIES:
:ID:       024b269b-27ca-492d-981f-d8f9083a38d2
:END:
- Processes
  - https://www.google.com/search?q=grep+or
  - grep through subdirectories
    grep -rl "string" /path
    - https://askubuntu.com/questions/55325/how-to-use-grep-command-to-find-text-including-subdirectories
  - https://www.google.com/search?q=grep+search+in+all+text+files+in+directory
  - https://www.google.com/search?q=grep+phrase+with+space
  - https://stackoverflow.com/questions/19380925/grep-a-large-list-against-a-large-file
  - grep -r --unclude \*.R "as.Date" ~/
- [[https://www.macworld.com/article/1041504/software-development/jangeekfactor.html][Macworld: Find anything with grep]]
****** [[https://www.gnu.org/software/sed/][sed]]
:PROPERTIES:
:ID:       69e65a70-878e-4f58-a1d1-14ca876a7c12
:END:
- https://www.reddit.com/r/commandline/comments/qsbmji/useful_sed_scripts_patterns/
- https://www.google.com/search?q=sed+replace+space+with+tab
- [[https://stackoverflow.com/questions/19151954/how-to-use-variables-in-a-command-in-sed][use shell variables]]
- [[https://stackoverflow.com/questions/5410757/how-to-delete-from-a-text-file-all-lines-that-contain-a-specific-string][delete lines with pattern]]
- [[https://unix.stackexchange.com/questions/99350/how-to-insert-text-before-the-first-line-of-a-file#:~:text=14%20Answers&text=Use%20sed%20's%20insert%20(%20i,text%20in%20the%20preceding%20line.&text=Also%20note%20that%20some%20non,effect%20as%20with%20GNU%20sed%20).&text=Echo%20is%20used%20to%20get%20the%20text.][insert before first line]]
- https://www.google.com/search?q=sed+remove+first+line
- https://www.google.com/search?q=sed+remove+lines+containting+string
- [[https://www.youtube.com/watch?v=3cLbeYQ2Veg][youtube: sed commands in linux]]
- [[http://www.brunolinux.com/02-The_Terminal/Find_and%2520Replace_with_Sed.html][Find and replace with SED]]
- Then, using sed: sed -e '5,10d;12d' filename (deletes lines 5-10 and 12)
- https://www.google.com/search?q=sed+add+above+first+line
****** ssh
:PROPERTIES:
:ID:       054f0013-9355-4194-8fbd-646b54db2f70
:END:
- permissions setup
  #+begin_src bash
chmod 700 ~/.ssh
chmod 600 ~/.ssh/id_rsa
chmod 600 ~/.ssh/id_rsa.pub
#+end_src
- private key must be
- computer https://dev.to/zduey/how-to-set-up-an-ssh-server-on-a-home-computer
- http://www.linuxproblem.org/art_9.htm
- multiplexing connections- https://www.techrepublic.com/article/how-to-use-multiplexing-to-speed-up-the-ssh/
- https://stackoverflow.com/questions/12715233/why-can-i-ping-a-server-but-not-connect-via-ssh
- https://serverfault.com/questions/334448/why-is-ssh-password-authentication-a-security-risk
- https://dev.to/zduey/how-to-set-up-an-ssh-server-on-a-home-computer
***** ideas
:PROPERTIES:
:ID:       bd78d1e4-cdac-4ccd-af57-e410e8c0cc23
:END:
- idea for citrix script- - https://www.reddit.com/r/commandline/comments/fyla88/ux_design_principles_for_command_line_interfaces/
- ideas- check disk space https://www.cyberciti.biz/tips/shell-script-to-watch-the-disk-space.html
- GNU - [[https://www.gnu.org/help/help.html][Helping GNU]]
- [[https://www.reddit.com/r/commandline/comments/7d5fwa/jobson_automatically_turn_commandline/][reddit: automatically turn command-line applications into webapps]]
***** MacOS
:PROPERTIES:
:ID:       80A0FABE-EB39-4BFC-8478-8044E6D84761
:END:

- http://www.theinstructional.com/guides/disk-management-from-the-command-line-part-2
- https://www.howtogeek.com/312755/what-is-the-process-windowserver-and-why-is-it-running-on-my-mac/
- [[https://apple.stackexchange.com/questions/294013/how-to-allow-install-of-non-app-store-or-identified-developers-on-macos-sierra?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa][How to allow install of non app store or identified developers on MacOS Sierra]]
- Command Table
  | Function             | Command                   | Notes                                                                                                               |
  |----------------------+---------------------------+---------------------------------------------------------------------------------------------------------------------|
  |                      |                           | <20>                                                                                                                |
  | List process to kill | ps -A\ grep -m1 <PROCESS> | https://stackoverflow.com/questions/11546765/how-to-get-the-pid-of-a-process-by-giving-the-process-name-in-mac-os-x |
  | Kill process         | kill -9 <PROCESS ID>      | http://blog.houen.net/kill-program-mac-os-x-terminal/                                                               |
  |                      |                           |                                                                                                                     |
- https://stackoverflow.com/questions/17935301/how-to-force-mac-os-to-open-search-with-google-in-chrome
- Window management
  - Default layouts
    - https://github.com/jigish/slate
    - http://autumnapps.com/breeze/
    - https://apple.stackexchange.com/questions/3133/how-do-i-make-windows-save-their-position-on-screen-after-re-attaching-a-display
- [[http://osxdaily.com/2010/06/09/screen-capture-in-mac-os-x/][Screen capture]]
- https://apple.stackexchange.com/questions/55432/keyboard-shortcut-for-restoring-applications-from-the-mac-os-x-dock
- hide dock: <CMD>+<ALT>+d
- [[http://www.chriswrites.com/how-to-view-and-kill-processes-using-the-terminal-in-mac-os-x/][How to View and Kill Processes Using the Terminal in Mac OS X]]
- Check out the brew edit command
http://www.mitchchn.me/2014/os-x-terminal/

  - osx
    - [[http://apple.stackexchange.com/?tab=featured][mac stack exchange]]
    - [[http://zmjones.com/mac-setup/][setting up osx for data analysis]]
    - [[http://osxdaily.com/2009/02/25/show-hidden-files-in-os-x/][hidden files]]

**** Android
:PROPERTIES:
:ID:       8773070e-c8d7-4edf-8ee7-e6de1aa6b1a3
:END:
- https://cellencooper.medium.com/how-to-change-ok-google-to-a-different-phrase-bd6ca322398#:~:text=After%20launching%20the%20app%2C%20tap,to%20call%20your%20Google%20Assistant.

**** Android → Linux mirror
- https://chatgpt.com/c/671b9551-ded0-8005-88f4-5569ab769f63
- https://www.google.com/search?q=android+block+number
- https://github.com/Genymobile/scrcpy
  #+begin_src bash
# for Debian/Ubuntu
sudo apt install ffmpeg libsdl2-2.0-0 adb wget \
                 gcc git pkg-config meson ninja-build libsdl2-dev \
                 libavcodec-dev libavdevice-dev libavformat-dev libavutil-dev \
                 libswresample-dev libusb-1.0-0 libusb-1.0-0-dev

mkdir /tmp/scrcpy
cd /tmp/scrcpy
git clone https://github.com/Genymobile/scrcpy

cd scrcpy

./install_release.sh



sudo adb kill-server
sudo adb start-server
sudo adb devices

adb tcpip 5555

adb connect 192.168.1.12:5555


#+end_src

*** R Statistical Computing                           
:PROPERTIES:
:ID:       F9ACCF3D-896B-4FC4-92FD-31A2D6E977DD
:END:
**** Ansible
:properties:
:header-args:yaml: :tangle ./ansible/playbooks/r-install.yaml
:ID:       36efda17-d1ef-4632-bc33-732071455543
:end:
https://chatgpt.com/c/67d18bbf-d1ec-8005-bbbb-836fd4d82dd4
#+begin_src yaml
---
- name: Install Latest R
  hosts: all
  become: yes
  tasks:

    - name: Install prerequisites
      apt:
        name:
          - software-properties-common
          - dirmngr
          - gnupg
          - curl
          - ca-certificates
        state: present
        update_cache: yes

    - name: Remove existing R installation if present
      apt:
        name: r-base
        state: absent
      ignore_errors: yes  # In case R is not installed

    - name: Add CRAN GPG key
      apt_key:
        url: https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc
        state: present

    - name: Add CRAN R repository
      apt_repository:
        repo: "deb https://cloud.r-project.org/bin/linux/ubuntu {{ ansible_distribution_release }}-cran40/"
        state: present
        filename: "cran-r"

    - name: Update package cache
      apt:
        update_cache: yes

    - name: Install latest R base package
      apt:
        name: r-base
        state: latest

    - name: Verify R installation
      command: R --version
      register: r_version
      changed_when: false

    - name: Display installed R version
      debug:
        msg: "{{ r_version.stdout }}"
#+end_src
#+begin_src yaml

    - name: Install system dependencies for tidyverse
      apt:
        name:
          - libcurl4-openssl-dev
          - libssl-dev
          - libxml2-dev
        state: present

    - name: Install Tidyverse in R
      command: sudo R -e 'install.packages("tidyverse", repos="https://cloud.r-project.org")'
      args:
        creates: /usr/local/lib/R/site-library/tidyverse  # Skip installation if already exists

#+end_src

**** [[id:4783cca8-92ea-4053-b3c8-7d79862e3939][R package installs in basecamp conda environment]]
**** R Cookbook                                                    :cookbook:
**** Tutorial
- Get $HOSTNAME
  #+begin_src R
Sys.info()["nodename"]
#+end_src

**** Processes                                                    :hierarchy:
:PROPERTIES:
:ID:       54c85192-d02e-4919-b38e-a14c10fcb5c6
:END:
***** Style

for style see
https://chat.openai.com/c/8c852ec7-1709-4e61-ab17-9d8796daccc7
The most notable among these are:

Hadley Wickham's Style Guide: Developed by Hadley Wickham, a prominent figure in the R community, this style guide is widely respected and used, especially among users of the Tidyverse set of packages. It covers topics like syntax, file organization, naming conventions, and more.

Google's R Style Guide: Google has its own style guide for R which is publicly available. It's concise and covers basic principles of coding style, file structure, and syntax.

Bioconductor Coding Style: In the bioinformatics domain, the Bioconductor project has its own style guidelines. Given your background in bioinformatics, these guidelines might be particularly relevant.

The R Journal's "A Few Tips for Writing Readable Code": This article in The R Journal offers general advice on writing readable and maintainable code, which aligns with the principles of PEP 8.

Lintr: An R package that provides static code analysis for R, similar to Python's Pylint. It helps enforce coding standards and can be customized to follow a specific style guide.

These guides and tools offer a consensus on best practices for R coding, promoting a coding style that emphasizes clarity, simplicity, and consistency. While they may not be as universally adopted as PEP 8 in the Python world, they provide a solid foundation for writing clean and maintainable R code.

****** [[id:593672e1-82b2-44e0-aa00-d28825860706][My programming style guide]]
****** Best practices, style
:PROPERTIES:
:ID:       419ba6f0-4977-4eed-9d25-93a45933ad56
:END:
- See [[id:593672e1-82b2-44e0-aa00-d28825860706][My general programming style guide]]
- https://stackoverflow.com/questions/6324568/function-commenting-conventions-in-r
- Rscript format best practices
  - Differentiate working and testing sections
- Style guides
  - [[https://google.github.io/styleguide/Rguide.xml][Google]]
    - ideas
      - for naming, use ICANN convention  specific <- general
  - [[http://adv-r.had.co.nz/Style.html][Advanced R]] cite:wickham2014
  - [[https://style.tidyverse.org/documentation.html][Tidyverse]]
  - characters- "For portable R code (including that to be used in R packages) only A–Za–z0–9 should be used."
  - two-space indentation
  - spaces
    - before and after =, +, -, <, etc.
    - after comma
  - variable_names_with_underscore
- R style guides
  - https://www.r-bloggers.com/2018/09/r-code-best-practices/
  - https://swcarpentry.github.io/r-novice-inflammation/06-best-practices-R/
  - https://style.tidyverse.org/index.html
  - http://adv-r.had.co.nz/Style.html
  - https://journal.r-project.org/archive/2012/RJ-2012-018/RJ-2012-018.pdf
  - https://www.r-bloggers.com/consistent-naming-conventions-in-r/
  - https://stackoverflow.com/questions/1944910/what-is-your-preferred-style-for-naming-variables-in-r
  - https://stackoverflow.com/questions/10013545/are-there-any-official-naming-conventions-for-r
  - http://jef.works/R-style-guide/
  - https://csgillespie.wordpress.com/2010/11/23/r-style-guide/
  - https://google.github.io/styleguide/Rguide.xml
- examples
  - https://github.com/TheEconomist/us-potus-model/blob/master/scripts/model/final_2016.R
- https://google.github.io/styleguide/Rguide.html
***** R Processes                                                      :flat:
:PROPERTIES:
:ID:       d96c05c0-838a-45ec-b7c6-a8a7e5b3e71d
:END:
****** Set file.path variable by hostname
# RIS mount location
if(Sys.info()["nodename"] %in%
   c("jeszyman-work","jeff-mac-book","jeff-mac-book","jeff-server"))
  (data_dir = file.path("/mnt/ris/cbergom"))

****** Write a function with multiple outputs
:PROPERTIES:
:ID:       bd6496c7-8a45-448a-a6fb-27e1cc3e517e
:END:
****** Assertive programming (assertthat)
:PROPERTIES:
:ID:       02c59d00-54ae-4244-a192-22bfd7e59ca8
:END:
- https://github.com/hadley/assertthat
  - https://towardsdatascience.com/assertive-programming-in-r-36c3cc290930
******
****** Make HTML table
:PROPERTIES:
:ID:       9b8939f4-402d-40d8-9a5c-a13b155476a9
:END:
https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html
https://rdrr.io/cran/kableExtra/man/save_kable.html
***** External Files
:PROPERTIES:
:ID:       a571cc33-fca7-4c1f-abf8-a0114bda5a14
:END:
****** Writing to files
:PROPERTIES:
:ID:       29961249-9a6f-4a51-97a2-8bb2eea3658b
:END:
https://www.geeksforgeeks.org/reading-and-writing-excel-files-with-r-using-readxl-and-writexl/
****** Working with input files
:PROPERTIES:
:ID:       d7dcde01-9d91-4b22-b68d-87075d386673
:END:
https://stackoverflow.com/questions/32129687/list-files-all-files-in-directory-and-subdirectories
***** Regular expressions (REGEX) in R
:PROPERTIES:
:ID:       af6ebe3c-92f2-4b87-8292-d5deac52bd00
:END:
- escape chars https://stackoverflow.com/questions/27721008/how-do-i-deal-with-special-characters-like-in-my-regex
- [[https://www.rdocumentation.org/packages/base/versions/3.5.1/topics/regex][documentation]]
- [[http://www.endmemo.com/program/R/gsub.php][Simplified syntax]]
- [[https://stackoverflow.com/questions/2973436/regex-lookahead-lookbehind-and-atomic-groups][Look around examples]]
- [[https://www.rdocumentation.org/packages/stringi/versions/1.1.6/topics/stringi-search-regex#l_details][Operators]]
- https://www.google.com/search?q=gsub+find+last+instance
***** [[id:26211e92-7ff9-4520-a9a7-cac04027e610][Probability and Statistics with R]]
:PROPERTIES:
:ID:       dc850154-68e7-452b-925d-59d66047c579
:END:
***** Power calculations
:PROPERTIES:
:ID:       bdd9e5b5-578e-48a5-b9a9-9a8163666419
:END:
***** System administration
:PROPERTIES:
:ID:       f92e9c8d-7c84-480b-a7fb-314a176f82a0
:END:
- https://stackoverflow.com/questions/15217758/remove-a-library-from-libpaths-permanently-without-rprofile-site
***** Rscripts
:PROPERTIES:
:ID:       8601793b-7dfa-46e3-a658-da9624d40901
:END:
- #if(system("echo $HOSTNAME",intern=T)!="radonc-cancerbio")  stop("Need to be on radonc-cancerbio for this step")}
***** Working with tabular data in tidyverse
:PROPERTIES:
:ID:       09991a6a-6f80-4eb5-8344-c16ad1cf9c92
:END:
- merge list of dataframes https://dplyr.tidyverse.org/reference/bind.html
- https://stackoverflow.com/questions/57325157/function-to-rename-column-of-each-dataframe-in-a-list-to-its-dataframe-name

***** Dashboard
:PROPERTIES:
:ID:       7d6aebe4-1591-4476-8183-df4247b6a5e7
:END:
- dashboad https://bookdown.org/yihui/rmarkdown/dashboard-components.html
***** Working with directories and files
:PROPERTIES:
:ID:       3038e42c-3c3a-483d-9848-9235ea00a9a2
:END:
#+begin_src R
# Load configuration
if(file.exists(paste0("./config/",as.character(Sys.info()["nodename"]),".R"))) {
  source(paste0("./config/",as.character(Sys.info()["nodename"]),".R"))
} else {
  stop("No config file found")
}

#+end_src

- https://stackoverflow.com/questions/20934103/if-file-exists-in-folder-read-it-else-skip-the-processing-part
***** Data science in R
:PROPERTIES:
:ID:       7d5cda01-172e-49ee-8030-754402f3aa7d
:END:
:LOGBOOK:
CLOCK: [2021-06-04 Fri 10:25]--[2021-06-04 Fri 10:58] =>  0:33
CLOCK: [2019-03-19 Tue 14:35]--[2019-03-19 Tue 16:45] =>  2:10
:END:
- http://r4ds.had.co.nz/
- https://swcarpentry.github.io/r-novice-gapminder/
- https://www.r-bloggers.com/2021/06/10-tips-and-tricks-for-data-scientists-vol-9/amp/
- https://cran.r-project.org/web/packages/dplyr/vignettes/programming.html
****** [[id:39F11977-BE11-47CF-98B1-14CE6D9B97C4][Information Science / Data Science]]
:PROPERTIES:
:ID:       26512754-a0cf-4536-af52-74a430ac894e
:END:
****** Examples
:PROPERTIES:
:ID:       045d1771-be15-4a8d-b0ac-ef326d93a54b
:END:
- [[https://gist.github.com/halhen/659780120accd82e043986c8b57deae0][github: europe.R]]
****** General reference
:PROPERTIES:
:ID:       c0532578-b5c9-429a-9c6d-381990dce081
:END:
- missing values
  - https://stackoverflow.com/questions/4862178/remove-rows-with-all-or-some-nas-missing-values-in-data-frame
- https://rafalab.github.io/dsbook/
- cite:wickham2016
- [[https://datascienceplus.com/clean-your-data-in-seconds-with-this-r-function/][Hmisc for data cleaning]]
****** [[id:0e6f856f-2079-42fc-92f0-5af3b292c516][LINK TO Data project management and data wrangling with R]]
:PROPERTIES:
:ID:       4e8a9fb2-ec01-4e14-ba88-e850d8e1c05b
:END:
****** [[id:39F11977-BE11-47CF-98B1-14CE6D9B97C4][LINK TO Information Science / Data Science]]
:PROPERTIES:
:ID:       356f811b-ca18-4a5b-b135-ca2ecaf68385
:END:
****** [[id:a843f826-cdbc-4ca3-a30c-a7f2c30a9cbc][LINK TO R basecamp setup]]
:PROPERTIES:
:ID:       ae65c4a5-7fe5-474c-90e3-b8b567017ac4
:END:
***** R objects
:PROPERTIES:
:ID:       99eb9a24-7944-4335-b9f5-2937a610f8ac
:END:
- https://stackoverflow.com/questions/44066117/convert-data-frame-to-reference-class-object-in-r
- make objects https://bioconductor.org/packages/devel/bioc/vignettes/SummarizedExperiment/inst/doc/Extensions.html

***** Text
:PROPERTIES:
:ID:       94242006-2d2c-4615-8104-8613fd5df6d9
:END:
- https://www.google.com/search?q=R+lowercase+dplyr+stack
***** Math in R
:PROPERTIES:
:ID:       1cda08a5-5e3d-49bd-96aa-c262abada15d
:END:
- Rounding
  - https://www.rdocumentation.org/packages/base/versions/3.4.1/topics/Round
****** Probability and Statistics with R
:PROPERTIES:
:ID:       26211e92-7ff9-4520-a9a7-cac04027e610
:END:

- https://www.cyclismo.org/tutorial/R/confidence.html
https://rpkgs.datanovia.com/rstatix/
[[id:F80F3FAF-1D79-40F5-934B-F74D19143DBD][Probability and Statistics]]
- For basic statistics, see cite:mangiafico2005 [[http://rcompanion.org/rcompanion/e_01.html][R Companion to Biostats Handbook]]
- https://cran.r-project.org/web/views/Econometrics.html
- [[https://www.r-bloggers.com/bayesian-network-in-r-introduction/][Bayesian network in R: Introduction]]
  #+BEGIN_SRC R
data(coronary)
install.packages("bnlearn")
library(bnlearn)
coronary
#+END_SRC
#+begin_src emacs-lisp
;; te

#+end_src

- Causal Inference
  - http://www.ccd.pitt.edu/causal-discovery-introduction/
  - https://bd2kccd.github.io/docs/causal-cmd/
- [[http://www.sthda.com/english/wiki/correlation-test-between-two-variables-in-r][Correlation Test Between Two Variables in R]]
- [[https://www.analyticsvidhya.com/blog/2015/11/beginners-guide-on-logistic-regression-in-r/][Beginner's guide to logistic regression in R]]
- [[https://stackoverflow.com/questions/7906332/how-to-calculate-combination-and-permutation-in-r][How to calculate combination and permutation in R? {closed}]]
- https://stats.stackexchange.com/questions/8605/column-wise-matrix-normalization-in-r


- https://stat.ethz.ch/R-manual/R-devel/library/stats/html/fisher.test.html
- http://www.sthda.com/english/wiki/correlation-test-between-two-variables-in-r#spearman-rank-correlation-coefficient
- https://rpubs.com/aaronsc32/spearman-rank-correlation
- ROC & cutpoint
  - https://cran.r-project.org/web/packages/cutpointr/vignettes/cutpointr.html
  - https://web.expasy.org/pROC/

******* Inferential Testing
:PROPERTIES:
:ID:       85A16229-6FDB-4CAA-B23E-3A3A08F96BD7
:END:

******** Statistical Test Template
:PROPERTIES:
:ID:       A4CA9F60-8E82-4655-B6F5-2780A4CD93C5
:END:
>>>>>>> dc48269bd540785b36c3e186c158610738e9ffa6

 Purpose: Asks whether...
 Equation:
 Assumptions:

<<<<<<< HEAD
RUN apt-get update

RUN apt-get install -yq --no-install-recommends --allow-unauthenticated \
    build-essential \
    bzip2 \
    cifs.utils \
    cmake \
    dirmngr \
    emacs \
    gcc \
    git \
    gnupg \
    libcurl4-openssl-dev \
    libfftw3-dev \
    libgsl-dev \
    libxmu-dev \
    locales \
    nano \
    parallel \
    screen \
    software-properties-common \
    wget
=======
******** Testing Assumptions
:PROPERTIES:
:ID:       531DD201-BBB4-4C21-BDDE-02982DB43847
:END:
>>>>>>> dc48269bd540785b36c3e186c158610738e9ffa6

********* Normalcy
:PROPERTIES:
:ID:       DF687DB7-128D-49E4-B83B-5D4E7F83DC52
:END:

********** Shapiro-Wilk
:PROPERTIES:
:ID:       76DD7F99-072F-49D7-A08C-7A77F48BCDAE
:END:
 shaprio.test(VECTOR)
 null-hypothesis of this test is that the population is normally distributed

********** QQ plot
:PROPERTIES:
:ID:       38C4C432-EFF6-45F8-8A2A-AC5F5E68015D
:END:

******** Significance Testing
:PROPERTIES:
:ID:       CE56656E-9272-488A-A94E-5FB8F84F6E52
:END:

********* Categorical by chi square
:PROPERTIES:
:ID:       2223CFCB-A07A-4BF8-93D8-3A5E377EA317
:END:

********* Independent, non-normal, 2-populations: Wilcoxon-Mann Whitney
:PROPERTIES:
:ID:       B1DEBDF9-D94A-40EB-BC3C-DDEB3006AAD2
:END:

********* Nonparametric, >2 populations: Kruskal-Wallis
:PROPERTIES:
:ID:       5FEA38FE-3723-4ECF-8D9C-4A256163F55A
:END:

<<<<<<< HEAD
RUN apt-get update -qq \
	&& apt-get install -qq --no-install-recommends \
        libxml2-dev

RUN R -e "install.packages('tidyverse',repos='http://cran.rstudio.com/')"
#+end_src
- Ideas
  ## Emacs Snapshot
RUN apt-get install -qq --no-install-recommends software-properties-common
RUN add-apt-repository ppa:ubuntu-elisp/ppa
RUN apt-get update
RUN apt-get install -qq --no-install-recommends emacs-snapshot
RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
    locale-gen
=======
 Purpose: Asks whether...
 Equation:
 Assumptions:
>>>>>>> dc48269bd540785b36c3e186c158610738e9ffa6

******** Regression Modeling
:PROPERTIES:
:ID:       4C723421-9630-4CD9-B586-BDA73E809CE1
:END:

- [[file:~/Box%20Sync/library/Harrell,15%20Regression%20modeling%20stratgies.pdf][Harrell,15 Regression modeling stratgies]]

****** R for Machine Learning
:PROPERTIES:
:ID:       05014193-8038-4108-bf9d-11c56c33a63c
:END:
 - [[https://www.analyticsvidhya.com/blog/2016/04/complete-tutorial-tree-based-modeling-scratch-in-python/#one][A Complete Tutorial on Tree Based Modeling from Scratch (in R & Python)]]


****** General linear model glm()
:PROPERTIES:
:ID:       3B10C6E7-5D13-4BE4-9807-F60FC53A513B
:END:
:LOGBOOK:
CLOCK: [2018-01-01 Mon 15:02]--[2018-01-01 Mon 15:25] =>  0:23
CLOCK: [2017-09-14 Thu 11:18]--[2017-09-14 Thu 11:44] =>  0:26
:END:
- [ ] full code example
- https://onlinecourses.science.psu.edu/stat504/node/150
- https://datascienceplus.com/perform-logistic-regression-in-r/
- https://www.r-bloggers.com/compare-regression-results-to-a-specific-factor-level-in-r/
- https://radiant-rstats.github.io/docs/model/logistic.html
- https://onlinecourses.science.psu.edu/stat504/book/export/html/149
- https://nlp.stanford.edu/manning/courses/ling289/logistic.pdf
- http://data.princeton.edu/R/glms.html
- Logistic regression in R
  -
  - Examples
    - http://sphweb.bumc.bu.edu/otlt/MPH-Modules/BS/R/R-Manual/R-Manual20.html
  - [[https://www.r-bloggers.com/how-to-perform-a-logistic-regression-in-r/][rblogger: logistic regression]]
    - Data cleaning
- glm for multiple logistic regression
  - cite:mangiafico2005 @ 242
#+BEGIN_SRC R
# Load data:

training.data.raw=read.csv('/Users/JeffBook/Desktop/Python-Data-Science-and-Machine-Learning-Bootcamp/Machine Learning Sections/Logistic-Regression/titanic_train.csv', header=T,na.strings=c(""))

# Clean data
#  Identify and remove missing data by column:

sapply(training.data.raw,function(x)sum(is.na(x)))
sapply(training.data.raw,function(x) length(unique(x)))
library(Amelia)
missmap(training.data.raw, main='Missing values vs observed')
remove=c('Cabin','PassengerId')
data = training.data.raw[,-which(names(training.data.raw) %in% remove)]

#  By Row
#   Fill in missing data:

data$Age[is.na(data$Age)] = mean(data$Age,na.rm=T)
is.factor(data$Sex)
contrasts(data$Sex)

#   Remove missing by row:

head(data$Embarked)
data=data[!is.na(data$Embarked),]
rownames(data)=NULL

# Fit model, apply glm():

train=data[1:400,]
test=data[401:889,]
model=glm(Survived ~.,family=binomial(link='logit'),data=train)
summary(model)

# Assess model
#  ANOVA for chisq by variable:

anova(model, test='Chisq')

#  Assess predictive ability with predict:
#  ROC curve:

library(pscl)
pR2(model)
library(ROCR)
#+END_SRC

***** By artifact
:PROPERTIES:
:ID:       941fdf22-9023-46b9-bc38-4a47719f291d
:END:
- Tables
  - export tables
  - exporting tables- - - https://cran.r-project.org/web/packages/gridExtra/vignettes/tableGrob.html
  - https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html
  - https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_pdf.pdf
  - Kable
    - http://haozhu233.github.io/kableExtra/best_practice_for_newline_in_latex_table.pdf
****** [[id:19d01dcc-8fef-4c07-952a-da918b3dc775][LINK TO Visualizations in R including ggplot2]]
:PROPERTIES:
:ID:       28b714eb-59e3-4176-a866-f4fe0980bc65
:END:
****** making packages
:PROPERTIES:
:ID:       fe1f71d0-5ace-4075-b36d-082a1199490a
:END:
  - http://kbroman.org/pkg_primer/pages/github.html
  - https://cran.r-project.org/web/packages/policies.html#Submission
  - https://support.rstudio.com/hc/en-us/articles/200486488-Developing-Packages-with-RStudio?mobile_site=true
  - [[https://cran.r-project.org/doc/manuals/r-release/R-exts.html][cran: guide to writing R extensions]]
  - http://r-pkgs.had.co.nz/
  - Referring to other packages: https://stackoverflow.com/questions/36874904/r-how-do-i-make-my-package-use-another-package


***** Visualizations in R including ggplot2
:PROPERTIES:
:ID:       19d01dcc-8fef-4c07-952a-da918b3dc775
:END:
https://r-graphics.org/
https://github.com/thomasp85/patchwork/issues/136
- - [[https://stackoverflow.com/questions/37140266/how-to-merge-color-line-style-and-shape-legends-in-ggplot][merge legends]]

[[id:C85F831E-4285-42D0-ABAB-96696D026671][Visualization mod]]
- https://beep-boopr.github.io/ubcBIOL548L/articles/group-03_Using-cowplot-multi-panel.html
- https://www.geeksforgeeks.org/how-to-add-image-to-ggplot2-in-r/
- https://stackoverflow.com/questions/67459955/ggplot-font-size-and-plot-size
- https://patchwork.data-imaginist.com/articles/guides/assembly.html
- https://cran.r-project.org/web/packages/ggfun/vignettes/ggfun.html
- http://rich-iannone.github.io/DiagrammeR/docs.html
- https://wilkelab.org/cowplot/articles/drawing_with_on_plots.html
- [[https://gist.github.com/Rekyt/a7846af7c4c5fb5a48ea][ggplots over multiple pdf pages]]
- https://bookdown.org/ndphillips/YaRrr/saving-plots-to-a-file-with-pdf-jpeg-and-png.html
- tikz as graphics device for R: https://cran.r-project.org/web/packages/tikzDevice/vignettes/tikzDevice.pdf
- https://r-graphics.org/recipe-facet-label-appearance
- saving - use - better than ggsave: - https://rdrr.io/cran/cowplot/man/save_plot.html
- https://www.reddit.com/r/rstats/comments/b4ol4z/unbin_data_to_make_histogram/
- [[http://www.cookbook-r.com/Graphs/Plotting_distributions_(ggplot2)/][histogram]]
- [[http://www.cookbook-r.com/Graphs/Legends_(ggplot2)/#modifying-the-text-of-legend-titles-and-labels][modify ggplot2 legend text]]
****** Processes                                                  :hierarchy:
:PROPERTIES:
:ID:       7b47a4fa-5c0e-4e36-9d88-61593540215b
:END:
******* geoms
:PROPERTIES:
:ID:       411d2d7e-cb97-4e7c-a7b1-bacd3eb8504f
:END:
******* Processes                                                      :flat:
:PROPERTIES:
:ID:       85475db1-b795-4db1-af67-fa0de3f87fab
:END:


******** 0 Flat
:PROPERTIES:
:ID:       740df023-2211-4f3b-ac5c-265f4f99a132
:END:
********* - [[https://gist.github.com/Rekyt/a7846af7c4c5fb5a48ea][ggplots over multiple pdf pages]]
:PROPERTIES:
:ID:       5cce518a-ffc7-499e-b716-b1067bf49113
:END:
********* Interactive
:PROPERTIES:
:ID:       67ca5a25-5ade-41bf-84ba-17e48cf34b74
:END:
- [[https://www.youtube.com/watch?feature=youtu.be&v=rBp3eYHrsfo&app=desktop&t=0s][plotly interactive graphs]]
********* Theme
:PROPERTIES:
:ID:       6e585060-1fe9-47c0-97bb-b4f32cd69115
:END:
https://wilkelab.org/cowplot/articles/themes.html
********* Facets
:PROPERTIES:
:ID:       26b04605-e83f-473e-8483-82717b71131e
:END:
- https://r-graphics.org/recipe-facet-label-appearance
********* Significance annotations
:PROPERTIES:
:ID:       bda8de09-cae8-4324-83a1-3ccee8193aa7
:END:
https://www.datanovia.com/en/blog/how-to-add-p-values-onto-a-grouped-ggplot-using-the-ggpubr-r-package/#pairwise-comparisons-against-a-reference-group
https://www.datanovia.com/en/blog/how-to-add-p-values-onto-a-grouped-ggplot-using-the-ggpubr-r-package/#pairwise-comparisons-against-a-reference-group
https://cran.r-project.org/web/packages/ggsignif/vignettes/intro.html
https://crumplab.com/psyc7709_2019/book/docs/how-to-annotate-a-graph-using-gg-signif.html
********* Labeling
:PROPERTIES:
:ID:       f3ac9b40-baff-4e48-af39-123460b86a93
:END:
- https://r-graphics.org/recipe-facet-label-appearance
- https://wilkelab.org/cowplot/articles/drawing_with_on_plots.html
- https://ggrepel.slowkow.com/articles/examples.html
********* ER
:PROPERTIES:
:ID:       83e0ec45-2dcf-49dd-af5e-1badf7fed790
:END:
- er diagrams - https://rich-iannone.github.io/DiagrammeR/index.html
********* Legend style
:PROPERTIES:
:ID:       cbefb626-a723-44ee-9947-0288dbc66dca
:END:
- http://www.sthda.com/english/wiki/ggplot2-legend-easy-steps-to-change-the-position-and-the-appearance-of-a-graph-legend-in-r-software
********* Venn
:PROPERTIES:
:ID:       b9191c77-247b-4cd9-b991-601100fac75c
:END:
- [[https://stackoverflow.com/questions/8713994/venn-diagram-proportional-and-color-shading-with-semi-transparency][venn R packages]]
- [[cite:&jia2021]]
********* Pie
:PROPERTIES:
:ID:       45663216-ea79-49d2-91a6-3c1376160374
:END:
- [[https://stackoverflow.com/questions/33594642/beautiful-pie-charts-with-r/33594843][pie charts]]
********* Multi-panel
:PROPERTIES:
:ID:       2b2154cf-b61c-4287-b5dd-93d85c93ac63
:END:
- https://github.com/thomasp85/patchwork
- [[http://statisticalrecipes.blogspot.com/2015/07/cowplot-arrange-ggplot2-figures-in-grid.html][Cowplot]]
- [[https://cran.r-project.org/web/packages/cowplot/vignettes/plot_grid.html][another cowplot vignette]]

- https://www.google.com/search?q=cowplot+make+inset
********* Color scales and schemes
:PROPERTIES:
:ID:       f75e785a-381c-4865-91c3-65f61476ea89
:END:
- https://cran.r-project.org/web/packages/ggsci/vignettes/ggsci.html
- https://bookdown.org/rdpeng/exdata/plotting-and-color-in-r.html
- https://cran.r-project.org/web/packages/viridis/vignettes/intro-to-viridis.html
- [[http://sape.inf.usi.ch/quick-reference/ggplot2/colour][ggplot2 color scheme]]
****** General reference
:PROPERTIES:
:ID:       c09e8fb3-68b3-4169-bd28-a2d768266509
:END:
- Interfaces
  - TiKZ - https://cran.r-project.org/web/packages/tikzDevice/vignettes/tikzDevice.pdf
- https://r-charts.com/
- https://ggplot2-book.org/index.html
- https://www.r-graph-gallery.com/all-graphs.html
- [[http://minimaxir.com/2017/08/ggplot2-web/][How to Make High Quality Data Visualizations for Websites With R and ggplot2]]
- http://zevross.com/blog/2014/08/04/beautiful-plotting-in-r-a-ggplot2-cheatsheet-3/
***** Functions and programming
:PROPERTIES:
:ID:       479569fe-229d-4d2f-ba08-b871d3ad64ac
:END:
- https://cran.r-project.org/web/packages/dplyr/vignettes/programming.html
- https://adv-r.hadley.nz/
- https://x-team.com/blog/programming-best-practices/
- https://cran.r-project.org/web/packages/dplyr/vignettes/programming.html
- ifelse stop functions
  - see [[id:afb6af15-e984-4150-9e95-d28368ebca2e][pull in R-immutable elements and perform data checks]]
- https://stackoverflow.com/questions/19261159/r-applying-a-function-to-a-subset-of-a-data-frame#19261262
***** apply and for-loops
:PROPERTIES:
:ID:       e3ece314-a12f-4cb4-8421-411013fe4cbc
:END:

***** Creating, Modeling, and Toy Data
:PROPERTIES:
:ID:       46253EF9-7B35-403F-BA1B-24F4FCA750D6
:CREATED:  [2019-03-17 Sun 15:17]
:END:
#+BEGIN_SRC R
source("~/Rscripts/setup.R")
set.seed(314)
pkl=1000 # There will be 1000 unique accession numbers (primary key length)
time_start =  as.POSIXct('2018-10-01T01:00:00z', format = "%Y-%m-%dT%H:%M:%S")
time_end = as.POSIXct('2018-11-01T01:00:00z', format = '%Y-%m-%dT%H:%M:%S')
diff_minutes_max = difftime(time_end,time_start, units = "mins")
diff_minutes_all = sample(1:diff_minutes_max, pkl, replace = T)
result_folate = rnorm(200, 25, 12)
result_MCV = rnorm(400, 88, 8) # A normal distribution around mean MCV
result_WBC = rnorm(400, 7500, 3500)

# vectors
accession = sample(1:pkl, pkl, replace = F) # 1000 unique accession #s
visit = sample(1:500, pkl, replace = T) # 500 patient visits
patient = sample(1:350, pkl, replace=T) # 350 patients
time_result = time_start + diff_minutes_all
result = c(result_folate,result_MCV,result_WBC)
test=c(rep.int("folate", 200), rep.int("MCV", 400), rep.int("WBC", 400))
df=data.frame(accession,visit,patient,time_result,test,result)
df
      #+END_SRC
- set seed for consistent generation of random numbers
  #+BEGIN_SRC R
set.seed(314)
  #+END_SRC
- create lists and vectors
  #+BEGIN_SRC R
source("~/Rscripts/setup.R")
pkl=1000 # There will be 1000 unique accession numbers (primary key length)
time_start =  as.POSIXct('2018-10-01T01:00:00z', format = "%Y-%m-%dT%H:%M:%S")
time_end = as.POSIXct('2018-11-01T01:00:00z', format = '%Y-%m-%dT%H:%M:%S')
diff_minutes_max = difftime(time_end,time_start, units = "mins")
diff_minutes_all = sample(1:diff_minutes_max, pkl, replace = T)
result_folate = rnorm(200, 25, 12)
result_MCV = rnorm(400, 88, 8) # A normal distribution around mean MCV
result_WBC = rnorm(400, 7500, 3500)

# vectors
accession = sample(1:pkl, pkl, replace = F) # 1000 unique accession #s
visit = sample(1:500, pkl, replace = T) # 500 patient visits
patient = sample(1:350, pkl, replace=T) # 350 patients
time_result = time_start + diff_minutes_all
result = c(result_folate,result_MCV,result_WBC)
test=c(rep.int("folate", 200), rep.int("MCV", 400), rep.int("WBC", 400))
df=data.frame(accession,visit,patient,time_result,test,result)
df
#+END_SRC

- [[https://stats.stackexchange.com/questions/tagged/random-variable?sort=frequent][stack: random-variable questions]]
- [[https://stackoverflow.com/questions/46595060/generate-random-time-data-that-is-uniformly-distributed-using-r][random time data]]
- [[https://stackoverflow.com/questions/31153186/r-split-data-into-2-parts-randomly][R split data into 2 parts randomly]]
- [[https://stat.ethz.ch/R-manual/R-devel/library/datasets/html/00Index.html][Built-in datasets]]
- time intervals can be created by just adding numeric representing seconds to existing time
- Random numbers
  - https://stats.stackexchange.com/questions/30303/how-to-simulate-data-that-satisfy-specific-constraints-such-as-having-specific-m
  - https://gist.github.com/MonkmanMH/7740998
  - http://www.cookbook-r.com/Numbers/Generating_random_numbers/
- DATA MODELS ARE TRANSFERABLE BACK TO GENERAL!!!
- [[http://stat.ethz.ch/R-manual/R-devel/library/datasets/html/00Index.html][built-in datasets]]
- https://www.rdocumentation.org/packages/base/versions/3.5.1/topics/data.frame
- variable naming
- toy data
  - https://stats.stackexchange.com/questions/30303/how-to-simulate-data-that-satisfy-specific-constraints-such-as-having-specific-m
  - [[file:~/data/library/compend.org::*Creating%20and%20Modeling%20Data][Creating and Modeling Data]]
#+BEGIN_SRC R
# toy data frame of medical data
patient=1:1000 # 1000 patients
# 10,000 visits with some repeats
result=#numeric lab result between 0 and 1

runif(3, min=0, max=100)
#+END_SRC
***** Examples
:PROPERTIES:
:ID:       246e1239-f53d-4cb3-a8e9-dc75f6da321e
:END:
- http://www.rforecasting.com/
- cite:wertheim2014 R used in JMD!
****** Test data examples
:PROPERTIES:
:ID:       ab5228c6-6792-47f2-b348-8cdecd709cfb
:END:
  #+BEGIN_SRC R
source("~/Rscripts/setup.R")
set.seed(314)
pkl=1000 # There will be 1000 unique accession numbers (primary key length)
time_start =  as.POSIXct('2018-10-01T01:00:00z', format = "%Y-%m-%dT%H:%M:%S")
time_end = as.POSIXct('2018-11-01T01:00:00z', format = '%Y-%m-%dT%H:%M:%S')
diff_minutes_max = difftime(time_end,time_start, units = "mins")
diff_minutes_all = sample(1:diff_minutes_max, pkl, replace = T)
result_folate = rnorm(200, 25, 12)
result_MCV = rnorm(400, 88, 8) # A normal distribution around mean MCV
result_WBC = rnorm(400, 7500, 3500)

# vectors
accession = sample(1:pkl, pkl, replace = F) # 1000 unique accession #s
visit = sample(1:500, pkl, replace = T) # 500 patient visits
patient = sample(1:350, pkl, replace=T) # 350 patients
time_result = time_start + diff_minutes_all
result = c(result_folate,result_MCV,result_WBC)
test=c(rep.int("folate", 200), rep.int("MCV", 400), rep.int("WBC", 400))
df=data.frame(accession,visit,patient,time_result,test,result)
df
      #+END_SRC

***** [[id:a843f826-cdbc-4ca3-a30c-a7f2c30a9cbc][LINK TO R basecamp setup]]
:PROPERTIES:
:ID:       218ef9c0-0a15-4984-afcf-a0b4cd1394e7
:END:
***** Flat
:PROPERTIES:
:ID:       eb3608df-389c-451d-b563-143c1150f7df
:END:
- https://cran.r-project.org/web/packages/sjPlot/vignettes/tab_bayes.html
- get package version with packageVersion("PACKAGENAME")
****** Import
:PROPERTIES:
:ID:       8fe67560-d881-4cc3-ad0f-fea419a81023
:END:
  - https://stackoverflow.com/questions/23678691/converting-a-text-file-into-a-vector-in-r
    - https://www.google.com/search?q=R+import+file+as+vector
****** ANOVA in R
:PROPERTIES:
:ID:       eff37258-980a-4b7f-9fa6-e34d7f95caf1
:END:
- https://www.scribbr.com/statistics/anova-in-r/
- http://www.sthda.com/english/wiki/one-way-anova-test-in-r
- [[id:2bb441ec-29b3-4d45-865f-ed49d5fb9d31][Analysis of variance (ANOVA)]]
- https://www.datanovia.com/en/lessons/mixed-anova-in-r/#two-way-mixed
****** Working with system variables
:PROPERTIES:
:ID:       e83e96d2-1942-4913-ba3f-a9351fa99b42
:END:
- https://www.google.com/search?q=get+hostname+in+R
#+begin_src R
as.character(Sys.info()["nodename"])
#+end_src
**** R scripts
:PROPERTIES:
:ID:       e407afab-e6e0-45b7-a080-e587bf21a385
:END:
#+begin_src R
requiredPackages = c("readxl","tidyverse")

for(p in requiredPackages){
   library(p,character.only = TRUE)
}
#+end_src
#+begin_src R
# Load configuration
if(file.exists(paste0("./config/",as.character(Sys.info()["nodename"]),".R"))) {
  source(paste0("./config/",as.character(Sys.info()["nodename"]),".R"))
} else {
  stop("No config file found")
}
#+end_src
***** R bioinformatics setup
:PROPERTIES:
:ID:       87b498a6-e553-4682-8038-96bbb21fda14
:END:
#+name: biotools_r_setup
#+begin_src R :noweb yes
#
# Check Packages
##
## Bioconductor
if (!requireNamespace("BiocMan
ager", quietly = TRUE))
    install.packages("BiocManager")
##
packages = c(
  "AnnotationDbi",
  "biomaRt",
  "circlize",
  "ComplexHeatmap",
  "copynumber",
  "DESeq2",
  "DRIMSeq",
  "edgeR",
  "fgsea",
  "gage",
  "gageData",
  "GenomicFeatures",
  "gplots",
  "limma",
  "pathview",
  "pheatmap",
  "PoiClaClu",
  "SummarizedExperiment",
  "tximport"
)
##
##NOTE requires libcurl4-openssl-dev https://stackoverflow.com/questions/11471690/curl-h-no-such-file-or-directory/11471743
package.check = lapply(
  packages,
  FUN = function(x) {
    if (!require (x, character.only = T)) {
      BiocManager::install(x, quietly =T, ask=F)
      library(x, character.only = T)
    }
  }
)
#

#+end_src

#+name: biotools_r_setup_wrapper
#+begin_src org :noweb yes
<<biotools_r_setup>>
#+end_src

**** Local YAS
:PROPERTIES:
:ID:       d013547e-3e14-4510-948a-4b24de6a2e62
:END:
***** code.r                                                            :yas:
:PROPERTIES:
:ID:       109c8d78-8cf5-4f22-a106-cb31bd002776
:END:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/org-mode/code.r
# -*- mode: snippet -*-
# key: code.r
# expand-env: ((yas-indent-line 'none))
# condition: 'auto
# --
,#+begin_src R
$0
,#+end_src
#+end_src
***** 80                                                                :yas:
:PROPERTIES:
:ID:       3e97b905-780b-4612-a5a1-18e9062dd8a8
:END:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/ess-mode/80
# -*- mode: snippet -*-
# key: 80
# expand-env: ((yas-indent-line 'none))
# --
#########1#########2#########3#########4#########5#########6#########7#########8
#+end_src

***** script                                                            :yas:
:PROPERTIES:
:ID:       51bbd7ff-3f3d-4ae7-9839-142f52dd141c
:END:
#+name: script
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/ess-mode/script
# -*- mode: snippet -*-
# key: script
# expand-env: ((yas-indent-line 'fixed))
# --
#!/usr/bin/env Rscript

# ---   Load Packages   --- #
# ------------------------- #

packages <- c("optparse", "tidyverse")
sapply(packages, require, character.only = TRUE, quietly = TRUE)

# ---   Load Inputs   --- #
# ----------------------- #

option_list <- list(
  make_option(c("--<OPTION NAME>"), type = "character"),

opts <- parse_args(OptionParser(option_list = option_list))

inputs_list = function(opts){

  return(list())
}

# ---   Main   --- #
# ---------------- #

main = function(opts){

  # Process inputs
  inputs = inputs_list(opts)

  # Return a list of outputs
  return(list())
}

# ---   Functions   --- #
# --------------------- #

# ---   Run   --- #
# --------------- #

out = main(opts)

for (name in names(out)) {
  item <- out[[name]]
  file_path <- file.path(opts$out_dir, paste0(name, ".rds"))
  saveRDS(item, file_path)
}

#+end_src
***** var                                                               :yas:
:PROPERTIES:
:ID:       fa91bd4f-f2d9-4a17-8e02-6891c564204b
:END:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/ess-mode/var
# -*- mode: snippet -*-
# key: var
# expand-env: ((yas-indent-line 'none))
# --
$1 = args[$2]
#+end_src
***** make.opt                                                          :yas:
:PROPERTIES:
:ID:       5c6b366c-d0ca-45bd-a7a3-c649c8f94e11
:END:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/ess-mode/make.opt
# -*- mode: snippet -*-
# key: make.opt
# expand-env: ((yas-indent-line 'none))
# --
  make_option(c("--$1"), type = "character", default = "$2"),

#+end_src
***** optparse                                                          :yas:
:PROPERTIES:
:ID:       49258803-a4f9-4fc1-b44d-2f5c7eda14a3
:END:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/ess-mode/optparse
# -*- mode: snippet -*-
# key: optparse
# expand-env: ((yas-indent-line 'none))
# --
option_list <- list(
  make_option(c("--"), type = "character", default = "")
)

opts <- parse_args(OptionParser(option_list = option_list))

#+end_src
***** r.cmd                                                             :yas:
:PROPERTIES:
:ID:       c204aa66-98eb-412f-8ffa-0227b42ed381
:END:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/bash-mode/r.cmd
# -*- mode: snippet -*-
# key: r.cmd
# expand-env: ((yas-indent-line 'none))
# --
args = commandArgs(trailingOnly = TRUE)
$0=args[1]
=args[2]

#+end_src
***** function                                                          :yas:
:PROPERTIES:
:ID:       db4e66ae-ddad-41f9-810b-0e41b2a216d5
:END:
#+name: function
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/ess-mode/function
# -*- mode: snippet -*-
# key: function
# expand-env: ((yas-indent-line 'fixed))
# --
${1:FUNCTIONNAME$$(replace-regexp-in-string " " "_" yas-text)} = function(${2:VARIABLE LIST}){
  # ${3:DESCRIPTION}
  $0
}
#+end_src
***** Header levels
:PROPERTIES:
:ID:       ffd3a6ff-efcf-4e7d-921a-93650864c13c
:END:
****** [[id:506b0a68-44e2-4709-a021-fbdb1f97f5cd][Main header]]
:PROPERTIES:
:ID:       fd28ef73-758a-4779-9dde-520f8970038f
:END:
****** Level 2
:PROPERTIES:
:ID:       b04e0542-9f48-4182-b093-f5bf0c9c8a5b
:END:
****** h2                                                               :yas:
:PROPERTIES:
:ID:       27db6fe2-6bd4-4cbb-8eb2-83487d76ce20
:END:
#+begin_src bash :comment no :tangle ~/repos/basecamp/emacs/public_yasnippets/ess-mode/h2
# -*- mode: snippet -*-
# key: h2
# expand-env: ((yas-indent-line 'none))
# --

# ========== ${1:$$(capitalize yas-text)} ========= #

$0
#+end_src
#+begin_src R
# ========== Erk Sdf  ========= #
#########1#########2#########3#########4#########5#########6#########7#########8
:::::::::
h2

#+end_src
#+begin_src bash :comment no
bash.file.size
#+end_src

# ========== Level 2: Data Cleaning ========= #
#########1#########2#########3#########4#########5#########6#########7#########8
##############################
###   There Ille Sfesdf    ###
##############################
****** Level 3
:PROPERTIES:
:ID:       d38e898b-e264-48b9-ad9e-fa4bea8d5a5d
:END:
# ##### Level 3: Handle Missing Values #####
***** Ideas                                                           :ideas:
:PROPERTIES:
:ID:       76669340-b70a-44dd-b5f2-54788140796d
:END:
****** long.comment                                                     :yas:
:PROPERTIES:
:ID:       6c4dfb22-6263-42c1-b333-73a8abd55ba8
:END:
https://emacs.stackexchange.com/questions/47996/run-function-after-specific-snippet
#+begin_src emacs-lisp
(add-hook 'yas-before-expand-snippet-hook 'turn-off-auto-fill)
#+end_src

#+begin_src emacs-lisp
(defun format-comment (input)
  (let* ((max-width 80)  ; Define the maximum width for a line
         (words (split-string input " "))  ; Split the input text into words
         (lines '(""))  ; Initialize lines list with an empty string (first line)
         (current-line (car lines)))  ; Reference to the current line being built
    (dolist (word words)
      (if (> (+ (length current-line) (length word) 1) max-width)  ; Check if adding the next word exceeds max width
          (setq lines (append lines (list word))  ; Start a new line with the word
                current-line word)
        (progn  ; Else, add the word to the current line
          (setq current-line (if (string= current-line "")
                                 word
                               (concat current-line " " word)))
          (setcar (last lines) current-line))))  ; Update the last element of lines with the current line
    (mapconcat (lambda (line) (concat "# " line))  ; Prefix each line with "# " and concatenate them
               lines
               "\n")))


#+end_src
#+begin_src emacs-lisp :results replace
;; Usage example:
(format-comment "this is a long comment this is a long comment this is a long comment this is a long comment this is a long comment ")

#+end_src

#+RESULTS[7c320e03d98e6a7b7ed6bc76e162bed073583cc7]:
: # this is a long comment this is a long comment this is a long comment this is a
: # this is a long comment this is a long comment this is a long comment this is a
: # long comment this is a long comment


#+begin_src bash :tangle ~/repos/basecamp/emacs/public_yasnippets/ess-mode/long.comment2
# -*- mode: snippet -*-
# name: long.comment2
# key: long.comment2
# expand-env: ((yas-indent-line 'none))
# --
${1:Insert your comment here}
#+end_src
#+begin_src R
Insert your comment here

Insert your comment here

Insert your comment here

Insert your comment here

long.${2:$(let ((input (s-trim yas-text)))
           (s-wrap input 80 "\n"))}
long.${2:$(let ((input (s-trim yas-text)))
           (s-wrap input 80 "\n"))}
#+end_src

**** Packages
:PROPERTIES:
:ID:       13053897-37D7-4068-B3D0-5A6660BA0CD3
:END:
- https://stackoverflow.com/questions/45101045/why-use-purrrmap-instead-of-lapply
- https://cran.r-project.org/web/packages/ROCR/vignettes/ROCR.html
- https://packagemanager.rstudio.com/client/#/repos/1/overview
- https://topepo.github.io/caret/#
- https://cran.r-project.org/web/packages/cutpointr/vignettes/cutpointr.html
- https://old.reddit.com/r/datascience/comments/av4z50/what_are_some_very_useful_lesser_known_r_packages/
- Grab list of packages:
  #+BEGIN_SRC R
ip = as.data.frame(installed.packages()[,c(1,3:4)])
ip = ip[is.na(ip$Priority),1:2,drop=FALSE]
ip
  #+END_SRC
- cite:xtable2016
- data.table
  - [[https://rstudio-pubs-static.s3.amazonaws.com/52230_5ae0d25125b544caab32f75f0360e775.html][joining with data.table]]
- cite:googlesheets2017
- [[http://stackoverflow.com/questions/25672974/caught-segfault-error-in-r][uninstall/install for seg faults]]
- reshape2
  - http://seananderson.ca/2013/10/19/reshape.html
***** pheatmap
:PROPERTIES:
:ID:       02afeb91-08fb-4174-9092-6af5285f71cb
:END:
- https://davetang.org/muse/2018/05/15/making-a-heatmap-in-r-with-the-pheatmap-package/
-
***** Shiny
:PROPERTIES:
:ID:       03623477-AB96-4BD1-A504-126F1FCB3343
:END:
- https://engineering-shiny.org/golem.html
- [[https://community.rstudio.com/t/shiny-contest-submission-spatialepiapp-for-disease-surveillance/22699][disease surveill shiny]]
http://bioinformatics.sdstate.edu/idep/
- [[https://github.com/tylermorganwall/skpr][skpr experimental design suite]]

#+NAME: shiny template
#+BEGIN_SRC R

library(shiny)

ui = fluidPage()

server = function(input, output) {}

shinyApp(ui = ui, server = server)

#+END_SRC

#+NAME: input function
#+BEGIN_SRC R

library(shiny)

ui = fluidPage(sliderInput(inputId = 'num',
                  label = 'Choose a number',
                  value = 25, min = 1, max = 100))

server = function(input, output) {}

shinyApp(ui = ui, server = server)

#+END_SRC

- shiny
  - [[shiny
  - [[http://shiny.rstudio.com/][shiny for R]]
  - [[https://daattali.com/shiny/lightsout/][shiny lights out game]]
  - [[https://www.shinyapps.io/admin/#/dashboard][shinyapps.io]]
  - http://zevross.com/blog/2016/04/19/r-powered-web-applications-with-shiny-a-tutorial-and-cheat-sheet-with-40-example-apps/
- input functions
  - button
    - actionButton()
    - submitButton()
  - checkbox, single- checkboxInput()
  - checkbox group- checkboxGroupInput()
  - date- dateInput()
  - date range- dateRangeInput()
  - file input- fileInput()
  - numeric input- numericInput()
  - password input- passwordInput()
  - radio buttons- radioButtons()
  - select box- selectInput()
  - sliders- sliderInput()
  - text input- textInput()
- outputs
  - dataTableOutput() (interactive)
  - htmlOutput()
  - imageOutput()
  - plotOutput()
  - tableOutput()
  - textOutput()
  - uiOutput()
  - verbatimTextOutput()
- server builds output function from inputs
  - workflow
    - save output to output$
    - build output with render*()
    - access input values with input$
  - save objects to output$<ELEMENT>
    - link server and output element names
    - render fuctions
      - renderDataTable()
      - renderImage()
      - renderPlot()
      - renderPrint()
      - renderTable()
      - renderText()
      - renderUI()
- sharing
  - requires directory with app.R
  - shinyapps.io server
  - https://www.shinyapps.io/admin/#/dashboard

#+BEGIN_SRC R
install.packages('rsconnect')
library(shiny)

ui = fluidPage(
    sliderInput(inputId = 'num',
                label = 'Choose a number',
                value = 25, min = 1, max = 100),
    plotOutput('hist')
)

server = function(input, output) {
    output$hist = renderplot({
        hist(rnorm(input$num))
    })
}

shinyApp(ui= ui, server = server)

?rsconnect

rsconnect::setAccountInfo(name='jeszyman', token='7D5593D7025B8BECC9FFBBD2D9AA4D56', secret='sbbKu1u92+rnimHDSzLhL500cOMn/wy7rVdTva2+')
#+END_SRC

#+RESULTS:
***** tidyverse
:PROPERTIES:
:CREATED:  [2019-03-19 Tue 14:06]
:ID:       E8EA40A5-A1C1-44D7-8985-5D8568714698
:END:
:LOGBOOK:
CLOCK: [2020-07-29 Wed 11:00]--[2020-07-29 Wed 11:20] =>  0:20
:END:
- https://jhudatascience.org/tidyversecourse/
- https://www.reddit.com/user/hadley/
- https://magrittr.tidyverse.org/reference/tee.html
- https://b-rodrigues.github.io/modern_R/
- https://cran.r-project.org/web/packages/dplyr/vignettes/programming.html
- processes
  - https://www.google.com/search?q=dplyr+set+factor+levels
- https://github.com/hrbrmstr/hrbrthemes
- https://www.reddit.com/r/rstats/comments/2war5a/ggplot2_drop_level_from_legend/
- http://www.sthda.com/english/wiki/be-awesome-in-ggplot2-a-practical-guide-to-be-highly-effective-r-software-and-data-visualization
- http://www.sthda.com/english/wiki/ggplot2-axis-ticks-a-guide-to-customize-tick-marks-and-labels
- http://zevross.com/blog/2014/08/04/beautiful-plotting-in-r-a-ggplot2-cheatsheet-3/
- http://www.sthda.com/english/wiki/be-awesome-in-ggplot2-a-practical-guide-to-be-highly-effective-r-software-and-data-visualization
- http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html
- https://ggplot2.tidyverse.org/reference/geom_boxplot.html
- https://stackoverflow.com/questions/17120729/ggplot2-plotting-non-contiguous-time-durations-as-a-bar-chart
- https://stackoverflow.com/users/16632/hadley
- [[https://ggplot2.tidyverse.org/reference/][documentation]]
  - https://ggplot2.tidyverse.org/reference/stat_ecdf.html
- https://www.google.com/search?q=ggplot+cumulative+density
- [[https://stackoverflow.com/questions/5208679/order-bars-in-ggplot2-bar-graph][stack: order bars]]
- [[https://stackoverflow.com/questions/1249548/side-by-side-plots-with-ggplot2][stack: side by side plots with ggplot2]]
- ggplot
- https://www.google.com/search?q=ggplot+best+size+presentation
- real time update?
- https://cran.r-project.org/web/packages/cowplot/vignettes/shared_legends.html
- [[https://www.rstudio.com/wp-content/uploads/2015/03/ggplot2-cheatsheet.pdf][ggplot2 cheat sheet]]
- [[https://stackoverflow.com/questions/7549694/adding-regression-line-equation-and-r2-on-graph/7549819#7549819][stack: Adding Regression Line Equation and R2 on graph]]
- [[https://www.r-statistics.com/2016/11/ggedit-interactive-ggplot-aesthetic-and-theme-editor/][ggedit – interactive ggplot aesthetic and theme editor]]
- https://github.com/tidyverse/ggplot2/issues/2158
- commands
  |----------+---------|
  | function | command |
  |----------+---------|
  | <35>     | <35>    |
  |          |         |
- standards and best practice
- documentation
- applications
- reference
  - [[file:~/.basecamp/emacs/public_yasnippets/org-mode/software]]
****** dplyr
:PROPERTIES:
:CREATED:  [2021-09-13 Mon 09:31]
:ID:       7881202e-7d7a-4bb5-99b8-a0327ce14020
:END:
- [[https://www.google.com/search?q=dplyr+tee+pipe+multiple+outputs][google:dplyr tee pipe multiple outputs]]
- https://www.google.com/search?q=dplyr+rename+columns
***** bioconductor
:PROPERTIES:
:ID:       ac5c9fbe-7ce7-4092-989b-e63884fdd9df
:END:
#+begin_src R
#
# Check Packages
##
## Bioconductor
if (!requireNamespace("BiocManager", quietly = TRUE))
    install.packages("BiocManager")
##
packages = c(
  "AnnotationDbi",
  "biomaRt",
  "circlize",
  "ComplexHeatmap",
  "copynumber",
  "DESeq2",
  "DRIMSeq",
  "edgeR",
  "fgsea",
  "gage",
  "gageData",
  "GenomicFeatures",
  "gplots",
  "limma",
  "pathview",
  "pheatmap",
  "PoiClaClu",
  "SummarizedExperiment",
  "tximport"
)
##
##NOTE requires libcurl4-openssl-dev https://stackoverflow.com/questions/11471690/curl-h-no-such-file-or-directory/11471743
package.check = lapply(
  packages,
  FUN = function(x) {
    if (!require (x, character.only = T)) {
      BiocManager::install(x, quietly =T, ask=F)
      library(x, character.only = T)
    }
  }
)
#

#+end_src
- https://www.bioconductor.org/help/course-materials/2016/BioC2016/ConcurrentWorkshops4/Yin/bioc-workflow.html
- [[https://bioconductor.org/packages/release/bioc/vignettes/biomaRt/inst/doc/biomaRt.html#retrieve-all-hugo-gene-symbols-of-genes-that-are-located-on-chromosomes-1720-or-y-and-are-associated-with-specific-go-terms][The biomaRt users guide]]
**** Interfaces
:PROPERTIES:
:ID:       50f3f0af-8280-46f1-9f2b-5cc48395d032
:END:
  - graphviz
    - https://rich-iannone.github.io/DiagrammeR/index.html
  - shiny
    - https://rstudio.github.io/shinydashboard/examples.html
    - https://towardsdatascience.com/creating-an-exam-archive-system-with-a-data-scientists-toolkit-a080d497a9a0
  - export
    - https://stackoverflow.com/questions/49245296/quickly-write-vector-to-file-r
  - docker w/ R and ESS
    - http://ess.r-project.org/Manual/ess.html#ESS-processes-on-Remote-Computers
    - https://phoenixnap.com/kb/how-to-ssh-into-docker-container
    - https://stat.ethz.ch/pipermail/ess-help/2017-April/011171.html


- https://cran.r-project.org/web/packages/boxr/vignettes/boxr.html
- interactions
  - system interactions
    - standard plotting device for macos is quartz
      - http://stat.ethz.ch/R-manual/R-patched/library/grDevices/html/quartz.html
  - [[file:~/.emacs.d/settings.org::*14%20Working%20with%20source%20code-%20Org%20Babel][14 Working with source code- Org Babel]]
  - [[file:~/.emacs.d/settings.org::*Local%20R%20setup][R Local Setup]]
  - system interactions
    - Export and outputs
      - [[https://www.r-bloggers.com/stargazer-package-for-beautiful-latex-tables-from-r-statistical-models-output/][rbloggers: latex table export]]
      - for tbl outputs- https://stackoverflow.com/questions/32548622/r-output-results-in-table
    - Import
      - Input formatting and manipulations
        - [[http://r.789695.n4.nabble.com/split-strings-in-a-vector-and-convert-it-to-a-data-frame-td1475216.html][For functions making columns]]
      - [[https://theodi.org/article/how-to-use-r-to-access-data-on-the-web/][How To Use R To Access Data On The Web]]
      - Google sheets package
        - [[https://datascienceplus.com/how-to-use-googlesheets-to-connect-r-to-google-sheets/][How to Use googlesheets to Connect R to Google Sheets]]
        - [[https://stackoverflow.com/questions/22873602/importing-data-into-r-from-google-spreadsheet][stack: from Google sheets]]
        - [[http://htmlpreview.github.io/?https://raw.githubusercontent.com/jennybc/googlesheets/master/vignettes/basic-usage.html][vignette]]
        - [[https://github.com/jennybc/googlesheets][github]]
    - R and python
      - [[https://www.reddit.com/r/statistics/comments/8de54s/is_r_better_than_python_at_anything_i_started/][reddit: Is R better than Python at anything? I started learning R half a year ago and I wonder if I should switch.]]
      - [[https://www.reddit.com/r/datascience/comments/8dec78/transitioning_to_r_from_python/?st=jgkzwior&sh=ad5d425c][reddit: Transitioning to R from Python]]
- Interfaces
  - Data
    - [[https://www.quandl.com/tools/r]]
  - [[https://www.r-bloggers.com/a-million-ways-to-connect-r-and-excel/][R-bloggers: connect R to excel]]
***** ESS with R running through docker
:PROPERTIES:
:ID:       7cb5af61-5a19-40ce-96ad-b5b5df51daae
:END:
https://github.com/emacs-ess/ESS/issues/1059
https://stat.ethz.ch/pipermail/ess-help/2015-July/010628.html
- ess on docker
  - http://ess.r-project.org/Manual/ess.html#Activating-and-Loading-ESS
  - and get docker ip
  - and provision container for ssh
- http://ess.r-project.org/Manual/ess.html#Activating-and-Loading-ESS
  - and get docker ip
  - and provision container for ssh
- https://gtown-ds.netlify.app/2017/08/16/docker-emacs/
**** General reference                                                  :ref:
:PROPERTIES:
:CREATED:  [2021-06-04 Fri 10:12]
:ID:       707e5032-ae3d-4f3e-86eb-46917bec88f8
:END:
- [[cite:&venables2018]]
- https://www.reddit.com/r/Rlanguage/comments/17yg8hx/what_are_some_aspects_you_dislike_about_r/
- https://rdrr.io/cran/styler/man/tidyverse_style.html
- https://little-books-of-r.readthedocs.io/en/latest/
- cite:lewis2010 http://proquest.safaribooksonline.com/9780763758080
- https://www.r-bloggers.com/blogging-with-rmarkdown-knitr-and-jekyll/
- https://adv-r.hadley.nz/
***** R Training
:PROPERTIES:
:ID:       2EDD5335-C4BC-4B9F-9140-81A25062D4A6
:END:
- https://journal.r-project.org/
- [[http://ww2.coastal.edu/kingw/statistics/R-tutorials/text/quick&dirty_R.txt][Quick and Dirty R Guide]]
- [[https://www.r-bloggers.com/package-party-conditional-inference-trees/][inference trees with party]]
- [[https://www.edx.org/course/statistics-r-harvardx-ph525-1x][EdX: Statisitcs and R]]
- cite:YaRrr_Book
  cite:muenchen2011r
 [[https://cran.r-project.org/doc/manuals/R-intro.html][cran r intro]]
- http://stats.stackexchange.com/questions/138/free-resources-for-learning-r
[[https://www.bioconductor.org/help/course-materials/][Bioconductor courses and conferences]]
- http://moo.nac.uci.edu/~hjm/R_BioC_example.html
-  [[https://www.reddit.com/r/statistics/comments/5677zi/im_pursing_graduate_school_in_social_psychology/][R Swirl Package]]

***** [[https://www.r-project.org/other-docs.html][documentation]]
:PROPERTIES:
:ID:       5387846b-2130-468f-8d94-1f53fe2b5541
:END:
  - [[https://cran.r-project.org/manuals.html][cran manuals]]
    -
      - 3
        - 3.4 The class of an object
  - cite:r_core_team2018
  - cite:venables2018
  - [[https://www.rdocumentation.org/][all package documentation]]
  - [[https://www.rdocumentation.org/][RDocumentation]]
***** Variable types
:PROPERTIES:
:ID:       7c76cdb1-3e3d-4846-b825-9826769b12cb
:END:
- objects
  - Data.frame / data.table operations
    - [[https://stackoverflow.com/questions/11996135/create-a-sequential-number-counter-for-rows-within-each-group-of-a-dataframe][Create a sequential number (counter) for rows within each group of a dataframe]]
    - [[http://r.789695.n4.nabble.com/Create-sequential-vector-for-values-in-another-column-td4678059.html][create sequential vector values in another column]]
    - [[https://stackoverflow.com/questions/24027605/determine-the-number-of-na-values-in-a-column][stack: Determine the number of NA values in a column]]
    - [[https://stackoverflow.com/questions/15140944/r-which-statement-with-multiple-conditions][stack: R: `which` statement with multiple conditions]]
    - order with e.g.: newdata <- mtcars[order(mpg, cyl),]
    - dplyr
      - [[http://www.cookbook-r.com/Manipulating_data/Renaming_levels_of_a_factor/][cookbook: Renaming factor levels with dplyr]]
  - character-level manipulations
    - Trim characters with substr()
  - Object structures
    - https://www.r-bloggers.com/adding-metadata-to-variables/
  - functions
    - [[https://support.bioconductor.org/p/8355/][example of modifying an existing function]]
  - dataframe
    - dataframe manipulations [[https://stackoverflow.com/questions/5234117/how-to-drop-columns-by-name-in-a-data-frame][stack: how to drop columns by name]]
- tables
  #+BEGIN_SRC R
source("~/repos/bin/R/setup.R")
install.packages("flextable")
library(flextable)
myft = flextable(head(mtcars),col_keys=c("am", "carb"))
myft
#+END_SRC
  - https://cran.r-project.org/web/packages/flextable/vignettes/overview.html
  - see import of org table in [[id:878CB95A-3B65-4DB3-B18A-D9F873B796B4][3 Tables]]
- text parsing
  - https://stackoverflow.com/questions/42628575/exclude-everything-after-the-second-occurrence-of-a-certain-string
  - https://stackoverflow.com/questions/12297859/remove-all-text-before-colon
  - https://datascience.stackexchange.com/questions/8922/removing-strings-after-a-certain-character-in-a-given-text
- time
  -
  - [[https://stackoverflow.com/questions/43460329/converting-datetime-from-character-to-posixct-object][stack: Converting datetime from character to POSIXct object]]
  - [[http://neondataskills.org/R/time-series-convert-date-time-class-POSIX/][Time Series 02: Dealing With Dates & Times in R - as.Date, POSIXct, POSIXlt]]
  - [[http://www.noamross.net/blog/2014/2/10/using-times-and-dates-in-r---presentation-code.html][POSIXct times]]
    - [[http://stackoverflow.com/questions/5585898/why-doesnt-r-recognize-cst-as-a-valid-timezone][central time]]
***** tutorials, guides, general reference
:PROPERTIES:
:ID:       28dae063-9c59-412b-99ef-949a14c9ca35
:END:
  - http://www.r-chart.com/
  - online education
    - https://hackernoon.com/5-free-r-programming-courses-for-data-scientists-and-ml-programmers-5732cb9e10
    - [[http://www.r-tutor.com/elementary-statistics][rTutorial for Statistics]]
      - [[http://www.r-tutor.com/elementary-statistics/numerical-measures/variance][rTutorial variance]]
      - [[http://www.r-tutor.com/elementary-statistics/non-parametric-methods/kruskal-wallis-test][rTutorial Kruskal-Wallis]]
    - https://www.coursera.org/learn/r-data-visualization/supplement/Ma3Bj/introduction
  - https://www.reddit.com/r/statistics/comments/afp83l/r_and_how_to_get_started/
  - cite:wickham2014
  - https://user2020.r-project.org/program/contributed/
- miscellaneous
  - [[https://www.reddit.com/r/datascience/comments/8dpkih/my_favorite_function_in_r_is/?st=jgkzwj8p&sh=45b024c6][reddit: my favorite function in R is _]]
  - [[https://www.methodsconsultants.com/tutorial/what-does-it-mean-to-say-r-is-an-object-oriented-programming-language/][What Does it Mean to Say R is an Object-Oriented Programming Language?]]
***** [[LINK TO Machine Learning]]
***** [[LINK TO Reproducible Research]]
**** Ideas
:PROPERTIES:
:ID:       d3e14906-80f0-409b-b8df-8d98da11f09f
:END:
:LOGBOOK:
CLOCK: [2020-09-17 Thu 14:11]--[2020-09-17 Thu 15:17] =>  1:06
:END:
  - script to check for install and install only if necessary
  - ideas
    - define path variables in r
    - [ ] how to stop R ESS tab complete from pinging countries?

*** Integrated development environments
:PROPERTIES:
:ID:       1f307f13-9795-4ae8-83d6-235db6e5d866
:END:
  - IDEs
    - Visual Studio
      - https://code.visualstudio.com/blogs/2017/11/15/live-share
      - https://www.reddit.com/r/programming/comments/6g498w/visual_studio_code_may_2017/
    - https://eclipse.org/ide/
- https://github.com/codespaces
*** General reference, guides, and tutorials
:PROPERTIES:
:ID:       2faf071d-912b-4003-a42a-d9f18144434b
:END:
- https://software-carpentry.org/lessons/
- https://www.mensurdurakovic.com/hard-to-swallow-truths-they-wont-tell-you-about-software-engineer-job/
- miscellaneous
  - github education discounts
    - https://mail.google.com/mail/u/0/#inbox/FMfcgxwDqnjnHJFDpDpBQQdGrjgtfdfn
  - https://www.benkuhn.net/progessays/
- https://12factor.net/
- https://ss64.com/
- https://www.reddit.com/r/IWantToLearn/comments/9zqq66/i_want_to_learn_computer_science_where_do_i_start/
- https://hacker-tools.github.io/
- Online computer educational resources
  - [[https://github.com/Developer-Y/cs-video-courses/blob/master/README.md][Computer science courses with video lectures, github]]
  - [[https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-fall-2010/][MIT Mathematics for computer science 2010]]
  - https://www.edx.org/course/subject/computer-science
  - https://software-carpentry.org/lessons/
  - [[https://www.codeschool.com/account][Code School]]
  - [[https://mva.microsoft.com/][Microsoft Virtual Academy]]
  - Online IDEs
    - https://www.codecademy.com/courses/web-beginner-en-HZA3b/0/1?curriculum_id=50579fb998b470000202dc8b
    - [[https://codepen.io/jeszyman/][codepen]]
      - https://www.reddit.com/r/web_design/comments/7z7f8n/animated_login_avatar/
    - [[https://console.cloud.google.com/cloudshell/editor?pli=1&shellonly=true][Google cloud shell]]
    - [[https://stackoverflow.blog/2014/09/16/introducing-runnable-javascript-css-and-html-code-snippets/][stack snippets]]
    - https://glitch.com/
    - https://www.w3schools.com/
  - [[https://becker.wustl.edu/services/science-support/research-computing-workshops][Archive of Becker research computing workshops]]
  - [[https://software-carpentry.org/][software carpentry]]
  - [[https://www.reddit.com/r/statistics/comments/9ec69o/what_are_the_basics_of_computer_science_for_a/][reddit: computer science fot statisticians]]
- bashs, theory
  - mathematics for computer science
    - https://www.reddit.com/r/Simulated/comments/9k307h/mechanical_binary/
    - [[https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-042j-mathematics-for-computer-science-spring-2015/proofs/tp1-1/][MIT mathematics for computer science]]
**** General reference
:PROPERTIES:
:ID:       5dc7e0a8-1d67-4f76-ac82-b9b76d44db04
:END:
- https://www.youtube.com/watch?v=WtM3wPVhkik&list=PLY0K6zoKdhlDrkxqaRJUXfHpTjE_kVzYB

***** completed work                                                :ARCHIVE:
:PROPERTIES:
:ID:       83e46b45-0ea3-4ebc-8253-399b11f4eda0
:END:
****** DONE Deepak Purushotham: Introduction to GitHub
CLOSED: [2017-10-19 Thu] SCHEDULED: <2017-10-19 Thu 14:00-15:00>
:PROPERTIES:
:ID:       A6EB5BB1-BAC0-4326-A416-FCBFE342EF13
:END:
:LOGBOOK:
CLOCK: [2017-10-19 Thu 14:01]--[2017-10-19 Thu 15:01] =>  1:00
:END:

**** The Missing Semester of Your CS Education
:PROPERTIES:
:ID:       c7d8dd07-098e-4bc4-b008-5da0abcabb0d
:END:
- https://missing.csail.mit.edu/
  - https://www.reddit.com/r/programming/comments/eyagcd/the_missing_semester_of_your_cs_education_mit/
*** [[id:b3c4c653-9584-4084-9e0e-abf16f95ac52][Ideas]]
:PROPERTIES:
:ID:       6e6a07d7-47ad-4ad5-99c1-7748bcc432bc
:END:

:PROPERTIES:
:ID:       D2ABA474-BA09-4A1D-BFDE-C8404DD8AD0A
:END:
*** Google cloud
:PROPERTIES:
:ID:       5435d91b-864b-4644-a0c0-1ffb262db35b
:END:
- https://superuser.com/questions/691189/totally-unable-to-switch-google-accounts
#+begin_src bash
cd /tmp
curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-478.0.0-linux-x86_64.tar.gz

tar -xf google-cloud-cli-478.0.0-linux-x86_64.tar.gz

./google-cloud-sdk/install.sh

./google-cloud-sdk/bin/gcloud init

./google-cloud-sdk/bin/gcloud compute ssh <USERNAME>@<INSTANCE_NAME> --zone <ZONE> --ssh-key-file ~/.ssh/id_rsa

./google-cloud-sdk/bin/gcloud compute ssh jeszyman@instance-20240601-125838 --zone us-central1-a --ssh-key-file ~/.ssh/id_rsa

sudo mkdir -p /usr/local/gcloud
sudo mv /tmp/google-cloud-sdk /usr/local/gcloud/

echo $PATH

gcloud compute ssh jeszyman@instance-20240601-125838 --zone us-central1-a
#+end_src
- gsutil is python app to access cloud storage
  - gsutil cp - use for single files. it will always overwrite 
  - gsutil rsync - use for dirs  
    


gsutil -m cp -n -c -L /mnt/data/projects/pnst/logs/gcloud-transfer-2025-02-03.txt gs://chaudhuri-lab-bucket1/ris/mpnst/inputs/seq/10_10NC60M_R1.fastq.gz   /mnt/data/projects/pnst/inputs/10_10NC60M_R1.fastq.gz

*** Ansible
:PROPERTIES:
:ID:       1169cb65-4a18-43d3-9643-67ac3e85f0d1
:END:
**** Playbooks
**** Ansible Cookbook                                              :cookbook:
:properties:
:header-args:yaml: :tangle ./ansible/playbooks/ansible-cookbook.yaml :mkdirp yes
:end:
- [[file:ansible/playbooks/ansible-cookbook.yaml]]
******** Preamble
#+begin_src yaml
---
- name: Ansible cookbook
  # Hosts as all allows for either local or remote runs.
  # Local runs should use the syntax:
  # ANSIBLE_STDOUT_CALLBACK=yaml ansible-playbook -i localhost, --connection=local <PLAYBOOK.yaml>
  # ANSIBLE_STDOUT_CALLBACK=yaml ensures better human-readable outputs
  # -i localhost, (WITH comma) specifies implicit empty host file
  # --connection=local bypasses ssh
  #
  # This setup allows hosts: all in the playbook but local runs via command line without
  # an inventory. 
  
  hosts: all
  tasks:
#+end_src
******** Debugging info
:PROPERTIES:
:ID:       537315c8-951a-42bc-99af-c3977c19e812
:END:
#+name: ansible-debugging-info
#+begin_src yaml
    - name: Debug useful variable readouts
      debug:
        msg: "
          \n=== System Information ===\n\n
          Logged in as: {{ ansible_env.USER }}
          \n\nHome directory: {{ ansible_user_dir }}
          \n\nEnvironment HOME: {{ ansible_env.HOME }}
          \n\nPATH:
            {{ ansible_env.PATH }}
          \n\nOS: {{ ansible_distribution }} {{ ansible_distribution_version }} ({{ ansible_os_family }})
          \n\nHostname: {{ ansible_hostname }}
          \n\nFQDN: {{ ansible_fqdn }}
          \n\nDefault IPv4: {{ ansible_default_ipv4.address }}
          \n\nInventory Sources: {{ ansible_inventory_sources }}
          \n\nPackage Manager: {{ ansible_pkg_mgr }}
          \n========================="
#+end_src
******** Include variables from a yaml file
********* Declared the yaml file
:PROPERTIES:
:ID:       f23ee77d-a479-40be-8111-7a5ba70ba3fd
:END:
#+begin_src yaml :tangle ./ansible/group_vars/cookbook-apts.yaml
apt_packages:
  - tree
  - htop
#+end_src

#+name: ansible-include-vars-yaml
#+begin_src yaml
# Note this is relative to the playbook location 
    - name: Include yaml explicitly
      include_vars:
        file: ../group_vars/cookbook-apts.yaml
#+end_src
********* Access the variables from the declared yaml
#+begin_src yaml
    - name: Install apt packages
      apt:
        name: "{{ apt_packages }}"
        state: present # state: latest for updates, state: present for checks
        update_cache: yes
      become: true
#+end_src
**** Processes
- Avoid cryptography deprecation warnings
  #+begin_src bash
# Avoid cryptography deprecation warnings: 
pip install --upgrade paramiko cryptography
#+end_src
- Install ansible language server
  #+begin_src bash
npm i -g @ansible/ansible-language-server
#+end_src
**** Configuration
[[file:~/.ansible.cfg]]

#+begin_src bash :results output replace
ansible --version
#+end_src

#+RESULTS[87d82b76e65498498f92fb10a274e734b3bddd69]:
: ansible [core 2.11.12] 
:   config file = /home/jeszyman/.ansible.cfg
:   configured module search path = ['/home/jeszyman/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
:   ansible python module location = /home/jeszyman/.local/lib/python3.10/site-packages/ansible
:   ansible collection location = /home/jeszyman/.ansible/collections:/usr/share/ansible/collections
:   executable location = /home/jeszyman/.local/bin/ansible
:   python version = 3.10.12 (main, Nov  6 2024, 20:22:13) [GCC 11.4.0]
:   jinja version = 3.1.4
:   libyaml = True

**** Reference
- https://sweworld.net/cheatsheets/ansible/

*** code.perl
#+name: code.perl
#+begin_src bash :tangle ./emacs/public_yasnippets/org-mode/code.perl
# -*- mode: snippet -*-
# key: code.perl
# expand-env: ((yas-indent-line 'none))
# condition: 'auto
# --
,#+begin_src perl
$0
,#+end_src
#+end_src
[[file:emacs/public_yasnippets/org-mode/code.perl]]

*** Linux ansible playbook
:properties:
:header-args:yaml: :tangle ./ansible/playbooks/linux-playbook.yaml :mkdirp yes
:end:
**** group_vars
#+begin_src yaml :tangle ./ansible/group_vars/all.yaml 
apt_packages:
  - ansible
  - tree
  - htop
  - curl
  - git
  - vim

#+end_src
**** Preamble
#+begin_src yaml
---
- name: Linux Basic Playbook
  hosts: all
  gather_facts: true

  tasks:
#+end_src
**** Include variables from a declared yaml file
#+begin_src yaml
    - name: Include group_vars/all.yaml explicitly
      include_vars:
        file: ../group_vars/all.yaml
#+end_src
**** Debugging info
#+begin_src yaml
    - name: Debug useful variable readouts
      debug:
        msg: |
          Logged in as: {{ ansible_env.USER }}
          
          Home directory: {{ ansible_user_dir }}
          
          Environment HOME: {{ ansible_env.HOME }}
          
          PATH: {{ ansible_env.PATH }}
          
          OS: {{ ansible_distribution }} {{ ansible_distribution_version }} ({{ ansible_os_family }})
          
          Hostname: {{ ansible_hostname }}
          
          FQDN: {{ ansible_fqdn }}
          
          Default IPv4: {{ ansible_default_ipv4.address }}
          
          Inventory Sources: {{ ansible_inventory_sources }}
          
          Package Manager: {{ ansible_pkg_mgr }}
#+end_src
**** Install APT package list as an external file
:PROPERTIES:
:ID:       b6edf46b-f569-4f13-8eb2-dc6011700f96
:END:
#+begin_src yaml
    - name: Ensure APT packages are installed
      apt:
        name: "{{ apt_packages }}"
        state: present
        update_cache: yes
      become: true  # Use sudo to run the task

#+end_src
** Development                                                          :dev:
:PROPERTIES:
:header-args: :tangle no
:ID:       0f3dbadd-f6f3-4f89-8799-321fabc34031
:END:
*** Make basic repo                                                :makefile:
:PROPERTIES:
:ID:       3616424d-6e5d-44ef-acad-45d4b44891e3
:END:
#+begin_src bash :tangle ./tmp/makefile :tangle-mode (identity #o555) :mkdirp yes
.PHONY: all

all: git_setup

git_setup:
	git init
	curl 'https://raw.githubusercontent.com/jeszyman/basecamp/master/resources/git/jeszyman_gitignore' > .gitignore
	curl 'https://raw.githubusercontent.com/jeszyman/basecamp/master/tools/git/pre-commit' > .git/hooks/precommit_sizecheck
	chmod +x .git/hooks/precommit_sizecheck

#+end_src
** General reference
:PROPERTIES:
:ID:       3eb81250-e885-4941-a559-997381abc196
:END:
- https://www.reddit.com/r/ChatGPT/comments/13r3v36/i_run_an_ai_tools_directory_here_are_some_top_ai/
- https://dev.to/devdefinitive/33-github-projects-i-have-bookmarked-and-you-should-298o
- https://www.reddit.com/r/datascience/comments/mlfy02/what_is_your_ds_stack_and_roast_mine/
** Ideas                                                              :ideas:
:PROPERTIES:
:ID:       b3c4c653-9584-4084-9e0e-abf16f95ac52
:END:
- make org tangles run asyncronous
- cast boox screen to linux or http
2. [X] safe rm through [[http://pages.stern.nyu.edu/~marriaga/software/libtrash/][libtrash]]
https://gitlab.com/Chocimier/tuir

let's draw the dir trees w/ tikz / forest
https://tex.stackexchange.com/questions/211726/draw-directory-tree-using-folder-icons

https://tex.stackexchange.com/questions/393646/how-to-link-different-trees-with-tikz

https://mirror.las.iastate.edu/tex-archive/graphics/pgf/contrib/forest/forest-doc.pdf



#+begin_src bash :results replace
curl ifconfig.me
#+end_src

#+RESULTS[ecf21c9a7a3c88d11d3fc4ed0d695fe0afc5ccbe]:
: 75.129.225.193



#+begin_src python
import re

def parse_conda_export(file_path):
    package_versions = {}
    with open(file_path, 'r') as file:
        for line in file:
            if line.startswith('#') or not line.strip():
                continue  # Skip comment lines and empty lines
            parts = line.split()
            package_name = parts[0]
            package_version = parts[1]
            package_versions[package_name] = package_version
    return package_versions

def find_versions_in_text(text, package_versions):
    potential_packages = re.findall(r'\b\w+\b', text)
    versions = {}
    for package in potential_packages:
        if package in package_versions:
            versions[package] = package_versions[package]
    return versions

# Example usage
text_block = "samtools fastp"
conda_export_file = '/home/jeszyman/repos/mpnst/resources/full_conda_env.txt'

package_versions = parse_conda_export(conda_export_file)
found_versions = find_versions_in_text(text_block, package_versions)

for package, version in found_versions.items():
    print(f"{package}: {version}")

#+end_src

Basecamp snakefile md5s, aymlinks,
- https://docs.khoj.dev/#/
- http://jasperproject.github.io/
- http://www.instructables.com/id/Raspberry-Pi-Sous-Vide/
- https://9to5google.com/2016/12/26/how-to-use-chrome-remote-desktop-family-assistance/
- http://imgur.com/gallery/hfG6e
- http://nengo.ca/build-a-brain/spaunvideos
- [[https://aws.amazon.com/websites/?sc_channel=PS&sc_campaign=acquisition_US&sc_publisher=google&sc_medium=websites_webapps_nb&sc_content=web_hosting_e&sc_detail=free%20web%20hosting&sc_category=websites_webapps&sc_segment=96578640642&sc_matchtype=e&sc_country=US&s_kwcid=AL!4422!3!96578640642!e!!g!!free%20web%20hosting&ef_id=WENUqgAAAV2Dp9Ql:20170209002051:s][Amazon web hosting]]
- https://aws.amazon.com/getting-started/tutorials/launch-a-virtual-machine/
*** clear windows with compton
#+begin_src bash :tangle ~/.config/compton.conf
shadow = true;
opacity-rule = [
  "50:class_g = 'i3-frame'",
  "80:class_g = 'i3-bar'",
  "90:class_g = 'Emacs'"
  ];
#+end_src
*** wider chatgtp message window
:PROPERTIES:
:ID:       f4d712d2-4318-4504-9eee-0a45eeededd7
:END:
https://community.openai.com/t/please-widen-the-code-block-style-element-in-chat/132308/2
*** CI/CD of basic snakemake repo testing my run functions
:PROPERTIES:
:ID:       69fa7015-0407-4413-a38d-e9d3d87e4e31
:END:
- https://chat.openai.com/c/b911ebfa-9d2c-42d7-bdc5-7df22ecbffc9
*** App development
:PROPERTIES:
:ID:       DFF98A32-3864-46E0-AF88-BC3105D8A8D5
:END:

https://www.reddit.com/r/IWantToLearn/comments/5bfegh/iwtl_how_to_make_a_very_simple_free_app_with_ads/

*** Web Form Macros
:PROPERTIES:
:ID:       230A6BFC-79C5-4C93-A423-E08CD7FA0D7E
:END:

**** iMacros
:PROPERTIES:
:ID:       2A6B8809-0CA7-4C9F-BDAD-54008351F020
:END:

- http://www.howtogeek.com/113789/how-to-automate-repetitive-web-browser-tasks-with-imacros/
- http://imacros.net/browser/cr/welcome
- https://www.youtube.com/channel/UCxAl1C4SfrznEhBpyBcXGOg
- http://forum.imacros.net/viewforum.php?f=11
- http://imacros.net/support/resources

***** Setup
:PROPERTIES:
:ID:       33FC8135-9A4E-48EE-95A0-35919A0FE8CB
:END:

- chrome extension
- downloaded file access installer
  -
- used in [[id:BEEE4717-ED5A-4C0D-A546-B53E35E342D0][data and information maintenance]]
******* Scripts
:PROPERTIES:
:ID:       31658ff5-ffd8-4bb4-8d72-4cdaea41627d
:END:
******** org_latex_export.sh
:PROPERTIES:
:ID:       c62cf1fd-36bd-4555-8e8a-4030aedf6f06
:header-args: tangle-mode (identity #o755) :mkdirp yes
:END:


- need to redefine org-latex-pdf-process


*** Ideas
:PROPERTIES:
:ID:       58cecae5-0126-4608-b079-c0cb5c1835c8
:END:
- new platforms
  - https://replit.com/@JeffSzymanski/test#main.sh
- technical debt
  - universal unzip
- dev
  - workflow
    - docker tool build
    - ?dir setup
    - ?tool validation
    - generate test data
    - dev
    - push to params
  - env
    - server
    - cloud
      - github repo
      - dockerhub repo
    - local
      - toolkit repo
        - dockerfile per-tool independent builds, tagged
      - project repo
        - nextflow nfs, parameterized
        - nextflow config
      - tmp- testing output files
*** tmp
**** Literate Programming with Emacs Org-mode

Generally comments should reside within the Org-mode structure and outside of code blocks. Tangling with a header argument :comments org will include both the header text and text between the header and code block. For example:

***** This header will be a comment
:properties:
:header-args:bash: :tangle /tmp/test.sh :comments org
:end:

This text in org and below the header will be a comment

#+begin_src bash

# This text within the code block will be a comment

ls
2
#+end_src

This comment will not appear in the tangled code

****** Child headers are not comments unless they contain more code blocks
