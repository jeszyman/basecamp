* Basecamp
#+name: 
#+begin_src bash :tangle no
#!/bin/bash
date=$(date +%Y-%m-%d)

for d in $HOME/repos/*
do 
#	[[ ! -d "$d" ]] && continue
    echo "$d"
    cd "$d"
    git add -A && \
        git  commit -a -m "$date" && \
        git push && \
        git submodule foreach --recursive git add -A && git commit -am "$date" && \
        git submodule foreach --recursive git push
done             

#!/bin/bash
date=$(date +%Y-%m-%d)
for d in $HOME/repos/*
do 
#	[[ ! -d "$d" ]] && continue
	echo "$d"
	cd "$d"
	git add -A && \
        git commit -a -m "$date" && \
        git push && \
        git submodule foreach --recursive git checkout master &&\
        git submodule foreach --recursive git add -A && git commit -am "$date" && \
        git submodule foreach --recursive git push
done             

git submodule foreach --recursive git add -A && git commit -am "2020-12-16"
git submodule foreach --recursive git push
git submodule foreach --recursive git pull

cd $repo
git submodule foreach --recursive git checkout master


git submodule foreach --recursive git pull


        
done

#+end_src
https://www.google.com/search?client=ubuntu&hs=w80&sxsrf=ALeKk02nCefgbT-UzhMVn2emvtD5Hw-xbA%3A1608387013058&ei=xQneX7P-AtOD9PwPgImv6AY&q=chrome+view+excel+file+in+browser&oq=chrome+view+excel+file+in+browser&gs_lcp=CgZwc3ktYWIQAzIFCAAQzQIyBQgAEM0CMgUIABDNAjIFCAAQzQI6BAgAEEc6AggAOgYIABAHEB46BggAEAUQHjoGCAAQCBAeOggIABAIEAcQHjoECCEQClCS5g5Y75MPYKKWD2gBcAJ4AIABzgGIAZ8MkgEGMTUuMC4xmAEAoAEBqgEHZ3dzLXdpesgBCMABAQ&sclient=psy-ab&ved=0ahUKEwjz9MvEnNrtAhXTAZ0JHYDEC20Q4dUDCA0&uact=5
** Setup
:PROPERTIES:
:ID:       181dcf49-4df1-4155-9564-ff7c85b408b0
:END:
- repo setup
  - workflow
    - code dev in org file
    - validated code pushed to ./src/
      - ideas get write protection
    - common code pushed to submodule repos
  - local-setup.sh
  - global-setup.sh
#+name: basecamp_setup
#+begin_src bash :tangle no
project=basecamp
repo=~/repos/"${project}"
mkdir -p "${repo}"/src/shell
#+end_src
** [[id:569d1afa-e991-47b7-be15-3dd6364f5258][LINK TO my bash functions]]
** [[id:cd560390-aa1e-4c9e-8317-08610e5de42a][LINK TO linux]] 
** Software
:PROPERTIES:
:ID:       9E19E626-9D6C-4296-BEDB-80033A846CF4
:END:
:LOGBOOK:
CLOCK: [2019-02-17 Sun 08:45]--[2019-02-17 Sun 09:35] =>  0:50
:END:
- text editors
  - vim https://www.reddit.com/r/linux4noobs/comments/iy3mcc/vim_cheatsheet_for_noobs_with_corrections/
- data storage and transfer
  - - globus
    - [[https://docs.globus.org/cli/][cli]]
      - [[https://docs.globus.org/cli/reference/][documentation]]
        - https://docs.globus.org/how-to/globus-connect-personal-linux/#globus-connect-personal-cli
- capture screen to gif
  - https://www.cockos.com/licecap/
- https://wwjw.reddit.com/r/assholedesign/comments/bosgf4/comment/enk8k25/
- [[id:FB8FF6B1-C6BD-4272-AC15-05BB15DF609B][Emacs]]
- https://www.reddit.com/r/programming/comments/ag7vh4/detecting_agile_bullshit_from_the_us_department/
- top-down planning, bottom-up delivery

*** Specific software 
- by application
  - pdf ocr
    - https://softwarerecs.stackexchange.com/questions/3412/free-ocr-software-that-makes-a-pdf-searchable-with-searchable-text-at-the-right
- google sheets
  - https://www.benlcollins.com/spreadsheets/google-sheets-query-sql/
  - https://webapps.stackexchange.com/questions/31894/google-spreadsheet-timestamp/31942#31942
- chromium 
  - [[http://stackoverflow.com/questions/6250447/trigger-right-click][trigger right click chrome w/ java?]]
- Cisco AnyConect
  - [[https://superuser.com/questions/932650/cisco-anyconnect-secure-mobility-client-multiple-profiles][Cisco AnyConnect Secure Mobility Client - Multiple Profiles]]
  - my profile at /opt/cisco/anyconnect/profile/test.xml
- https://extensions.libreoffice.org/extensions
- trash http://hasseg.org/trash/
- [[https://rclone.org/][rclone]]

- VLC
  - https://webapps.stackexchange.com/questions/tagged/google-contacts?sort=votes&pageSize=15
  - [[https://apple.stackexchange.com/questions/127386/how-do-i-vary-the-playback-speed-in-vlc-using-keyboard-shortcuts][VLC playback]]
            |--------------+---------------|
            | Faster       | CMD + =       |
            | Slower       | CMD -         |
            | Jump back    | CMD ALT LEFT  |
            | Jump forward | CMD ALT RIGHT |
- [[https://www.chromium.org/user-experience/keyboard-access][chromium keyboard shorcuts]]
- VLC
  - https://webapps.stackexchange.com/questions/tagged/google-contacts?sort=votes&pageSize=15
  - [[https://apple.stackexchange.com/questions/127386/how-do-i-vary-the-playback-speed-in-vlc-using-keyboard-shortcuts][VLC playback]]
    |--------------+---------------|
    | Faster       | CMD + =       |
    | Slower       | CMD -         |
    | Jump back    | CMD ALT LEFT  |
    | Jump forward | CMD ALT RIGHT |

- https://youtube-dl.org/
- https://github.com/eudaldgr/youtube-dl

**** virtualbox
- [[https://www.virtualbox.org/manual/][documentation]]
- processes
  - install
    - post-install guest additions CD
- https://www.google.com/search?q=virtualbox+linux+guest+additions 
**** by operating system
- linux
  - https://github.com/libfuse/sshfs
**** orgzly
- orgzly event reminders occur at time of event https://github.com/orgzly/orgzly-android/issues/664
**** inkscape
:PROPERTIES:
:CREATED:  [2020-10-04 Sun 10:05]
:ID:       e68592b2-5e86-48c9-a2c2-5983e53d34f8
:END:
- inkscape
  - https://stackoverflow.com/questions/15710673/inkscape-too-slow-when-importing-r-plots
  - https://inkscape.org/forums/questions/line-spacing/
**** okular
- https://www.google.com/search?q=okular+open+in+new+windows
- [[https://docs.kde.org/stable5/en/kdegraphics/okular//][documentation]]
- https://docs.kde.org/trunk5/en/kdegraphics/okular/okular.pdf 
- https://www.google.com/search?q=okular+remap+keyboard+shortcuts
**** libreoffice 
- https://ask.libreoffice.org/en/question/157807/set-memory-settings-in-version-6042/
- https://superuser.com/questions/345365/exporting-vector-graphics-from-inkscape-into-libreoffice
- https://askubuntu.com/questions/599915/what-is-the-closest-font-to-helvetica-available-on-ubuntu
- https://tex.stackexchange.com/questions/106024/libreoffice-inkscape-eps-latex
- https://ask.libreoffice.org/en/question/157807/set-memory-settings-in-version-6042/
- https://www.reddit.com/r/libreoffice/comments/7umifb/has_libreoffice_6_just_killed_the_indispensable/
- https://www.google.com/search?q=libreoffice+escape+comment
***** libreoffice impress

- https://www.google.com/search?q=libreoffice+snap+line
- https://ask.libreoffice.org/en/question/10973/permanently-set-default-page-style/


**** gimp
- commands
  |----------+---------|
  | function | command |
  |----------+---------|
  | <35>     | <35>    |
  |          |         |
- processes
  - https://www.google.com/search?q=gimp+crop+image
  - https://www.google.com/search?q=gimp+convert+to+black+and+white
- standards and best practice
- documentation
- applications
- reference
  - [[file:~/.emacs.d/snippets/org-mode/software]]
**** MediaWiki
:PROPERTIES:
:ID:       4F02B352-1A93-4CF4-A386-2788387A18C0
:END:

**** Zotero
:PROPERTIES:
:ID:       25D1FA26-1865-4BFC-845C-8D1B1830EE13
:END:
:LOGBOOK:
CLOCK: [2020-01-16 Thu 08:16]--[2020-01-16 Thu 08:45] =>  0:29
CLOCK: [2019-03-04 Mon 14:59]--[2019-03-04 Mon 15:17] =>  0:18
:END:
https://github.com/willsALMANJ/Zutilo
- zotfile
- better biblatex 
- [[https://www.zotero.org/support/][documentation]]
- https://www.google.com/search?q=zotfile+sync+files&oq=zotfile+sync+files&aqs=chrome..69i57.4295j0j4&client=ubuntu&sourceid=chrome&ie=UTF-8
- Add-ons
  - Better BibTex
    - auto-exports to [[file:~/data/library/bib.bib]]
    - [[https://retorque.re/zotero-better-bibtex/][documentation]]
    - [[https://github.com/retorquere/zotero-better-bibtex][repo]]
  - [[http://zotfile.com/][ZotFile]]
    - Renames files 
    - Allows custom file location at [[file:~/data/library/]]
- Performance- manual entry lag
  - [[https://forums.zotero.org/discussion/16733/manual-citation-entry-clunky][No answers, but question asked]]

*** Software development
- https://www.reddit.com/r/commandline/comments/fyla88/ux_design_principles_for_command_line_interfaces/
- unit testing
  - https://docs.python.org/3/library/unittest.html
- [[https://www.reddit.com/r/IWantToLearn/comments/8o7uli/iwtl_how_to_design_and_create_mobile_apps_and/][Reddit: IWTL how to design and create mobile apps and games from scratch]]
- agile
- [[http://powazek.com/posts/1655][Programmers are Tiny Gods]]
- test-driven development :: requirements converted to test cases
*** Graphviz                                                       :software:
:PROPERTIES:
:ID:       4BFFFC0C-CBFA-4E97-BB52-88A95D4A361B
:CREATED:  [2019-08-23 Fri 07:56]
:END:
:LOGBOOK:
CLOCK: [2018-12-08 Sat 16:05]--[2018-12-08 Sat 16:44] =>  0:39
CLOCK: [2018-12-08 Sat 15:16]--[2018-12-08 Sat 15:25] =>  0:09
CLOCK: [2017-11-10 Fri 11:40]--[2017-11-10 Fri 11:57] =>  0:17
CLOCK: [2017-11-10 Fri 10:45]--[2017-11-10 Fri 11:31] =>  0:46
:END:
- commands
  |----------+---------|
  | function | command |
  |----------+---------|
  | <35>     | <35>    |
  |          |         |
- [[http://www.graphviz.org/documentation/][documentation]] and guides
  - [[http://www.graphviz.org/doc/info/lang.html][The DOT Language]]
  - [[http://www.tonyballantyne.com/graphs.html][Drawing Graphs using Dot and Graphviz]]
  - attributes
    - [[http://www.graphviz.org/doc/info/attrs.html#a:rankdir][Node, Edge and Graph Attributes]]
    - [[https://hackage.haskell.org/package/graphviz-2999.19.0.0/docs/Data-GraphViz-Attributes.html][attributes and values from the haskell graphviz package]]
- applications
  [[file:/tmp/entity-relationship-diagram.pdf]]
  #+BEGIN_SRC dot :dir ~/data/imgs/graphviz-examples :file /tmp/entity-relationship-diagram.pdf :cmdline -Tpdf
// https://mamchenkov.net/wordpress/2015/08/20/graphviz-dot-erds-network-diagrams/
digraph entityRelationshipDiagram { 
    label = "MPNST Project Data Model"
    labelloc = top;
    rankdir=LR;
 //
    node [shape=plaintext];
    edge [dir=both];
//
    subjects [label=<
            <table border="0" cellborder="1" cellspacing="0">
                <tr><td bgcolor="lightblue">subjects</td></tr>
                <tr><td PORT="a" align="left"><b>subject_id</b></td></tr>
                <tr><td align="left">dob</td></tr>
                <tr><td align="left">sex</td></tr>
                <tr><td align="left">institution</td></tr>                
                <tr><td align="left">current_dx</td></tr>                
                <tr><td align="left">plexiform_dx_date</td></tr>                
                <tr><td align="left">plexiform_dx_date_specificity</td></tr>                
                <tr><td align="left">anf_dx_date</td></tr>                
                <tr><td align="left">anf_dx_date_specificity</td></tr>                
                <tr><td align="left">mpnst_dx_date</td></tr>                
                <tr><td align="left">mpnst_dx_date_specificity</td></tr>                
                <tr><td align="left">mpnst_grade</td></tr>                
                <tr><td align="left">mpnst_stage</td></tr>                
            </table>
        >];
//
    specimens [label=<
            <table border="0" cellborder="1" cellspacing="0" cellpadding="1">
                <tr><td bgcolor="lightblue">specimens</td></tr>
                <tr><td PORT="a" align="left"><b>specimen_id</b></td></tr>
                <tr><td PORT="b" align="left">subject_id</td></tr>
                <tr><td align="left">collection_date</td></tr>
                <tr><td align="left">specimen_type</td></tr>
            </table>
        >];
//
//
        libraries [label=<
            <table border="0" cellborder="1" cellspacing="0">
                <tr><td bgcolor="lightblue">libraries</td></tr>
                <tr><td align="left"><b>library_id</b></td></tr>
                <tr><td PORT="b" align="left">specimen_id</td></tr>
                <tr><td align="left">library_type</td></tr>
            </table>
        >];
//
        treatments [label=<
            <table border="0" cellborder="1" cellspacing="0">
                <tr><td bgcolor="lightblue">treatments</td></tr>
                <tr><td align="left"><b>treatment_id</b></td></tr>
                <tr><td PORT="b" align="left">subject_id</td></tr>
                <tr><td align="left"> treatment_class </td></tr>
                <tr><td align="left"> treatment_subclass </td></tr>
                <tr><td align="left"> treatment_date </td></tr>                
                <tr><td align="left"> treatment_date_specificity </td></tr>                
            </table>
        >];
//
        diagnostics [label=<
            <table border="0" cellborder="1" cellspacing="0">
                <tr><td bgcolor="lightblue">diagnostics</td></tr>
                <tr><td align="left"><b>dx_id</b></td></tr>
                <tr><td PORT="b" align="left">subject_id</td></tr>
                <tr><td align="left">dx_finding</td></tr>
                <tr><td align="left">dx_class</td></tr>
                <tr><td align="left">dx_subclass</td></tr>
                <tr><td align="left">dx_date</td></tr>
                <tr><td align="left">dx_date_specificity</td></tr>
            </table>
        >];
//
//
subjects:a -> specimens:b [arrowhead=crow, arrowtail=none, dir=both]  
subjects:a -> treatments:b [arrowhead=crow, arrowtail=none, dir=both]  
subjects:a -> diagnostics:b [arrowhead=crow, arrowtail=none, dir=both]  
specimens:a -> libraries:b [arrowhead=crow, arrowtail=none, dir=both]  
}
#+END_SRC
  [[file:/tmp/dot-example.png]]
  #+BEGIN_SRC dot :results replace :file /tmp/dot-example.png :cmdline -Tpng
  digraph graphName{
  // syntax
  //  no . or - allowed, instead use CamelCase

  // graph params
  size ="6/6";
  node [color=grey fontsize=12, shape=box, fontname=Helvetica];

  // nodes
  node1 [label="Node label"]
  node2 [label="Second Node"]

  // edges
  node1 -> unlabeled_node
  node1 -> node2 [label="Edge label"]
  // wavy
  node1 -> node3:w
  } 
  #+END_SRC
- interfaces
  - w/ other platforms
    - org
      - [[http://correl.phoenixinquis.net/2015/07/12/git-graphs.html][Drawing git graphs with graphviz and org mode]]
      - Advanced- [[http://orgmode.org/worg/org-tutorials/org-dot-diagrams.html][Worg for dot]]
      - graphviz in Org-mode
        - [[file:~/.emacs.d/snippets/org-mode/code.dot][yas template]]
        - dot header is #+BEGIN_SRC dot :file ./<FILE_NAME>.png :cmdline -Tpng
        - Simple- [[http://tonyballantyne.com/graphs.html][Drawing Graphs using Dot and Graphviz]]
    - Run through python
      - e.g. http://scikit-learn.org/stable/modules/generated/sklearn.tree.export_graphviz.html
  - http://viz-js.com/
- output
  - [[https://stackoverflow.com/questions/14784405/how-to-set-the-output-size-in-graphviz-for-the-dot-format][How to set the output size in GraphViz for the dot format?]]
- processes
  - assign attributes to group
    - https://stackoverflow.com/questions/28853898/groups-of-nodes-with-the-same-attributes-in-graphviz-file
  - make a legend
- reference
  - [[http://graphviz.it/#/gallery/states.gv][live editor]]
  - [[https://stackoverflow.com/questions/14662092/does-the-dot-language-support-variables-aliases][stack: dot does not directly support aliases]]
  - https://www.google.com/search?q=graphviz+database
  - [[file:~/.emacs.d/snippets/org-mode/software]]
- standards and best practice
- Cisco AnyConect
  - [[https://superuser.com/questions/932650/cisco-anyconnect-secure-mobility-client-multiple-profiles][Cisco AnyConnect Secure Mobility Client - Multiple Profiles]]
  - my profile at /opt/cisco/anyconnect/profile/test.xml
*** Operating Systems
:PROPERTIES:
:ID:       16DB2FD8-1988-48E4-8D8D-E69398823A70
:END:

where are osx dameons? 
- Windows
  - http://stackoverflow.com/questions/7195503/setting-up-a-cron-job-in-windows
- Containers and virtual machines
  - [[https://stackoverflow.com/questions/16047306/how-is-docker-different-from-a-normal-virtual-machine][Docker vs. virtual machine]]
    - VMs have only virtual access to kernal through hypervisor
    - containers run apps natively on real kernal
    - Docker image contains only the differences from the base
    - Docker shares the kernal, VM does not
    - Containers have only libraries and settings to make software work
    - https://github.com/wsargent/docker-cheat-sheet
    - Containers can share kernal with other containers
    - https://www.docker.com/what-container
      - [[file:compend.org_imgs/20170828_091936_19148Pqg.png]]
  - Virtual Box
    - copying a VM- go to export appliance 
    - in VirtualBox, double-press <CMD> to tab out to mac programs

**** image development
:PROPERTIES:
:CREATED:  [2019-05-29 Wed 14:47]
:ID:       82b8ccaa-3bb3-4a71-8123-bce4f20c5242
:END:
:LOGBOOK:
CLOCK: [2019-05-29 Wed 14:47]--[2019-05-29 Wed 15:05] =>  0:18
:END:

**** UNIX-based :career:                                           :software:
:PROPERTIES:
:ID:       BDC42DA2-A632-4FB7-A586-E100B2A045DC
:CREATED:  [2019-08-15 Thu 16:17]
:END:
:LOGBOOK:
CLOCK: [2020-06-25 Thu 07:47]--[2020-06-25 Thu 08:13] =>  0:26
CLOCK: [2020-02-12 Wed 10:15]--[2020-02-12 Wed 10:19] =>  0:04
CLOCK: [2019-09-18 Wed 14:02]--[2019-09-18 Wed 14:40] =>  0:38
CLOCK: [2019-08-30 Fri 09:48]--[2019-08-30 Fri 09:53] =>  0:05
CLOCK: [2019-08-15 Thu 16:15]--[2019-08-15 Thu 16:45] =>  0:30
CLOCK: [2019-05-21 Tue 10:42]--[2019-05-21 Tue 11:04] =>  0:22
CLOCK: [2019-05-15 Wed 16:15]--[2019-05-15 Wed 19:33] =>  3:18
CLOCK: [2019-03-06 Wed 10:15]--[2019-03-06 Wed 12:14] =>  1:59
CLOCK: [2019-03-06 Wed 09:30]--[2019-03-06 Wed 10:00] =>  0:30
CLOCK: [2019-01-12 Sat 08:41]--[2019-01-12 Sat 08:51] =>  0:10
CLOCK: [2018-09-10 Mon 14:04]--[2018-09-10 Mon 14:43] =>  0:39
CLOCK: [2018-04-28 Sat 18:04]--[2018-04-28 Sat 18:05] =>  0:01
CLOCK: [2018-04-28 Sat 17:43]--[2018-04-28 Sat 17:45] =>  0:02
CLOCK: [2017-11-29 Wed 14:14]--[2017-11-29 Wed 15:00] =>  0:46
CLOCK: [2017-10-25 Wed 10:37]--[2017-10-25 Wed 10:48] =>  0:11
CLOCK: [2017-10-25 Wed 09:48]--[2017-10-25 Wed 10:23] =>  0:35
CLOCK: [2017-10-12 Thu 13:37]--[2017-10-12 Thu 13:40] =>  0:03
CLOCK: [2017-08-07 Mon 08:42]--[2017-08-07 Mon 09:14] =>  0:32
:END:
https://www.reddit.com/r/commandline/comments/ka6izh/open_book_study_group_for_the_linux_command_line/
https://docs.monadical.com/s/system-monitoring-tools
***** processes
- account management
  - https://www.google.com/search?q=unix+create+user 
***** general
- guides, tutorials, cheatsheets 
  - http://www.ee.surrey.ac.uk/Teaching/Unix/
  - [[http://linuxcommand.org/][LinuxCommand.org]]
  - [[http://korflab.ucdavis.edu/Unix_and_Perl/current.html][UC Davis Unix and Perl for biologists]]
  - http://www.chm.bris.ac.uk/compres/unix/index.html
  - http://www.commandlinefu.com/commands/browse
  - [[http://catb.org/jargon/html/U/Unix.html][Unix name origin]]
  - [[https://sanctum.geek.nz/arabesque/unix-as-ide-introduction/][Unix as IDE: Introduction]] 
  - [[http://cecs.wright.edu/~p/mateti/Courses/333/Top/index.html][Wright State CEG 333: Introduction to Unix]]
  - [[http://www.commandlinefu.com/commands/browse/sort-by-votes][commandlinefu]]
  - [[https://unix.stackexchange.com/questions/12762/how-do-i-temporarily-bypass-an-alias-in-tcsh][How do I temporarily bypass an alias in tcsh?]]
  - [[https://unix.stackexchange.com/][stack: unix]]
  - [[https://en.wikibooks.org/wiki/Guide_to_Unix][wikibooks: unix]]
  - http://www.thegeekstuff.com/
  - https://sneak.berlin/20191011/stupid-unix-tricks/
- standards and best practices
  - POSIX
  - naming conventions- [[https://unix.stackexchange.com/questions/49008/for-filenames-are-underscores-or-dashes-more-common-in-unix-file-names][stack: For filenames, are underscores or dashes more common in Unix file names? {closed}]]
- file structure
  - https://unix.stackexchange.com/questions/4186/what-is-usr-local-bin
- POSIX
  - [[https://github.com/dylanaraps/pure-sh-bible][pure sh bible]]
***** UNIX tools
:LOGBOOK:
CLOCK: [2020-06-25 Thu 08:25]--[2020-06-25 Thu 08:30] =>  0:05
:END:
- execute interactive woman calls
  #+begin_src emacs-lisp
(defmacro with-minibuffer-input (form &rest inputs)
  (declare (indent 1))
  `(minibuffer-with-setup-hook
       (lambda ()
         (minibuffer-input-provider ',inputs))
     ,form))

(defun minibuffer-input-provider (inputs)
  (let ((hook (make-symbol "hook")))
    (fset hook (lambda ()
                 (remove-hook 'post-command-hook hook)
                 (when inputs
                   (when (= 0 (minibuffer-depth))
                     (error "Too many inputs"))
                   (when (cdr inputs)
                     (add-hook 'post-command-hook hook))
                   (insert (pop inputs))
                   (exit-minibuffer))))
    (add-hook 'post-command-hook hook)))
#+end_src
- https://github.com/denisidoro/navi
- awk
  - [[https://stackoverflow.com/questions/47091464/print-for-loop-input-filename-on-piped-awk-output][file name as variable]]
  - commands
    |----------------+------------------------------------|
    | function       | command                            |
    |----------------+------------------------------------|
    | <35>           | <35>                               |
    | set delimiters | 'BEGIN {FS="<DELIM>";OFS="<DELIM>" |
    |                |                                    |
  - processes
    - https://www.google.com/search?q=awk+pass+variable 
    - [[https://stackoverflow.com/questions/19149731/use-awk-to-find-average-of-a-column][find average]]
    - https://www.google.com/search?q=awk+print+except+first
    - sorting
      - [[https://stackoverflow.com/questions/17048188/how-to-use-awk-sort-by-column-3][sort column]]
      - [[https://stackoverflow.com/questions/5917576/sort-a-text-file-by-line-length-including-spaces][by line length]]
    - variables
      - [[https://stackoverflow.com/questions/19075671/how-do-i-use-shell-variables-in-an-awk-script][external from shell]]
      - https://www.linuxnix.com/awk-scripting-learn-awk-built-in-variables-with-examples/
    - [[https://stackoverflow.com/questions/17001849/awk-partly-string-match-if-column-word-partly-matches][stack: awk partly string match (if column/word partly matches)]]
  - standards and best practice
  - documentation
    - [[http://www.tutorialspoint.com/awk/awk_basic_examples.htm][AWK - Basic Examples]] 
  - applications
    - [[http://reasoniamhere.com/2013/09/16/awk-gtf-how-to-analyze-a-transcriptome-like-a-pro-part-1/][AWK GTF! How to Analyze a Transcriptome Like a Pro]]
  - reference
    - [[file:~/.emacs.d/snippets/org-mode/software]]
- cron
  - commands
    | function                          | command                                   |
    |-----------------------------------+-------------------------------------------|
    | access user-specific crontab file | env EDITOR=nano sudo crontab -e -u <USER> |
    | see jobs                          | sudo crontab -u <USER> -l                 |
    | create job                        | sudo crontab -u <USER> -e                 |
  - [[https://stackoverflow.com/questions/4984725/how-to-test-a-weekly-cron-job][Test]]
  - [[https://askubuntu.com/questions/419548/how-to-set-up-a-root-cron-job-properly?noredirect=1&lq=1][Access root]]
  - [[https://crontab.guru/every-week][Guide to times]]
  - [[https://ole.michelsen.dk/blog/schedule-jobs-with-crontab-on-mac-osx.html][On macos]]
  - https://opensource.com/article/17/11/how-use-cron-linux
- curl
  - https://www.reddit.com/r/commandline/comments/am28qh/try_curl_httpwttrin_image_of_a_shell/
- cut
- du
  - - https://stackoverflow.com/questions/15141588/exclude-all-permission-denied-messages-from-du
- GNU tools
  - make
    - tutorial https://github.com/kyclark/make-tutorial
  - grep
    - https://stackoverflow.com/questions/19380925/grep-a-large-list-against-a-large-file
  - nohup
    - https://unix.stackexchange.com/questions/373461/open-less-scrolled-to-the-end
  - grep
    - [[https://www.macworld.com/article/1041504/software-development/jangeekfactor.html][Macworld: Find anything with grep]]
- grep 
  - https://www.thegeekstuff.com/2011/10/grep-or-and-not-operators/
  - https://unix.stackexchange.com/questions/37313/how-do-i-grep-for-multiple-patterns-with-pattern-having-a-pipe-character/37316
- [[elisp:(with-minibuffer-input (call-interactively 'woman) "gunzip")][gunzip] [[elisp:(with-minibuffer-input (call-interactively 'woman) "gunzip")][gunzip]]
   - https://www.google.com/search?q=gunzip+keep+source 
- head and tail
  - to trim file header lines
    - e.g.: tail -n +2 file.txt > file.stdout
- https://github.com/tqdm/tqdm/blob/master/README.rst
- https://www.reddit.com/r/commandline/comments/7ejk45/what_are_some_of_awesome_curl_web_commands/
- https://www.reddit.com/r/commandline/comments/ad6ryp/10_tools_to_power_up_your_command_line_dev/
- http://www.theunixschool.com/p/awk-sed.html
- ls
  - [[https://unix.stackexchange.com/questions/48492/list-only-regular-files-but-not-directories-in-current-directory][List only regular files (but not directories) in current directory]]
  - file size w/ ls -l --block-size=M
- [[https://askubuntu.com/questions/185661/hide-files-ending-in-tilde][ls- hide files ending in tilde]]
- mail
  - 
- make
  - - https://stackoverflow.com/questions/3239343/make-install-but-not-to-default-directories
- [[- https://www.xpdfreader.com/pdftotext-man.html][pdftotext]]
- pigz
  - https://zlib.net/pigz/
- rsync
  - [[https://rsync.samba.org/]]
  - commands
    |----------+---------|
    | function | command |
    |----------+---------|
    | <35>     | <35>    |
    |          |         |
  - processes
  - standards and best practice
  - [[https://rsync.samba.org/documentation.html][documentation]]
  - applications
  - reference
    - [[file:~/.emacs.d/snippets/org-mode/software]]
- [[https://www.gnu.org/software/sed/][sed]]
  - https://www.google.com/search?q=sed+replace+space+with+tab
  - [[https://stackoverflow.com/questions/19151954/how-to-use-variables-in-a-command-in-sed][use shell variables]]
  - [[https://stackoverflow.com/questions/5410757/how-to-delete-from-a-text-file-all-lines-that-contain-a-specific-string][delete lines with pattern]]
  - [[https://unix.stackexchange.com/questions/99350/how-to-insert-text-before-the-first-line-of-a-file#:~:text=14%20Answers&text=Use%20sed%20's%20insert%20(%20i,text%20in%20the%20preceding%20line.&text=Also%20note%20that%20some%20non,effect%20as%20with%20GNU%20sed%20).&text=Echo%20is%20used%20to%20get%20the%20text.][insert before first line]]
  - https://www.google.com/search?q=sed+remove+first+line 
  - https://www.google.com/search?q=sed+remove+lines+containting+string
  - [[https://www.youtube.com/watch?v=3cLbeYQ2Veg][youtube: sed commands in linux]]
  - [[http://www.brunolinux.com/02-The_Terminal/Find_and%2520Replace_with_Sed.html][Find and replace with SED]]
  - Then, using sed: sed -e '5,10d;12d' filename (deletes lines 5-10 and 12)
  - https://www.google.com/search?q=sed+add+above+first+line 
- ssh 
  - https://superuser.com/questions/8077/how-do-i-set-up-ssh-so-i-dont-have-to-type-my-password
  - https://stackoverflow.com/questions/12715233/why-can-i-ping-a-server-but-not-connect-via-ssh
  - https://serverfault.com/questions/334448/why-is-ssh-password-authentication-a-security-risk
  - https://dev.to/zduey/how-to-set-up-an-ssh-server-on-a-home-computer
- to concat csvs- https://www.quora.com/How-do-you-combine-multiple-csv-files-into-a-single-file-using-the-command-line
- unzip - https://askubuntu.com/questions/994731/how-to-skip-unzipping-a-file-that-already-exists
- Unison
  - commands
    |----------+---------|
    | function | command |
    |----------+---------|
    | <35>     | <35>    |
    |          |         |
  - processes
  - [[https://www.cis.upenn.edu/~bcpierce/unison/download/releases/stable/unison-manual.html][documentation]]
  - applications
- [[elisp:(with-minibuffer-input (call-interactively 'woman) "wget")][wget]]
  - [[https://www.tecmint.com/commandline-download-accelerators-for-linux/amp/][pass list to]]
  - [[https://superuser.com/questions/283481/how-do-i-properly-set-wget-to-download-only-new-files][download only on server side change]]
    - AND SET -O !!
- X11
  - https://www.windowmaker.org/
***** ideas
- idea for citrix script- - https://www.reddit.com/r/commandline/comments/fyla88/ux_design_principles_for_command_line_interfaces/
- ideas- check disk space https://www.cyberciti.biz/tips/shell-script-to-watch-the-disk-space.html
- GNU - [[https://www.gnu.org/help/help.html][Helping GNU]]
- [[https://www.reddit.com/r/commandline/comments/7d5fwa/jobson_automatically_turn_commandline/][reddit: automatically turn command-line applications into webapps]]
***** linux :software:career:
:PROPERTIES:
:CREATED:  [2020-01-09 Thu 15:46]
:ID:       cd560390-aa1e-4c9e-8317-08610e5de42a
:END:
:LOGBOOK:
CLOCK: [2020-12-15 Tue 06:51]--[2020-12-15 Tue 07:08] =>  0:17
CLOCK: [2020-07-13 Mon 08:52]--[2020-07-13 Mon 09:04] =>  0:12
:END:
- https://www.google.com/search?q=linux+system+RAM 
- remove nfs stale file handle https://unix.stackexchange.com/questions/36297/how-can-i-resolve-a-stale-nfs-handle
- linux software by application
  - system restore
    - https://github.com/teejee2008/timeshift
  - i3
    - https://www.reddit.com/r/i3wm/comments/808685/create_your_own_i3_layouts_that_are_actually/
  - for dir sizes, use ncdu
- linux it certification
  - https://training.linuxfoundation.org/announcements/upcoming-entry-level-it-certification-from-the-linux-foundation-to-provide-an-onramp-to-an-it-career/?SSAID=389818&sscid=91k4_ilkkv
- applications
  - sysadmin
    - https://unix.stackexchange.com/questions/87908/how-do-you-empty-the-buffers-and-cache-on-a-linux-system
    - https://unix.stackexchange.com/questions/53542/how-to-determine-the-filesystem-of-an-unmounted-device
    - https://unix.stackexchange.com/questions/18925/how-to-mount-a-device-in-linux
  - tui
    - https://linuxconfig.org/how-to-use-ncurses-widgets-in-shell-scripts-on-linux
  - ocr
    - https://unix.stackexchange.com/questions/377359/how-to-use-ocr-from-the-command-line-in-linux
- GNU
  - gnome-terminal geometry https://www.reddit.com/r/bash/comments/imn867/setting_window_size_for_script/
- reference
  - [[https://help.ubuntu.com/community/KeyboardShortcuts][linux keyboard shortcuts]]
  - https://linustechtips.com/main/

****** documentation and general education
  - https://www.kernel.org/doc/html/latest/admin-guide/index.html
  - general education- https://www.reddit.com/r/linux4noobs/comments/fntvl7/between_linux_essentials_linux_and_lpic1_which/
  - https://refspecs.linuxfoundation.org/
****** interfaces
  - https://github.com/tbodt/ish/projects/7
  - https://github.com/Airblader/i3
****** variables
  - PATH
    - https://unix.stackexchange.com/questions/26047/how-to-correctly-add-a-path-to-path
      - note on config files where environmental variables can be set: 
        - ~/.bashrc is config for interactive bash
        - ~/.profile / ~/.bash_profile- see https://askubuntu.com/questions/298532/why-wont-environment-variables-added-to-profile-show-up-in-screen
    - [[https://unix.stackexchange.com/questions/3809/how-can-i-make-a-program-executable-from-everywhere][How can I make a program executable from everywhere]]
  - Permissions
    - [[https://www.csun.edu/~csunitr/guides/unixpermissions.html][user permissions]]
    - common chmods
      - 600- owner read/write only
      - 660- owner plus group read/write
      - 664 everyone read / write
      - see [[https://mail.google.com/mail/u/0/#search/hiseq3000/15628d36aa827e42][this email]] from Paul at GTAC 
      - [[http://stackoverflow.com/questions/3740152/how-to-set-chmod-for-a-folder-and-all-of-its-subfolders-and-files-in-linux-ubunt][How do I set chmod for a folder and all of its subfolders and files in Linux Ubuntu Terminal? {closed}]]
  - Symbolic links
    - [[https://stackoverflow.com/questions/16017500/how-to-see-full-symlink-path][see path with readlink -f]]
    - [[https://stackoverflow.com/questions/1727280/is-there-a-way-to-edit-a-symlink-without-deleting-it-first][stack: create and edit symlinks]]- ln -s /location/to/link linkname
    - @ files are symlinks?https://unix.stackexchange.com/questions/191717/what-does-the-symbol-mean-on-filenames
****** tools
  - ifconfig
    - [[file:/usr/share/man/man8/ifconfig.8.gz]] 
- gnu parallel
  - https://www.msi.umn.edu/support/faq/how-can-i-use-gnu-parallel-run-lot-commands-parallel
  - https://www.biostars.org/p/63816/
  - https://www.biostars.org/p/216905/
  - https://www.gnu.org/software/parallel/man.html#EXAMPLE:-Working-as-xargs--n1.-Argument-appending
******* trash-cli
:PROPERTIES:
:ID:       fe8ca086-cd69-4f40-a96d-3e99678c400e
:END:
#+begin_src bash 
#
# Install
cd /opt
sudo git clone https://github.com/andreafrancia/trash-cli.git
cd trash-cli
sudo python setup.py install
#
#
#+end_src
****** commands
  |----------------------+-------------------------------------|
  | function             | command                             |
  |----------------------+-------------------------------------|
  | mount partition      | udisksctl mount -b /dev/<PARTITION> |
  |                      |                                     |
  | unzip .bz2           | tar --bzip2 -xvf <FILE>             |
  | see cores            | [[https://unix.stackexchange.com/questions/218074/how-to-know-number-of-cores-of-a-system-in-linux][lscpu]]                               |
  | see systemd services | systemctl list-units --type=service |
  | see ubuntu version   | lsb_release -a                      |
- https://unix.stackexchange.com/questions/49786/finding-all-storage-devices-attached-to-a-linux-machine
- find large files sudo du -a /home | sort -n -r | head -n 10
****** processes
https://superuser.com/questions/185880/how-to-convert-a-pdf-document-to-png
- https://www.google.com/search?q=linux+command+line+convert+jpg+to+pdf
- https://www.google.com/search?q=linux+change+rm+to+recycle+bin
  - https://github.com/andreafrancia/trash-cli
- https://www.google.com/search?q=linux+get+server+specs
- files
  - prevent delete
    - w/ chattr
      - sudo chattr +i <FILE> (remove with -i)
      - for dirs, sudo chattr -R +i <DIR>
    - https://www.google.com/search?q=linux+protect+files+from+delete
  - opening
    - https://forum.artixlinux.org/index.php/topic,1129.0.html
  - decompressing
    - https://www.reddit.com/r/linuxmasterrace/comments/et9e36/best_function_ever/
  - convert
    - https://askubuntu.com/questions/493584/convert-images-to-pdf
    - png to pdf- use ImageMagick convert command 
  - merge pdfs
    - https://askubuntu.com/questions/2799/how-to-merge-several-pdf-files
- backup
  - https://www.reddit.com/r/commandline/comments/fr6the/linuxtimemachine_rsyncbased_osxlike_time_machine/
- storage setup and manipulations
  - http://www.rodsbooks.com/gdisk/walkthrough.html
- reporting
  - https://github.com/Heholord/FalconStats/tree/master
- create an interface
  - https://www.reddit.com/r/commandline/comments/f8nxyx/bash_how_is_it_possible_to_create_an_interface/
- install
  - UNetbootin https://tuxboot.org/installation/
****** Ubuntu                                                      :software:
:PROPERTIES:
:ID:       c28ef36f-5b5c-4789-90da-270e56fc4898
:CREATED:  [2019-06-20 Thu 10:34]
:END:
:LOGBOOK:
CLOCK: [2019-07-18 Thu 16:09]--[2019-07-18 Thu 16:25] =>  0:16
CLOCK: [2019-06-20 Thu 10:34]--[2019-06-20 Thu 11:49] =>  1:15
CLOCK: [2019-06-20 Thu 08:31]--[2019-06-20 Thu 10:30] =>  1:59
CLOCK: [2019-06-15 Sat 09:34]--[2019-06-15 Sat 09:46] =>  0:12
CLOCK: [2019-06-06 Thu 11:27]--[2019-06-06 Thu 11:57] =>  0:30
CLOCK: [2019-06-04 Tue 17:34]--[2019-06-04 Tue 17:38] =>  0:04
CLOCK: [2019-06-02 Sun 08:37]--[2019-06-02 Sun 08:49] =>  0:12
CLOCK: [2019-06-01 Sat 09:36]--[2019-06-01 Sat 09:40] =>  0:04
CLOCK: [2019-08-13 Tue 12:17]--[2019-08-13 Tue 12:36] =>  0:19
CLOCK: [2019-08-12 Mon 13:28]--[2019-08-12 Mon 14:21] =>  0:53
CLOCK: [2019-07-18 Thu 16:09]--[2019-07-18 Thu 16:25] =>  0:16
CLOCK: [2019-06-20 Thu 10:34]--[2019-06-20 Thu 11:49] =>  1:15
CLOCK: [2019-06-20 Thu 08:31]--[2019-06-20 Thu 10:30] =>  1:59
CLOCK: [2019-06-15 Sat 09:34]--[2019-06-15 Sat 09:46] =>  0:12
CLOCK: [2019-06-06 Thu 11:27]--[2019-06-06 Thu 11:57] =>  0:30
CLOCK: [2019-06-04 Tue 17:34]--[2019-06-04 Tue 17:38] =>  0:04
CLOCK: [2019-06-02 Sun 08:37]--[2019-06-02 Sun 08:49] =>  0:12
CLOCK: [2019-06-01 Sat 09:36]--[2019-06-01 Sat 09:40] =>  0:04
:END:
- apt package management
  - ppa lists at 
- https://www.tecmint.com/set-display-screen-resolution-in-ubuntu/
https://askubuntu.com/questions/283559/how-can-i-run-disk-utility-in-terminal-via-a-comand-line
- processes
  - power management - https://askubuntu.com/questions/1078939/ubuntu-18-04-battery-life
  - intall
    - https://askubuntu.com/questions/381261/file-system-and-mount-point
    - https://help.ubuntu.com/community/DiskSpace
    - https://askubuntu.com/questions/33697/how-do-i-add-swap-after-system-installation
  - audio https://askubuntu.com/questions/998336/disable-and-enable-audio-output-from-the-command-line
  - set software to open files
    - https://help.ubuntu.com/community/AddingMimeTypes
    - https://askubuntu.com/questions/90214/how-do-i-set-the-default-program
    - in file:~/repos/dotfiles
  - allow access to local via ssh
    - sudo ufw allow ssh
    - sudo ufw enable
    - ifconfig -a (not lo, for wifi is like wlp3s0), use inet
    - can test on local 
  - screen capture - use scrot
  - systemd (system daemons) 
    - emacs client
      - [[file:~/.config/systemd/user/emacs.service]]
      - https://www.emacswiki.org/emacs/EmacsAsDaemon#toc2
    - box rclone mount
      - https://www.jamescoyle.net/how-to/3116-rclone-systemd-startup-mount-script
      - [[file:/usr/share/man/man1/fusermount]]
      - [[file:/etc/systemd/system/rclone.service]]
      - https://www.google.com/search?q="rclone"+"box"+"systemd"+"daemon"+"mount"
    - Google drive sync via insync
      - [ ] document start process, systemd
    - general
      - https://www.tutorialdocs.com/article/learn-systemd-commands-in-20-minutes.html
      - https://www.linode.com/docs/quick-answers/linux/start-service-at-boot/
  - screen brightness and contrast
    - https://askubuntu.com/questions/149054/how-to-change-lcd-brightness-from-command-line-or-via-script
    - https://askubuntu.com/questions/62249/how-do-you-change-brightness-color-and-sharpness-from-command-line
    - https://askubuntu.com/questions/149054/how-to-change-lcd-brightness-from-command-line-or-via-script
    - https://askubuntu.com/questions/56155/how-can-i-change-brightness-through-terminal
  - caps lock
    - https://askubuntu.com/questions/80254/how-do-i-turn-off-caps-lock-the-lock-not-the-key-by-command-line
  - virtualbox
    - https://itsfoss.com/install-windows-10-virtualbox-linux/
  - persistent new monitor config
    - https://askubuntu.com/questions/754231/how-do-i-save-my-new-resolution-setting-with-xrandr
  - vpn
    - https://www.google.com/search?q=launch+cisco+anyconnect+command+line&oq=launch+anyconnect+&aqs=chrome.3.69i57j0l5.7868j0j4&client=ubuntu&sourceid=chrome&ie=UTF-8
    - https://wustl.account.box.com/login?redirect_url=https%3A%2F%2Fwustl.app.box.com%2Fs%2F7mwx46dgvij2r1m5bidsql6hupouzvmw
  - swap setup
    - [[https://stackoverflow.com/questions/33412987/what-is-the-meaning-of-running-out-of-swap][stack: What is the meaning of running out of swap? {closed}]]
    - swapon -s
    - http://www.thegeekstuff.com/2010/08/how-to-add-swap-space/?utm_source=feedburner
    - https://www.computerhope.com/unix/mkswap.htm
  - https://stackoverflow.com/questions/14788345/how-to-install-the-jdk-on-ubuntu-linux
  - ports and firewall https://www.cyberciti.biz/faq/how-to-open-firewall-port-on-ubuntu-linux-12-04-14-04-lts/
- structure
  - df disks
    - spaces for RAM
      - /run
      - /run/shm
- commands
  | function | command |
  |----------+---------|
  - see which apps open which files: https://askubuntu.com/questions/204823/how-do-you-change-the-default-document-viewer-to-okular
- documentation
- software
  - i3
    - https://i3wm.org/docs/userguide.html#_scratchpad
    - https://www.reddit.com/r/i3wm/comments/95z285/opening_all_terminal_applications_directly_from/
    - https://www.reddit.com/r/i3wm/comments/8hpjb6/i3_lock_screen/
  - https://faq.i3wm.org/question/4074/changing-window-title.1.html
  - https://faq.i3wm.org/question/1730/warning-popup-when-battery-very-low.1.html
  - ubuntu-specific software
    - i3 https://i3wm.org/docs/
    - https://i3wm.org/docs/refcard.html
- reference
  - swap
    - [[https://stackoverflow.com/questions/33412987/what-is-the-meaning-of-running-out-of-swap][stack: What is the meaning of running out of swap? {closed}]]
    - swapon -s
    - http://www.thegeekstuff.com/2010/08/how-to-add-swap-space/?utm_source=feedburner
    - https://www.computerhope.com/unix/mkswap.htm
  - processes
    - https://askubuntu.com/questions/149054/how-to-change-lcd-brightness-from-command-line-or-via-script
    - https://unix.stackexchange.com/questions/218074/how-to-know-number-of-cores-of-a-system-in-linux
    - https://unix.stackexchange.com/questions/218074/how-to-know-number-of-cores-of-a-system-in-linux
    - https://askubuntu.com/questions/62249/how-do-you-change-brightness-color-and-sharpness-from-command-line
    - https://askubuntu.com/questions/149054/how-to-change-lcd-brightness-from-command-line-or-via-script
    - box rclone mount
      - [2019-06-20 Thu]
        - works
        - enabled at startup
      - [[file:/etc/systemd/system/rclone.service]]
      - cannot get linux webdav working
    - Google drive sync via insync
      - [ ] document start process, systemd
    - https://www.emacswiki.org/emacs/EmacsAsDaemon#toc2
    - check version w/ cat /proc/version 
    - https://askubuntu.com/questions/80254/how-do-i-turn-off-caps-lock-the-lock-not-the-key-by-command-line
    - https://itsfoss.com/install-windows-10-virtualbox-linux/
    - https://askubuntu.com/questions/56155/how-can-i-change-brightness-through-terminal
    - see which apps open which files: https://askubuntu.com/questions/204823/how-do-you-change-the-default-document-viewer-to-okular
    - persistent new monitor config
      - https://askubuntu.com/questions/754231/how-do-i-save-my-new-resolution-setting-with-xrandr
    - vpn
      - https://www.google.com/search?q=launch+cisco+anyconnect+command+line&oq=launch+anyconnect+&aqs=chrome.3.69i57j0l5.7868j0j4&client=ubuntu&sourceid=chrome&ie=UTF-8
      - https://wustl.account.box.com/login?redirect_url=https%3A%2F%2Fwustl.app.box.com%2Fs%2F7mwx46dgvij2r1m5bidsql6hupouzvmw
    - https://www.linode.com/docs/quick-answers/linux/start-service-at-boot/
    - https://support.displaylink.com/knowledgebase/articles/675136-how-to-configure-displaylink-displays-on-ubuntu
  - documentation
  - software
    - okular
      - https://docs.kde.org/trunk5/en/kdegraphics/okular/okular.pdf 
      - https://www.google.com/search?q=okular+remap+keyboard+shortcuts
    - i3
      - https://www.reddit.com/r/i3wm/comments/8hpjb6/i3_lock_screen/
    - https://faq.i3wm.org/question/4074/changing-window-title.1.html
    - https://faq.i3wm.org/question/1730/warning-popup-when-battery-very-low.1.html
  - https://askubuntu.com/questions/22592/is-it-safe-to-rename-special-user-folders
- [ ] setup printer interface
  - https://ubuntuforums.org/showthread.php?t=1900967
- [ ] setup terminal emulator mouseless copy
  - https://stackoverflow.com/questions/3348800/gnome-terminal-how-to-copy-selection-to-clipboard-automatically/3432302
  - https://www.google.com/search?q=gnome-terminal+vim+copy+paste&oq=gnome-terminal+vim+copy&aqs=chrome.1.69i57j0.5563j0j7&client=ubuntu&sourceid=chrome&ie=UTF-8
  - https://www.google.com/search?q=tmux+mouseless+vim+copy&oq=tmux+mouseless+vim+copy&aqs=chrome..69i57j69i64.21772j0j7&client=ubuntu&sourceid=chrome&ie=UTF-8
  - need copy paste out of gnome terminal into X clipboard
    - https://askubuntu.com/questions/413436/copy-current-terminal-prompt-to-clipboard
  - https://wiki.termux.com/wiki/Main_Page
  - https://unix.stackexchange.com/questions/91863/terminal-copy-from-cli-without-using-mouse
- [ ] setup low power procedure for macbook linux
- [[https://www.gnome.org/gnome-3/][consider gnome for os]]
- [[http://www.amazon.com/Chromebook-10-1-Inch-Convertible-Touchscreen-Rockchip/dp/B00ZS4HK0Q/ref=sr_1_2?ie=UTF8&qid=1458342379&sr=8-2&keywords=ASUS+Chromebook+Flip][chromebook flip]]
- linux external brain project
- linux window commands
  - for app menu: alt + space
- window management- xmonad app
- task list
  - disable tap on trackpad
  - reduce text size
  - r clone? 
  - manage disk partition mess
  - hide lubuntu menu bar
  - windows key to lauch programs
  - remove firefox
  - solution to sync org
  - solution for reading pdf
  - solution for reading kindle
  - solution for music
  - solution for podcasts
  - speed up lubunu
    - optimize hardware- ram?
  - keyboard shortcuts to organize windows
    - about 1/2 thru [[http://varunbpatil.github.io/2013/09/20/xmonad/#.Vu2d0t9ytOA][this xmonad guide]]
  - get chrome working
  - get start launch working
  - full no trackpad?
  - r studio solution
  - completed
    - [[http://ubuntuforums.org/showthread.php?t=1880394][these updates]]
    - install chromium
- [[http://www.pcmag.com/article2/0,2817,2488836,00.asp][hardware?]]
******* macbook ubuntu build
:PROPERTIES:
:ID:       34C28D0E-A905-4700-A20E-557E79BC7DDC
:CREATED:  [2019-05-28 Tue 19:53]
:END:
:LOGBOOK:
CLOCK: [2019-05-28 Tue 19:54]--[2019-05-28 Tue 20:00] =>  0:06
CLOCK: [2019-05-28 Tue 12:47]--[2019-05-28 Tue 14:03] =>  1:16
CLOCK: [2019-05-27 Mon 19:41]--[2019-05-27 Mon 19:48] =>  0:07
CLOCK: [2019-05-27 Mon 19:00]--[2019-05-27 Mon 19:41] =>  0:41
CLOCK: [2019-05-26 Sun 10:13]--[2019-05-26 Sun 10:15] =>  0:02
CLOCK: [2019-05-26 Sun 08:39]--[2019-05-26 Sun 10:06] =>  1:27
CLOCK: [2019-05-26 Sun 07:00]--[2019-05-26 Sun 08:24] =>  1:24
CLOCK: [2019-05-24 Fri 20:45]--[2019-05-24 Fri 22:06] =>  1:21
CLOCK: [2018-10-29 Mon 13:54]--[2018-10-29 Mon 13:55] =>  0:01
CLOCK: [2018-09-20 Thu 16:40]--[2018-09-20 Thu 17:57] =>  1:17
:END:
https://www.reddit.com/r/linux4noobs/comments/h9d5v4/how_to_improve_increase_the_battery_life_of_a/
- https://support.displaylink.com/knowledgebase/articles/675136-how-to-configure-displaylink-displays-on-ubuntu
- macbook
  - [ ] setup low power procedure for macbook linux
  - [ ] setup printer interface
    - https://ubuntuforums.org/showthread.php?t=1900967
  - [ ] need to reconfig trash
1. [X] swap was installed 
2. [X] safe rm through [[http://pages.stern.nyu.edu/~marriaga/software/libtrash/][libtrash]]
3. [X] local mail 
   - [X] installs
     - [X] mbsync
     - [X] mu
   - [X] mbsync config
   - [X] mu indexing 
4. [X] citations
   - [X] vc bib.bib- in ~/org
   - zotero
     - [X] move to opt, sync jeszyman3 account,
     - [X] zotfile
     - [X] better-bibtex
       - [X] need to reset better biblatex keys
     - [X] export to ~/org/bib.bib
5. [X] orgzly-syncthing integration
   1. [X] auto-revert https://stackoverflow.com/questions/1480572/how-to-have-emacs-auto-refresh-all-buffers-when-files-have-changed-on-disk
   2. [X] auto save-some-buffers
      - in settings dev: https://www.emacswiki.org/emacs/AutoSave#toc4
6. [X] add anki
7. reference
   - emacs server daemon is running, launch client with emacsclient -create-frame & disown
   - [[file:~/data/library/compend.org::*UNIX][UNIX]]
   - https://tutorials.ubuntu.com/
   - https://askubuntu.com/questions/746627/caldav-client-for-ubuntu
   - http://www.linuxfromscratch.org/
     - https://www.linuxquestions.org/questions/linux-newbie-8/is-it-worth-getting-into-linux-from-scratch-4175498646/
   - [[https://www.reddit.com/r/linuxmasterrace/comments/8d3d1i/as_someone_who_needs_office365_im_glad_wine/][reddit: wine for linux]]
   - connections
     - jeff-mac-book:multiple <-> wustl Box via rclone 
     - jeff-mac-book:? <-> zotero
     - jeff-mac-book:~/org <-> synchthing <-> jeff-android:~/org <-> orgzly app
   - i3
     -  https://www.reddit.com/r/i3wm/comments/2xoo9m/what_is_the_best_way_to_remap_ctrlkey_with/
     - manage wifi with nmtui
   - [X] install R see [[id:F9ACCF3D-896B-4FC4-92FD-31A2D6E977DD][R]]
   - syncthing
     - [[https://www.ma-no.org/en/install-syncthing-on-ubuntu-16-04-using-debian-repository][setup as persistent service]]
     - http://127.0.0.1:8384/
   - software installs- below incomplete, check via cmdline
     - downloaded binaries
       - rclone
       - zotero
     - apt
       - installs
         - sudo apt-get update -y && sudo apt-get install -y syncthing vim pandoc emacs curl
   - completed work
     - wifi
       - not necessary if requested at startup
       - https://askubuntu.com/questions/896140/how-to-connect-to-wifi-network-with-i3wm
     - github setup
       - ssh key
         - https://help.github.com/en/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent
         - https://help.github.com/en/articles/adding-a-new-ssh-key-to-your-github-account
   - monitor w/ xrandr
     - use arandr gui
     - https://askubuntu.com/questions/91221/how-to-tell-xubuntu-not-to-clone-but-to-expand-the-laptop-display-to-the-externa
   - i3 caps lock as ctrl- https://www.reddit.com/r/i3wm/comments/2xoo9m/what$
   - [[https://askubuntu.com/questions/106351/running-programs-in-the-background-from-terminal][stack: Running programs in the background from terminal]]
   - swap partition https://askubuntu.com/questions/464402/choosing-partition-types-for-swap-and-root-and-choosing-device-for-bootloader-in
   - https://superuser.com/questions/164059/how-to-force-network-manager-to-rescan-connections
8. [X] cleanup
9. ideas
   - - GPD Pocket: 7.0
   - [  https://www.google.com/search?q=gnome-terminal+iterm2
     1. how to do mouseless copy https://www.google.com/search?q=gnome+terminal+mouseless+copy
     2. or maybe ubuntu phone? 
   - [  super-mobile
     - http://www.geekbuying.com/help/customer_service/return_policy
     - https://www.reddit.com/r/GPDPocket/search?q=ubuntu&restrict_sr=on&sort=relevance&t=all
     - https://github.com/stockmind/gpd-pocket-ubuntu-respin
     - https://www.slashgear.com/gpd-pocket-is-a-7-inch-windows-10-ubuntu-laptop-15475055/
     - https://liliputing.com/2017/06/gpd-pocket-7-inch-windows-laptop-is-now-available-for-500-no-crowdfunding-required.html
       - https://www.indiegogo.com/projects/gpd-pocket-7-0-umpc-laptop-ubuntu-or-win-10-os-laptop--2#/
   - [  raspberry pie connect
     - [  personal dictionary local under vc
     - https://www.reddit.com/r/unixporn/comments/bp6p2b/bspwm_new_york_livestream_wallpaper/
     - https://www.reddit.com/r/GalaxyNote8/comments/bg3v3a/linux_on_dex_now_supports_s8_and_s9_and_note_8/
     - [  [[https://pmbio.org/module-01-setup/0001/02/01/AWS_Intro/#setting-up-an-apache-web-server][apache web service access to data]]
     - [  cleanup emacs init

******* Server build
:PROPERTIES:
:ID:       BCD2D984-7185-47C0-9ECB-B1F40314595C
:END:

- [ ] server-linux build
  - https://www.reddit.com/r/IWantToLearn/comments/87brq8/iwtl_how_to_build_a_home_server/?st=jfjrnjjw&sh=775fb75f
  - https://www.reddit.com/r/buildapc/comments/6g40g4/i_dedicated_my_last_3_years_to_buildapc/
  - hackintosh-compatible hardware? https://www.google.com/search?q=cheapest+hackintosh+hardware&rlz=1CDGOYI_enUS769US769&oq=cheapest+hackintosh+hardware&aqs=chrome..69i57.20469j0j4&hl=en-US&sourceid=chrome-mobile&ie=UTF-8
    - - https://www.reddit.com/r/buildapc/comments/2lhvjr/build_complete_hackintosh_with_a_side_of_gaming/
  - [[https://askubuntu.com/questions/647495/which-is-most-timemachine-like-backup-program-for-ubuntu][stack:Which is Most TimeMachine-like Backup Program for Ubuntu?]]
  - https://askubuntu.com/questions/308897/convert-ubuntu-physical-machine-to-virtual-machine
  - https://askubuntu.com/questions/32499/migrate-from-a-virtual-machine-vm-to-a-physical-system?rq=1

******** Work build
:PROPERTIES:
:ID:       6C960771-38BB-4A48-95ED-576D79547489
:END:
:LOGBOOK:
CLOCK: [2018-11-25 Sun 11:39]--[2018-11-25 Sun 13:37] =>  1:58
CLOCK: [2018-11-16 Fri 08:26]--[2018-11-16 Fri 11:24] =>  2:58
CLOCK: [2018-11-15 Thu 15:00]--[2018-11-15 Thu 15:34] =>  0:34
CLOCK: [2018-10-29 Mon 15:17]--[2018-10-29 Mon 16:43] =>  1:26
CLOCK: [2018-10-29 Mon 13:55]--[2018-10-29 Mon 14:24] =>  0:29
:END:
- WebDAV setup
  - https://linuxize.com/post/how-to-set-up-apache-virtual-hosts-on-ubuntu-18-04/
  - https://linuxconfig.org/webdav-server-setup-on-ubuntu-linux
  - http://10.21.36.114/index.html
  - Process
    - Designate location
    - Enable modules
    - Configure 
  - stack
    - apache2
  - https://www.digitalocean.com/community/tutorials/how-to-configure-webdav-access-with-apache-on-ubuntu-14-04
    - Glossary
      - Apache is a web server 
      - "WebDAV is an extension of the HTTP protocol that allows users to manage files on servers"
    - 
- hardware
- stack
  - ubuntu 18.04 LTS
    - [[https://help.ubuntu.com/lts/serverguide/index.html.en][Documentation]]
      - [[https://help.ubuntu.com/lts/serverguide/openssh-server.html.en][OpenSSH Server]]
- [ ] connection
  - remote desktop
  - ssh jeff@10.21.36.114
  - keys? 
  - stack
    - [[https://www.openssh.com/manual.html][openssh]]
- [ ] data synchronization
  - stack
    - [[https://rclone.org/box/][rclone]]
    - [[https://wustl.app.box.com/folder/0][wustl box]]
  - [ ] sync library box storage with rclone
  - [ ] sync project work with github
    - - https://pages.github.com/
    - limit project directories to 1 gig https://help.github.com/articles/what-is-my-disk-quota/
  - chron sync wrapper
- [ ] os maintenance
  - daemons
    - cron work see ~/cron
      - [ ] scheduled reports
        - https://www.linux.com/blog/linux-101-check-disk-space-command
      - notes and resources
        - [[https://help.ubuntu.com/community/CronHowto][Ubuntu documentation CronHowto]]
      - ideas
        - https://www.google.com/search?q=best+cron+job+examples&oq=best+cron+job+examples&aqs=chrome..69i57.11620j1j9&sourceid=chrome&ie=UTF-8
  - [ ] keyboard layout control
  - [ ] directory management
    - see [[file:~/Box%20Sync/personal/maintenance/maintenance.org::*Information%20Maintenance][Information Maintenance]] 
    - [[http://www.pathname.com/fhs/pub/fhs-2.3.pdf][file system hierarchy standard]]
    - https://unix.stackexchange.com/questions/15230/file-and-directory-naming-conventions
      - "remember as you think up a structure that permissions are hierarchical. In order for somebody to have permissions on a given folder, they need to have at least execute permissions on every folder ABOVE that folder. If you have anything in your home directory that you share, it needs to be near the top"
    - https://unix.stackexchange.com/questions/201768/storing-shell-scripts
  - RESUME w/ weekly system report script- exit code 2
- [ ] work-linux time machine and portability 
- [ ] export
- [ ] backup work machine
- ideas
  - [ ] change rm to direct to del folder 
- [X] past work
  - [X] setup key pair with macos
    - see https://www.thegeekstuff.com/2008/11/3-steps-to-perform-ssh-login-without-password-using-ssh-keygen-ssh-copy-id
    - also alias to work-linux [[file:~/.bash_profile]]

********* update
:PROPERTIES:
:ID:       66803E55-A70F-4D49-A4D6-31520A3617DC
:END:

********* Connections
:PROPERTIES:
:ID:       449D6647-FF79-48FE-8649-DD2DEF23FB93
:CREATED:  [2019-03-17 Sun 15:46]
:END:

- [ ] connections
  - [ ] remote desktop or ssh gui
    - https://www.makeuseof.com/tag/ubuntu-remote-desktop-builtin-vnc-compatible-dead-easy/
  - [ ] wine windows

******* ideas

  - https://www.google.com/search?q=libreoffice+save+new+slide+layout
  - get better highlightin on ubuntu menus
  - linux portable OS
    - through git repo calls
      - ~/.emacs.d
      - ~/org
      - 
  - I3 control panel?
  - https://www.reddit.com/r/i3wm/comments/a00s8p/made_myself_a_pretty_popup_cheat_sheet/
  - how to vc and sync config files
  - https://www.google.com/search?q=libreoffice+save+new+slide+layout
  - get better highlightin on ubuntu menus
  - linux portable OS
    - through git repo calls
      - ~/.emacs.d
      - ~/org
      - 
  - I3 control panel?
  - https://www.reddit.com/r/i3wm/comments/a00s8p/made_myself_a_pretty_popup_cheat_sheet/
  - [ ] setup terminal emulator mouseless copy
    - https://stackoverflow.com/questions/3348800/gnome-terminal-how-to-copy-selection-to-clipboard-automatically/3432302
    - https://www.google.com/search?q=gnome-terminal+vim+copy+paste&oq=gnome-terminal+vim+copy&aqs=chrome.1.69i57j0.5563j0j7&client=ubuntu&sourceid=chrome&ie=UTF-8
    - https://www.google.com/search?q=tmux+mouseless+vim+copy&oq=tmux+mouseless+vim+copy&aqs=chrome..69i57j69i64.21772j0j7&client=ubuntu&sourceid=chrome&ie=UTF-8
    - need copy paste out of gnome terminal into X clipboard
      - https://askubuntu.com/questions/413436/copy-current-terminal-prompt-to-clipboard
    - https://wiki.termux.com/wiki/Main_Page
    - https://unix.stackexchange.com/questions/91863/terminal-copy-from-cli-without-using-mouse
  - https://www.reddit.com/r/commandline/comments/ceo8lt/ideas_for_good_use_of_the_caps_lock_key/
- http://n-o-d-e.net/post/141489192021/how-to-create-a-handheld-linux-terminal-v2
******** USB build
:PROPERTIES:
:ID:       D367D5DD-4E6E-43EC-A1FF-F3F14B24D2D9
:END:

- porteus
  - [[http://porteus.org/][hoempage]]
- - linux
  - toolbox
    - OS with apps
    - 7zip
    - gparted
    - emacs for all OS
  - show battery life


****** ideas
- https://github.com/Fmstrat/winapps
***** MacOS
:PROPERTIES:
:ID:       80A0FABE-EB39-4BFC-8478-8044E6D84761
:END:

- http://www.theinstructional.com/guides/disk-management-from-the-command-line-part-2
- https://www.howtogeek.com/312755/what-is-the-process-windowserver-and-why-is-it-running-on-my-mac/
- [[https://apple.stackexchange.com/questions/294013/how-to-allow-install-of-non-app-store-or-identified-developers-on-macos-sierra?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa][How to allow install of non app store or identified developers on MacOS Sierra]]
- Command Table
  | Function             | Command                   | Notes                                                                                                               |
  |----------------------+---------------------------+---------------------------------------------------------------------------------------------------------------------|
  |                      |                           | <20>                                                                                                                |
  | List process to kill | ps -A\ grep -m1 <PROCESS> | https://stackoverflow.com/questions/11546765/how-to-get-the-pid-of-a-process-by-giving-the-process-name-in-mac-os-x |
  | Kill process         | kill -9 <PROCESS ID>      | http://blog.houen.net/kill-program-mac-os-x-terminal/                                                               |
  |                      |                           |                                                                                                                     |
- https://stackoverflow.com/questions/17935301/how-to-force-mac-os-to-open-search-with-google-in-chrome
- Window management
  - Default layouts
    - https://github.com/jigish/slate
    - http://autumnapps.com/breeze/
    - https://apple.stackexchange.com/questions/3133/how-do-i-make-windows-save-their-position-on-screen-after-re-attaching-a-display
- [[http://osxdaily.com/2010/06/09/screen-capture-in-mac-os-x/][Screen capture]]
- https://apple.stackexchange.com/questions/55432/keyboard-shortcut-for-restoring-applications-from-the-mac-os-x-dock
- hide dock: <CMD>+<ALT>+d
- [[http://www.chriswrites.com/how-to-view-and-kill-processes-using-the-terminal-in-mac-os-x/][How to View and Kill Processes Using the Terminal in Mac OS X]]
- Check out the brew edit command
http://www.mitchchn.me/2014/os-x-terminal/

  - osx
    - [[http://apple.stackexchange.com/?tab=featured][mac stack exchange]]
    - [[http://zmjones.com/mac-setup/][setting up osx for data analysis]]
    - [[http://osxdaily.com/2009/02/25/show-hidden-files-in-os-x/][hidden files]]


*** Version Control
:PROPERTIES:
:ID:       A9EE8CE0-ED58-4127-8B57-B53AE680B441
:END:

https://github.com/simonthum/git-sync
- Web-based
  - GitHub
    - Contributions
      - https://guides.github.com/activities/forking/
      - [[https://help.github.com/articles/fork-a-repo/][Forking]] allows for posting
      - [[https://help.github.com/articles/cloning-a-repository/][Cloning]] allows for work on a project
    - [[https://opensource.guide/][GitHub open source guide]]
      - [[https://opensource.guide/how-to-contribute/#anatomy-of-an-open-source-project][Anatomy of an open source project]]
        - People
          - Author
          - Owner
          - Maintainers
          - Contributors
          - Community members
        - Documentation
          - License
          - Readme- guidance for using the project
          - Contributing
          - Code of conduct
        - Tools to organize discussion
          - Issue tracker
          - Pull requests
          - Discussion forums
          - Chat

**** Git
:PROPERTIES:
:ID:       E56ADCB0-F6DD-4D58-8B68-CEDF7DC176E6
:END:
:LOGBOOK:
CLOCK: [2018-08-10 Fri 16:03]--[2018-08-10 Fri 16:13] =>  0:10
CLOCK: [2017-11-29 Wed 19:30]--[2017-11-29 Wed 19:51] =>  0:21
CLOCK: [2017-11-29 Wed 19:05]--[2017-11-29 Wed 19:25] =>  0:20
CLOCK: [2017-11-06 Mon 12:26]--[2017-11-06 Mon 12:47] =>  0:21
CLOCK: [2017-04-27 Thu 12:26]--[2017-04-27 Thu 12:51] =>  0:25
CLOCK: [2017-04-27 Thu 10:53]--[2017-04-27 Thu 11:23] =>  0:30
:END:
- processes
  - initializing
    - https://www.google.com/search?q=initialize+git+repo
    - git branch --set-upstream-to=origin/master master
  - gitignore
    - https://stackoverflow.com/questions/25436312/gitignore-not-working/25436481
    - https://labs.consol.de/development/git/2017/02/22/gitignore.html
  - submodules
    - https://stackoverflow.com/questions/4611512/is-there-a-way-to-make-git-pull-automatically-update-submodules
    - add git submodule add <SUBMODULE>
    - initialize git submodule update --recursive --init
    - push and pull submodules
      - 2nd answer https://stackoverflow.com/questions/1030169/easy-way-to-pull-latest-of-all-git-submodules
    - https://medium.com/faun/git-submodule-cheatsheet-29a3bfe443c3
    - https://stackoverflow.com/questions/5542910/how-do-i-commit-changes-in-a-git-submodule
  - [[https://stackoverflow.com/questions/1125968/how-do-i-force-git-pull-to-overwrite-local-files][force overwrite]]
  - [[https://stackoverflow.com/questions/2116778/reduce-git-repository-size][reduce repo size]] 
  - searching commits
    - https://stackoverflow.com/questions/2928584/how-to-grep-search-committed-code-in-the-git-history
  - reverting
    - [[https://stackoverflow.com/questions/215718/how-can-i-reset-or-revert-a-file-to-a-specific-revision][reverting spcific files]] 
    - https://stackoverflow.com/questions/927358/how-do-i-undo-the-most-recent-local-commits-in-git
  - file comparisons
    - https://doc.ubuntu-fr.org/meld
  - removing files
    - b/c file exceeds github file size limits:  https://thomas-cokelaer.info/blog/2018/02/git-how-to-remove-a-big-file-wrongly-committed/
    - https://help.github.com/en/articles/removing-files-from-a-repositorys-history
  - [[https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/][resolve confilcts workflow]]
- commands
  | Action               | Command                                  |
  |----------------------+------------------------------------------|
  | <30>                 | <35>                                     |
  | Create repo          | git init                                 |
  | Ignore files         | touch .gitignore                         |
  | Add (stage) file     | git add                                  |
  | Add recursive        | git add --all                            |
  | Remove (unstage)     | git reset                                |
  | Last update          | git log --name-status HEAD^..HEAD        |
  | To be commited       | git status                               |
  | List untracked       | git ls-files --others --exclude-standard |
  | List tracked         | git ls-tree -r master --name-only        |
  | Stop tracking repo   | rm -rf .git/                             |
  | View list of commits | git log                                  |
  | View file changes    | git diff - HEAD --staged                 |
  - Staging
    - git add 'stages' a file- makes it ready to add to repo
    - git reset unstages
  - Branches
    - git branch
      - add and delete
        - -d <BRANCH NAME>
        - <BRANCH NAME> 
    - git checkout <BRANCH> switch branches
  - Pulls
    - git merge- FIRST navigate to master, then git merge <BRANCH TO PULL>
  - Changing within branch
    - git commit- add changes WITHIN branch- full repo (not just a file) within branch
    - git checkout -- undo last commit FOR A SPECIFIC FILE
  - Reverting
    - reverting a specific file
      1. find the commit hash with =git log=
      2. revert with =git checkout <COMMIT HASH> -- <FILE>=
    - [[http://stackoverflow.com/questions/4114095/how-to-revert-git-repository-to-a-previous-commit][reverting to previous commit]]
    - [[https://stackoverflow.com/questions/338436/is-there-a-quick-git-command-to-see-an-old-version-of-a-file][stack: Is there a quick git command to see an old version of a file?]]
  - [[https://stackoverflow.com/questions/338436/is-there-a-quick-git-command-to-see-an-old-version-of-a-file][stack: view previous version of a file]]
  - [[https://stackoverflow.com/questions/8588768/how-do-i-avoid-the-specification-of-the-username-and-password-at-every-git-push][stack: avoid specification of user name and password]]
  - [[https://stackoverflow.com/questions/2855140/recursively-add-files-by-pattern?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa][stack: Recursively add files by pattern]]
  - [[https://stackoverflow.com/questions/4754152/how-do-i-remove-git-tracking-from-a-project/36945328][stack: remove git tracking]]
  - to use all included functions, clone submodules - https://stackoverflow.com/questions/3796927/how-to-git-clone-including-submodules
- best practices
  - for git repos, use submodules to push common code up - https://git-scm.com/book/en/v2/Git-Tools-Submodules
- Scripts
  #+name:list-directories-under-git-vc
  #+BEGIN_SRC sh :results silent
  cd ~/
  find . -type d -name '.git' > ~/all-git-repos.txt 
  #+END_SRC
- Documentation and general reference
  - Commit
  - [[https://git-scm.com/][git website]]
    - [[https://git-scm.com/doc][documentation]]
  - Basic concepts
    - Repository
    - Branching- the different versions of the repository
      - Branches
        - master
        - feature- a new branch 
      - Branching creates a snapshot of master
    - Encorporating changes
      - WITHIN a branch: Commit- changes to any branch, not necessarily master
        - commits can have comments, but this is not necessary
      - FROM ONE BRANCH TO ANOTHER: Pull request- to pull you changes INTO a branch 
    - Distributed version control (no canonical, distributed version 'sync' via patch
  - Educational Resources
    - [[https://try.github.io/levels/1/challenges/1][Command line tutorial]]
    - [[https://www.git-tower.com/learn/git/ebook/en/command-line/introduction#start][Tower: Learn Version Control with Git]]
  - [[https://stackoverflow.com/questions/954560/how-does-git-handle-symbolic-links][How does Git handle symbolic links?]]
- Git repository hosting services
  - [[https://about.gitlab.com/][GitLab]]
  - [[https://github.com/][GitHub]]
    - https://www.reddit.com/r/programming/comments/7deyx8/introducing_security_alerts_on_github_with_your/
    - [X] [2017-10-19 Thu] Have [[https://mail.google.com/mail/u/0/#inbox/15f3634fd86f200a][student dev pack!]]
    - Primarily for using git with other people- the advantage is pull requests 
    - Documentation
    - [[https://help.github.com/articles/cloning-a-repository/][Cloning a repository]] via url: git clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY
    - [[https://guides.github.com/][Guides]]
      - [[https://guides.github.com/features/mastering-markdown/][Markdown]]
  - https://guides.github.com/introduction/flow/
  - GitHub
    - https://stackoverflow.com/questions/8588768/how-do-i-avoid-the-specification-of-the-username-and-password-at-every-git-push
    - https://github.com/settings/keys
    - [[https://education.github.com/?utm_source=newsletter&utm_medium=email&utm_campaign=student-survey-050818][github: educational tools]]
    - [[https://guides.github.com/features/pages/][Getting Started with GitHub Pages]]
    - [[https://education.github.com/pack?utm_source=announcement&utm_medium=email&utm_campaign=education-201806019][GitHub related tools]]
    - [[https://github.com/trending/r?since=monthly][GitHub trending]]
    - ideas
      - https://stackoverflow.com/questions/11852982/can-i-arrange-repositories-into-folders-on-github/11859027#11859027
    - https://github.com/features/actions
    - https://lab.github.com/courses?utm_source=newsletter&utm_medium=email&utm_campaign=student-newsletter-120818
- GUIs- https://www.sourcetreeapp.com/
*** JSON JavaScript Object Notation
:PROPERTIES:
:ID:       9E10CCC0-BC92-4C96-BBF2-99B54E88143D
:END:
https://github.com/antonmedv/fx/blob/master/DOCS.md
  - JSON
    - https://www.w3schools.com/js/js_json_syntax.asp
- When exchanging data between a browser and a server, the data can only be text.
- JSON is text, and we can convert any JavaScript object into JSON, and send JSON to the server.
- 

*** Software                                                   :mod:software:
:PROPERTIES:
:ID:       D0927D88-0FA4-4D49-8486-721FC264DE50
:END:
https://github.blog/2019-08-08-github-actions-now-supports-ci-cd/?WT.mc_id=devto-blog-yolasors
https://help.github.com/en/articles/about-project-boards
- https://www.sciencedirect.com/science/article/pii/S0950584914001050
- commands
  |----------+---------|
  | function | command |
  |----------+---------|
  | <35>     | <35>    |
  |          |         |
- processes
- documentation
- applications

- box
  - https://community.box.com/t5/Community/ct-p/English
  - [[https://www.youtube.com/channel/UClVkSYJyS4XTpzukZn1zm7w][box youtube]]
  - wustl box parameters
    - 15 gb per file
    - unlimited storage
- software development
  - cite:nowogrodzki2019
- vimtutor
** Programming languages                                             :career:
:PROPERTIES:
:ID:       CBD1C9BA-44CB-4510-8ACD-F12CEF7E3402
:END:
:LOGBOOK:
CLOCK: [2019-02-06 Wed 16:12]--[2019-02-06 Wed 17:05] =>  0:53
:END:
*** General reference
- https://www.reddit.com/r/programming/comments/f9ut5f/the_most_recommended_programming_books_of_alltime/
- https://stackoverflow.com/questions/1711/what-is-the-single-most-influential-book-every-programmer-should-read
- https://altbulletin.com/how-to-code-like-the-top-programmers-at-nasa-10-critical-rules/
- principles and philosophy
  - [[https://en.wikipedia.org/wiki/Robustness_(computer_science)][robustness]]
  - transparency
  - reproducibility
- paradigms
  - object-oriented programming
    - inheritance
    - 
    - objects relate to real-world entities
    - 'bottom-up'
    - class: logical grouping specifying components of specific objects
      - class variable: shared by all instances
      - instance variable: unique to each instance=object in class
      - data member: holds data associated with class and its objects
    - 
  - procedure-oriented- sequence of actions is more important to data
    - 'top down'
*** languages
- C++
  - http://www.seqan.de/
  - https://www.ncbi.nlm.nih.gov/IEB/ToolBox/CPP_DOC/
- [[https://github.com/mohd-akram/languages][Language graph using cytoscape]]
- Other languages
  - [[http://proquest.safaribooksonline.com/9780124052123][Matlab by example]]
  - [[https://en.wikipedia.org/wiki/MUMPS][MUMPS]]
    - https://en.wikipedia.org/wiki/GT.M
  - AppScript
    - https://developers.google.com/apps-script/articles/helpdesk_tutorial
- [[https://www.mathworks.com/mwaccount/?status=success][matlab washu license]]
- Scripting languages
  - AutoHotKey
    - [[https://autohotkey.com/docs/AutoHotkey.htm][Documentation]]
    - [[https://autohotkey.com/boards/viewtopic.php?t=9806][AutoHotKey-like resources on UNIX-based]]
**** [[R]]
:PROPERTIES:
:ID:       1672D6B1-BCB8-428C-8AF1-013BC82A91AC
:END:

**** Python                                                          :career:
:PROPERTIES:
:ID:       CA21AAC9-F147-4086-A24C-64451EE349F3
:END:
:LOGBOOK:
CLOCK: [2020-06-14 Sun 17:38]--[2020-06-14 Sun 17:48] =>  0:10
CLOCK: [2019-02-19 Tue 10:54]--[2019-02-19 Tue 11:04] =>  0:10
CLOCK: [2017-07-19 Wed 09:54]--[2017-07-19 Wed 10:58] =>  1:04
CLOCK: [2019-02-12 Tue 10:54]--[2019-02-12 Tue 11:01] =>  0:07
CLOCK: [2019-01-06 Sun 19:28]--[2019-01-06 Sun 19:57] =>  0:29
CLOCK: [2018-06-20 Wed 16:52]--[2018-06-20 Wed 18:03] =>  1:11
CLOCK: [2018-06-20 Wed 14:44]--[2018-06-20 Wed 15:50] =>  1:06
CLOCK: [2017-11-15 Wed 13:45]--[2017-11-15 Wed 13:57] =>  0:12
CLOCK: [2017-11-15 Wed 13:22]--[2017-11-15 Wed 13:35] =>  0:13
CLOCK: [2017-08-09 Wed 09:05]--[2017-08-09 Wed 09:27] =>  0:22
CLOCK: [2017-08-09 Wed 08:55]--[2017-08-09 Wed 08:58] =>  0:03
CLOCK: [2017-05-02 Tue 12:51]--[2017-05-02 Tue 12:52] =>  0:01
CLOCK: [2017-05-02 Tue 10:50]--[2017-05-02 Tue 11:02] =>  0:12
CLOCK: [2016-04-27 Wed 10:11]--[2016-04-27 Wed 10:18] =>  0:07
:END:
***** interfaces, platforms, and IDEs
- emacs
  - https://www.reddit.com/r/orgmode/comments/johcin/org_mode_org_roam_poetry_for_python_literate/
  - elpy
    - https://elpy.readthedocs.io/en/latest/ide.html#interactive-python
  - [[https://kozikow.com/2016/05/21/very-powerful-data-analysis-environment-org-mode-with-ob-ipython/][Very powerful data analysis environment – org mode with ob-ipython]]
  - python-emacs-orgmode ide
    - https://jonathanabennett.github.io/blog/2019/06/20/python-and-emacs-pt.-1/
    - https://github.com/gregsexton/ob-ipython
  - python/emacs/org-mode integration
    - elpy
      - https://elpy.readthedocs.io/en/latest/concepts.html
      - https://github.com/jorgenschaefer/elpy
    - kitchin
      - [[http://kitchingroup.cheme.cmu.edu/blog/2016/05/29/Expanding-orgmode-py-to-get-better-org-python-integration/][kitchin: Expanding orgmode.py to get better org-python integration]]
      - [[https://raw.githubusercontent.com/jkitchin/dft-book/master/dft.org][kitchin full org example]]
- jupyter
  - https://www.reddit.com/r/datascience/comments/b2gzo2/productivity_tips_for_jupyter_when_working_in/
  - jupyter lab 
    - http://jupyterlab.readthedocs.io/en/stable/getting_started/starting.html
  - Jupyter
    - - http://beakernotebook.com/features
    - [[http://nbviewer.jupyter.org/github/JosPolfliet/pandas-profiling/blob/master/examples/meteorites.ipynb][jupyter pandas example]]
    - Command index
      | Function                    | Command         |
      |-----------------------------+-----------------|
      | Show function documentation | <SHIFT> + <TAB> |
      | Delete cell                 | dd              |
      | New cell below current      | b               |
      |                             |                 |
      - commands
        - run is <SHIFT> <ENTER>
        - run and inset new <ALT> <ENTER>
        - for stalls / while loops, do kernel -> interrupt/restart
        - move to previous arrow up
    - [[https://precision.heart.org/about_jupyter_notebooks][AHA Precision Jupyter notebooks]]
    - [[http://bobbywlindsey.com/dev/2017/08/10/remote-computing-with-jupyter-notebooks.html][Remote Computing with Jupyter Notebooks]]
    - [[https://jakevdp.github.io/blog/2017/03/03/reproducible-data-analysis-in-jupyter/][reproducible data analysis in jupyter]]
    - [[https://www.youtube.com/watch?v=T385txAYSt8][youtube: Jupyter: Notebooks in Multiple Languages for Data Science]]
    - https://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/
    - show function documentation with <SHIFT> + <TAB>
    - [ ] keyboard shortcut to show function documentation? 
    - launch at terminal w/ jupyter notebook and paste URL, will launch into the directory terminal was in 
    - http://jupyter.org/
    - https://datascientistworkbench.com/
    - https://medium.com/@kacawi/jupyter-notebook-tutorial-the-definitive-guide-660c7e651ecd#.igwzel9ai
    - [[https://github.com/jupyter/jupyter/wiki/A-gallery-of-interesting-Jupyter-Notebooks][A gallery of interesting Jupyter Notebooks]]
  - https://github.com/lambdalisue/jupyter-vim-binding
- visual studio- https://code.visualstudio.com/docs/python/python-tutorial
***** tutorials, courses, learning resources, best practices
- [[https://www.edx.org/course/statistics-and-probability-in-data-science-using-python][edX stats with python]]
- Learning resources
  - [[https://www.reddit.com/r/datascience/comments/7u4c05/python_tools_that_everyone_should_know_about/][reddit: data science python tools that everyone should know about]]
  - Python books
    - cite:urban2016murachs
    - [[http://openbookproject.net/thinkcs/python/english3e/][How to think like a computer scientist]]
  - courses
    - [[http://bafflednerd.com/category/learn-analytics/][Baffled Nerd: Online python courses]]
    - [[https://www.udemy.com/the-python-mega-course/learn/v4/overview][Udemy python megacourse]]
  - [[https://www.datacamp.com/courses/network-analysis-in-python-part-1?utm_source=adwords_ppc&utm_campaignid=898687156&utm_adgroupid=48303643819&utm_device=c&utm_keyword=&utm_matchtype=b&utm_network=g&utm_adpostion=1t1&utm_creative=229335520231&utm_targetid=dsa-377762271983&utm_loc_interest_ms=&utm_loc_physical_ms=9060420&gclid=Cj0KCQiAl8rQBRDrARIsAEW_To9A6evIhhajnoTZrssSRA70JFF7i5pPvlMXV-ixMnrpXZQgRSuKAX0aAvp9EALw_wcB][DataCamp Network Analysis in Python (Part 1)]]
  - https://www.coursera.org/learn/python
  - http://www.pythonlearn.com/
- Rougier 
  - [[https://www.labri.fr/perso/nrougier/from-python-to-numpy/][book- from python to numpy]] and associated [[https://github.com/rougier/from-python-to-numpy][github]]
  - [[http://www.labri.fr/perso/nrougier/teaching/matplotlib/matplotlib.html][matplotlib tutorial]]
- cite:sweigart2015
- [[https://www.python.org/dev/peps/pep-0008/][PEP 8 -- Style Guide for Python Code]]
- https://wiki.python.org/moin/BeginnersGuide/Programmers
- [[https://github.com/JulianGaal/python-cheat-sheet][github: python cheatsheet]]
- https://google.github.io/styleguide/pyguide.html
- https://realpython.com/podcasts/rpp/8/
- https://www.tutorialspoint.com/python/python_command_line_arguments.htm
- https://www.simple-is-better.org/template/pyratemp.html
- https://drive.google.com/drive/folders/0ByIrJAE4KMTtaGhRcXkxNHhmY2M
- https://www.simple-is-better.org/template/pyratemp.html
- https://en.m.wikipedia.org/wiki/Zen_of_Python
***** applications
:LOGBOOK:
CLOCK: [2020-12-10 Thu 20:06]--[2020-12-11 Fri 07:51] => 11:45
:END:
- text parsing
  #+name:
  #+begin_src python :tangle no
import re
import pandas as pd
myfile = open("/home/jeszyman/repos/basecamp/Dockerfile")
contents = myfile.read()
print(contents)
rx_dict = {
	'school' : re.compile(r'School =  (.*)\n
#+end_src
  - http://biopython.org/DIST/docs/tutorial/Tutorial.pdf
- data visualization
  - 
  - https://github.com/paulvangentcom/python_corona_simulation?files=1
  - https://towardsdatascience.com/how-to-use-ggplot2-in-python-74ab8adec129
  - https://www.reddit.com/r/dataisbeautiful/comments/js9gsu/oc_illustration_of_different_path_finding/
- data science 
  - https://jakevdp.github.io/PythonDataScienceHandbook/
  - https://www.reddit.com/r/datascience/comments/i94fu6/r_for_data_science_python_equivalent/
  - https://jakevdp.github.io/PythonDataScienceHandbook/
- computational biology
  - https://pythonforbiologists.com/printing-and-manipulating-text/
  - http://biopython.org/DIST/docs/tutorial/Tutorial.html
- web tools
  - [[http://stackoverflow.com/questions/8335630/how-to-crawl-a-website-extract-data-into-database-with-python][stack: crawl a website with python]]
- science 
  - [[https://www.youtube.com/watch?v=mLuIB8aW2KA][youtube: Python as Super Glue for the Modern Scientific Workflow]]
- miscellaneous
  - [[https://soundcloud.com/talkpython/104-game-theory-in-python][soundcloud: python for game theory]]
  - https://www.freecodecamp.org/news/python-for-system-administration-tutorial/
  - https://automatetheboringstuff.com/
- graph theory and trees
  - [[https://www.analyticsvidhya.com/blog/2016/04/complete-tutorial-tree-based-modeling-scratch-in-python/#one][A Complete Tutorial on Tree Based Modeling from Scratch (in R & Python)]]
- machine learning
  - - https://www.reddit.com/r/statistics/comments/bzrco1/introduction_to_statistical_learning_anything/
  - machine learning
    - [[https://iamtrask.github.io//2015/11/15/anyone-can-code-lstm/][github neural network]]
    - [[http://radimrehurek.com/data_science_python/][practical data science with python]]
    - [[http://www.dataschool.io/about/][Wash U- affiliated machine learning guy]]
    - [[https://github.com/Aelvangunduz/PyDataAnkara/blob/master/Intro%20to%20DS%20-%20R.ipynb][Data Science in Python]]
    - [[http://www.nltk.org][nltk]]
  - [[file:~/Box%20Sync/statistical_computing/Scanbot%20Sep%2024,%202016%2015.35.pdf][scikit-learn algorithm]]
    - http://swcarpentry.github.io/python-novice-inflammation/ -https://www.codecademy.com/learn/python/?utm_source=customerio&utm_campaign=back_to_school&utm_medium=email_newsletter&utm_content=button_python
  - https://www.analyticsvidhya.com/blog/2017/06/architecture-of-convolutional-neural-networks-simplified-demystified/
  - [[https://www.opendatascience.com/blog/2-supervised-learning-predicting-an-output-variable-from-high-dimensional-observations/][supervised learning with sciki-learn]]
- imaging
  - pathology- [[https://pypi.python.org/pypi/openslide-python][python interface with OpenSlide C library for whole slide imaging]]
- full use case examples
  - [[https://www.reddit.com/r/programming/comments/651fzh/wedding_at_scale_how_i_used_twilio_python_and/][reddit: Wedding at Scale: How I Used Twilio, Python and Google to Automate My Wedding]]
***** [[https://docs.python.org/3/][documentation]]
  - functions
    - https://www.datacamp.com/community/tutorials/functions-python-tutorial
***** packages
- https://seaborn.pydata.org/generated/seaborn.barplot.html#seaborn.barplot
- https://www.reddit.com/r/datascience/comments/itzylb/the_numpy_paper_is_out_nature_open_access_paper/
- https://www.selenium.dev/
- pandas
  - 
- https://www.reddit.com/r/datascience/comments/f6xk72/for_any_python_pandas_users_out_there_heres_a/
- packages
  - package management
    - pip
    - conda
      - - https://stackoverflow.com/questions/51526503/why-does-base-appear-in-my-anaconda-command-prompt
      - "Conda is a packaging tool and installer that aims to do more than what pip does; handle library dependencies outside of the Python packages as well as the Python packages themselves. Conda also creates a virtual environment, like virtualenv does" https://stackoverflow.com/questions/20994716/what-is-the-difference-between-pip-and-conda
      - https://www.google.com/search?q=python+conda
  - [[id:BFB941F1-990D-4328-9609-CF480DCF945B][NLTK]]
  - matplotlib
    - https://github.com/io99/Resources
  - Package installation and management
    - pip
      - [[https://pip.pypa.io/en/stable/][Documentation]]
      - pip freeze to see installed packages
  - scikit for machine learning
    - http://scikit-learn.org/stable/index.html
    - https://www.kdnuggets.com/2019/02/introduction-scikit-learn-gold-standard-python-machine-learning.html
  - sciPy
    - numPy
      - [[https://docs.scipy.org/doc/numpy-1.12.0/index.html][Manual]]
    - pandas
      - for dashborads https://github.com/JosPolfliet/pandas-profiling
  - BioPython
    - https://github.com/peterjc/biopython_workshop
    - http://pythonforbiologists.com/index.php/introduction-to-python-for-biologists/
    - http://biopython.org/wiki/Main_Page
    - http://biopython.org/wiki/SeqIO 
  - [[https://github.com/pandas-dev/pandas/blob/master/doc/cheatsheet/Pandas_Cheat_Sheet.pdf][github: pandas cheatsheet]]
  - installing packages/modules
    - pip install is preferred
  - [[http://biopython.org/DIST/docs/tutorial/Tutorial.html][Biopython Tutorial]]
  - [[http://www.androidxu.com/2017/04/python-pandas-tutorial-with-example.html][Beginners Pandas Getting Started]]
  - https://github.com/JosPolfliet/pandas-profiling
  - [[http://conference.scipy.org/proceedings/scipy2015/allen_downey.html][scipy2015 conference]]
  - [[file:~/Box%20Sync/comp_bio/Huber,14%20Orchestrating%20high%20throughput%20genomic%20analysis%20with%20bioconductor.pdf][Huber,14 Orchestrating high throughput genomic analysis with bioconductor]]
  - Get list of installed packages with pip freeze
  - pandas
    - https://towardsdatascience.com/how-to-learn-pandas-108905ab4955
    - [[https://github.com/pandas-profiling/pandas-profiling][pandas-profiling]]
  - [[https://pypi.org/][Python Package Index]]
  - https://github.com/mstamy2/PyPDF2
****** [[http://www.nltk.org][NLTK]]
:PROPERTIES:
:CREATED:  [2019-02-19 Tue 11:02]
:ID:       BFB941F1-990D-4328-9609-CF480DCF945B
:END:

******* [[http://www.nltk.org/book/][NLTK Book]]
:PROPERTIES:
:CREATED:  [2019-02-19 Tue 11:03]
:ID:       CCF2B40B-47EE-4D26-9FC3-E1A0EC6F1974
:END:
:LOGBOOK:
CLOCK: [2019-02-19 Tue 11:31]--[2019-02-19 Tue 12:00] =>  1:33
CLOCK: [2019-02-19 Tue 11:04]--[2019-02-19 Tue 11:25] =>  0:21
:END:
1. Preface
  - 
3. Language Processing and Python
4. Accessing Text Corpora and Lexical Resources
5. Processing Raw Text
6. Writing Structured Programs
7. Categorizing and Tagging Words (minor fixes still required)
8. Learning to Classify Text
9. Extracting Information from Text
10. Analyzing Sentence Structure
11. Building Feature Based Grammars
12. Analyzing the Meaning of Sentences (minor fixes still required)
13. Managing Linguistic Data (minor fixes still required)
14. Afterword: Facing the Language Challenge

**** Lisp
:PROPERTIES:
:ID:       BF9D824A-02EF-4580-97A1-B887299AD461
:END:
#+name: block-1
#+BEGIN_SRC emacs-lisp :results replace
(list "cons" "newelt" "balsh")
#+END_SRC

#+RESULTS[bbf62e487081f8e947ef5d004eb0bf97f38c1537]: block-1
| cons | newelt | balsh |

- functions
  - functions ending in -p are predicate, meaning they are a yes/no checker
- http://landoflisp.com/
- [[https://www.gnu.org/software/emacs/manual/eintr.html][An Introduction to Programming in Emacs Lisp]]
  1. List Processing
     1. Lisp Lists 
        #+BEGIN_SRC emacs-lisp
        '(this is a list(with a list inside of it "and another by quotes"))
        #+END_SRC

        #+RESULTS:
        | this | is | a | list | (with a list inside of it and another by quotes) |

        - Words = atoms (indivisible)
        - All amounts of whitespace are equivalent
     2. Run a Program
        - List are programs that do 1 of 3 things:
          1. Do nothing except return to you the list itself
          2. Send you an error message
          3. Treat the first symbol in the list as a command to do something
     3. Debugger!
     4. 
     5. Byte-complied code can be created and is stored as .elc instead of .el
     6. 
     7. Variables
        - Note, something like fill-column is NOT a function, it's a variable
        - Arguments can be variables such as fill column
     8. 
        - The message function and message variables
           #+BEGIN_SRC emacs-lisp
  (message "The name of this buffer is: %s." (buffer-name))
 #+END_SRC
     9. Setting the value of a variable with set/setq/let
        - setq is just set<PLUS>a single quote to set value of var
  2. Practicing Evaluation 
- [[http://www.gnu.org/software/emacs/manual/html_mono/elisp.html#Simple-Macro][Emacs Lisp Manual]]
  - Introduction
- [[https://github.com/hypernumbers/learn_elisp_the_hard_way/tree/master/contents][Learn e-lisp the hard way]]
- http://sarabander.github.io/sicp/html/Chapter-1.xhtml#Chapter-1
- [[https://www.youtube.com/watch?v=XYKRVNQ_MqE&app=desktop][Lisp course]]
- https://www.reddit.com/r/emacs/comments/60tl6o/tips_on_reading_dense_emacs_lisp_code/
- https://www.reddit.com/r/emacs/comments/62ykc9/i_guess_i_need_to_learn_elisp/
- http://stackoverflow.com/questions/1614724/is-learning-lisp-useful-at-all-these-days
- [[http://www.fincher.org/tips/Languages/Emacs.shtml][lisp guide]]
- http://emacslife.com/how-to-read-emacs-lisp.html
- https://www.gnu.org/software/emacs/manual/html_node/eintr/
- https://www.youtube.com/watch?v=XYKRVNQ_MqE&app=desktop
- https://www.google.com/search?q=youtube+introduction+to+lisp&rlz=1C9BKJA_enUS678US679&oq=youtube+introduction+to+lisp&aqs=chrome..69i57.9485j0j7&hl=en-US&sourceid=chrome-mobile&ie=UTF-8
- https://www.gnu.org/software/emacs/manual/html_node/elisp/index.html#SEC_Contents
- http://cl-cookbook.sourceforge.net/files.html

***** MIT Structure and Interpretation of Computer Programs
:PROPERTIES:
:ID:       22A808FB-8D3E-4E04-B0FA-FE0AB698F4A2
:END:

- [[https://mitpress.mit.edu/sicp/][Course Website]]
- [[https://mitpress.mit.edu/sicp/full-text/book/book-Z-H-4.html#%_toc_start][Course Textbook]]

****** 1A: Overview: Introduction to Lisp
:PROPERTIES:
:ID:       CEFCF31D-513F-44BD-A4FB-29B1B8A7A17F
:END:

- [ ] add video
- Declarative vs. imperative (how to do)  knowledge
- Techniques for controlling complexity
  - Black box abstraction
    - suppress detail into a module
    - generalize to a function
- interfaces to plug modules together
- language components
  - primitive elements
  - methods of combination
  - methods of abstraction

- Lisp primitive elements are algebric operators and numbers 

- Methods of combination: 
#+BEGIN_SRC emacs-lisp
(+ 3 4 5)
#+END_SRC

#+RESULTS:
: 12

- with vertical operands: 

#+BEGIN_SRC emacs-lisp
(+ (* 3 5)
   (* 47
      (- 20 6.8)) 12 )
#+END_SRC

#+RESULTS:
: 647.4

- Means of abstraction
  - Define A to be the product of 5 + 5 and ask A+A

#+BEGIN_SRC emacs-lisp
(defvar A (* 5 5))
(+ A A)

(defvar B (+ A (* 5 A)))
B
#+END_SRC

#+RESULTS:
: 150

- What about the general idea of squaring?
  - Lambda: make a procedure

#+BEGIN_SRC emacs-lisp
(defvar (square2 (lambda (x) (* x x ))))
(square2 10)
#+END_SRC

**** Bash 
:PROPERTIES:
:ID:       89576FD2-F863-4220-BAD7-D4E179AEA644
:END:
:LOGBOOK:
CLOCK: [2020-08-19 Wed 07:43]--[2020-08-19 Wed 07:54] =>  0:11
CLOCK: [2020-06-25 Thu 08:13]--[2020-06-25 Thu 08:25] =>  0:12
CLOCK: [2019-06-25 Tue 13:47]--[2019-06-25 Tue 14:18] =>  0:31
CLOCK: [2019-06-05 Wed 17:45]--[2019-06-05 Wed 18:03] =>  0:18
CLOCK: [2018-10-29 Mon 14:46]--[2018-10-29 Mon 15:17] =>  0:31
:END:
- [[https://www.gnu.org/software/bash/manual/bash.html][documentation]] and general reference
  - guides, tutorials, cheatsheets, books
    - [[http://www.tldp.org/LDP/abs/html/abs-guide.html][Linux documentation project: Advanced Bash-Scripting Guide]]
    - http://bash3boilerplate.sh/
    - [[https://bash.cyberciti.biz/guide/Main_Page][Linux Shell Scripting Tutorial]]
    - http://ryanstutorials.net/bash-scripting-tutorial/
    - http://linuxcommand.org/lc3_writing_shell_scripts.php
    - https://www.youtube.com/watch?v=3ME7gayYeUQ
    - https://www.youtube.com/results?search_query=shell+scripts+bioinformatics&page=&utm_source=opensearch
    - https://google.github.io/styleguide/shell.xml
    - http://mywiki.wooledge.org/BashGuide
    - http://www.davidpashley.com/articles/writing-robust-shell-scripts/
    - https://emb.carnegiescience.edu/sites/default/files/140602-sedawkbash.key_.pdf
    - https://github.com/dylanaraps/pure-bash-bible
    - https://devhints.io/bash
    - https://www.ibm.com/developerworks/aix/library/au-satbash.html
    - [[http://tldp.org/LDP/LG/issue18/bash.html][string manipulations]]
    - cite:veeraraghavan2002 
    - http://tldp.org/LDP/abs/html/
    - https://github.com/onceupon/Bash-Oneliner
    - https://devhints.io/bash?source=post_page---------------------------
    - [[https://www.ostechnix.com/test-your-bash-skills-by-playing-command-line-games/][bash games]]
    - [[https://www.reddit.com/r/commandline/comments/kbeoe/you_can_make_readline_and_bash_much_more_user/?st=j6k0lbfa&sh=6d214d1f][reddit: You can make readline (and bash) much more user friendly by adding a few options to ~/.inputrc]]
    - https://unix.stackexchange.com/questions/42728/what-does-31-12-23-do-in-a-script
    - http://tldp.org/LDP/abs/html/index.html
    - https://www.gnu.org/savannah-checkouts/gnu/bash/manual/bash.html
    - https://github.com/dylanaraps/pure-bash-bible
    - https://github.com/anordal/shellharden/blob/master/how_to_do_things_safely_in_bash.md
  - [[http://mywiki.wooledge.org/FullBashGuide][Full bash guide]]
- setup
  - themes- https://github.com/ohmybash/oh-my-bash
- examples
  - https://github.com/hopeseekr/BashScripts
  - https://www.reddit.com/r/commandline/comments/9md3pp/a_very_useful_bashrc_file/
- best practices
  - include error calling, but avoid -e http://mywiki.wooledge.org/BashFAQ/105
  - include usage example
  - a -c flag essentially adds an extra shell around multi-part command, see https://superuser.com/questions/1214597/calling-a-script-with-bash-c-option
  - ideas
  - [[file:~/.emacs.d/snippets/sh-mode/write.bash]]
  - https://stackoverflow.com/questions/33297857/how-to-check-dependency-in-bash-script
  - https://www.google.com/search?q=shell+script+formatting+best+practices
- variables
  #+name: 
  #+begin_src bash :tangle no
# Check if variable is set
if [ -z ${var+x} ]; then echo "var is unset"; else echo "var is set to '$var'"; fi
#+end_src
  - https://www.google.com/search?q=bash+variable+file+name+with+spaces 
- commands
  |---------------------------------------+-------------------------------------------------|
  | function                              | command                                         |
  |---------------------------------------+-------------------------------------------------|
  | <35>                                  | <35>                                            |
  | [[https://www.gnu.org/software/bash/manual/bash.html#Bash-Conditional-Expressions][newer/older by mod date]]               | -nt -ot                                         |
  | du -shc .                             | [[https://stackoverflow.com/questions/1019116/using-ls-to-list-directories-and-their-total-sizes][disk usage in current dir]]                       |
  | remove alias                          | unalias <ALIAS_NAME>                            |
  | add alias                             | alias <ALIAS>="<COMMAND>"                       |
  | l                                     | lscpu grep -E '^Thread  ^Core  ^Socket  ^CPU\(' |
  | change password                       | passwd                                          |
  | search manual pages                   | /                                               |
  | disk usage, top level                 | du -h --summarize                               |
  | see total disk usage                  | df -h                                           |
  | see files location on physical disk   | df <PATH>                                       |
  | download in background & resume broke | wget -bqc <PATH>                                |
  | see distro                            | lsb_release -a                                  |
  | see system disks                      | lsblk                                           |
  | add to path (temporary?)              | export PATH=$PATH:/new/path                     |
  | show full path                        | readlink -f                                     |
  | for loop on array                     | for i in "${arr[@]}""                           |
  |                                       |                                                 |
  - find disk usage https://unix.stackexchange.com/questions/67806/how-to-recursively-find-the-amount-stored-in-directory
    - https://unix.stackexchange.com/questions/314394/my-hard-disk-is-full-how-can-i-determine-whats-taking-up-space
  - [[https://stackoverflow.com/questions/6509650/extract-directory-from-path][directory of file as variable]]
  - show running processes with top
  - Common UNIX command line operations table
    | Get lines in file | wc -l <FILE> |
    |                   |              |
    - [[http://www.cyberciti.biz/faq/tar-extract-linux/][Tarball extraction]]
    - [[https://www.howtogeek.com/howto/ubuntu/split-a-text-file-in-half-or-any-percentage-on-ubuntu-linux/][Split a text file in half (or any percentage) on Ubuntu Linux]]
  - Search
    - Recursively search subdirectories
      - [[https://askubuntu.com/questions/307876/how-to-search-for-files-recursively-into-subdirectories][How to Search for Files Recursively into Subdirectories]]
      - [[https://stackoverflow.com/questions/1987926/how-do-i-grep-recursively][Recursively search subdirectories with grep -r "<SEARCH>" .]]
    - Search for file: find . -name <pattern> -print
      - https://kb.iu.edu/d/admm
  - grep -r --unclude \*.R "as.Date" ~/
  - functions
    - https://ubuntuforums.org/showthread.php?t=1166951
    - https://www.biostars.org/p/271330/
  - mkdir -p will ignore if dir exists 
  - printing across terminal width
    - https://www.reddit.com/r/commandline/comments/d9x9m2/formatting_script_output/
  - [[https://unix.stackexchange.com/questions/65803/why-is-printf-better-than-echo][printf vs echo]]
  - https://stackoverflow.com/questions/34567826/what-is-usage-in-shell-scripting/34567852#:~:text=It's%20a%20just%20a%20convention,filename%3D%241%20fi%20...
  - https://stackoverflow.com/questions/687780/documenting-shell-scripts-parameters
  - https://stackoverflow.com/questions/2953081/how-can-i-write-a-heredoc-to-a-file-in-bash-script
  - https://www.google.com/search?q=bash+echo+tab 
  - users and groups
    | function                  | command                   |
    |---------------------------+---------------------------|
    | list users                |                           |
    | list groups               |                           |
    | list group members        | getent group <GROUPNAME>  |
    | add user                  | useradd <USERNAME>        |
    | set password              | passwd <USERNAME>         |
    | add group                 | groupadd <GROUPNAME>      |
    | add user to group         | usermod -g <GROUP> <USER> |
    | change user primary group |                           |
- interfaces
  - emacs
    - https://stackoverflow.com/questions/1008750/ide-emacs-mode-for-shell-scripting-in-bash-sh-etc
    - http://www.skybert.net/emacs/bash-linting-in-emacs/
- processes 
  - comments https://www.google.com/search?q=bash+comment+in+pipe
  - exits
    - https://askubuntu.com/questions/892604/meaning-of-exit-0-exit-1-and-exit-2-in-a-bash-script#:~:text=All%20by%20itself%2C%20exit%20implies,successful%20completion%20of%20your%20script.&text=However%20by%20specifying%20the%201,exited%20with%20an%20error%20condition.
  - arrays
    - [[https://stackoverflow.com/questions/18921350/shell-script-correct-way-to-declare-an-empty-array][declare array]]
    - [[https://unix.stackexchange.com/questions/125632/printing-an-array-to-a-file-with-each-element-of-the-array-in-a-new-line-in-bash][print array with line breaks]]
    - https://www.google.com/search?q=bash+create+array 
    - https://www.google.com/search?q=bash+pass+array+to+for+loop 
    - pass to array 
      - pass each line of file
        - https://riptutorial.com/bash/example/19457/read-lines-of-a-file-into-an-array
      - pass cat output
        - https://stackoverflow.com/questions/9449417/how-do-i-assign-the-output-of-a-command-into-an-array
      - https://www.google.com/search?q=pass+cat+output+to+array+variable
      - command output https://stackoverflow.com/questions/9449417/how-do-i-assign-the-output-of-a-command-into-an-array
  - for loops
    - examples
      - Recursively git commit with date tag
        #+BEGIN_SRC sh

     d=$(date +%Y-%m-%d)
     echo "$d"
     cd ~/Box\ Sync/
     for i in ./*/ ; do (cd "$i" && git commit -a -m "$d"); done
     end

     #+END_SRC
  - checkers
    - [[https://unix.stackexchange.com/questions/322817/how-to-find-the-file-where-a-bash-function-is-defined][check were function is called from]]
    - [[https://askubuntu.com/questions/102093/how-to-see-the-command-attached-to-a-bash-alias][check where alias goes w/ type]]
    - [[https://stackoverflow.com/questions/592620/how-can-i-check-if-a-program-exists-from-a-bash-script][check if program exists]]
    - [[https://stackoverflow.com/questions/59838/how-can-i-check-if-a-directory-exists-in-a-bash-shell-script][check if dir exists]]
    - https://theterminallife.com/check-if-file-exists-and-is-not-empty/
  - clipboard
    - https://askubuntu.com/questions/382767/how-to-pipe-dump-clipboard-contents-to-a-file  
  - configuration management
    - https://en.wikipedia.org/wiki/Ansible_(software)
  - debug
    - https://zwischenzugs.com/2018/10/09/learn-bash-debugging-techniques-the-hard-way/
  - feedback, traps, eof, etc
    - traps
      - https://opensource.com/article/20/6/bash-trap
    - error reporting
      - interupt with && https://serverfault.com/questions/252448/bash-script-alert-on-error
      - [[https://askubuntu.com/questions/892604/meaning-of-exit-0-exit-1-and-exit-2-in-a-bash-script][Meaning of exit 0, exit 1 and exit 2 in a bash script]]
  - pipe
    - https://www.google.com/search?q=pipe+store+output+as+variable 
  - file and directory metadata
    - https://superuser.com/questions/120078/unix-files-starting-with-a-dash
    - https://www.google.com/search?q=bash+compare+files+by+date
      - https://unix.stackexchange.com/questions/372857/compare-two-file-modification-dates
          #+begin_src bash 
      cd /tmp/
      rm file1
      rm file2
      touch file2; sleep 2; touch file1
      if [ file1 -nt file2 ]; then
          echo "yes"
      fi
          #+end_src
      - https://unix.stackexchange.com/questions/88525/need-to-move-files-to-different-folder-based-on-the-creation-date
    - https://www.google.com/search?q=bash+check+file+size
    - https://www.google.com/search?q=bash+list+directory+sizes
    - https://www.google.com/search?q=bash+add+date+to+file+name
    - https://www.google.com/search?q=bash+bulk+rename+files 
  - functions  
    #+name: 
    #+begin_src bash :tangle no
# Assign variable which holds array to another name
a=('a' 'b' 'c')
b=( "${a[@]}" )
#+end_src
    - use type to see function definition
    - https://www.reddit.com/r/commandline/comments/d9x9m2/formatting_script_output/
    - https://www.shellhacks.com/print-usage-exit-if-arguments-not-provided/
  - globbing
    - https://stackoverflow.com/questions/2937407/test-whether-a-glob-has-any-matches-in-bash?noredirect=1&lq=1
  - resource use control
    - https://linuxhint.com/limit_cpu_usage_process_linux/
    - https://stackoverflow.com/questions/4651234/how-to-determine-the-process-memory-limit-in-linux
    - https://unix.stackexchange.com/questions/52313/how-to-get-execution-time-of-a-script-effectively
    - setting local resource limits
      - http://coldattic.info/post/40/
  - install
    - configure, make, install
      - https://www.tldp.org/HOWTO/Software-Building-HOWTO-3.html
      - https://superuser.com/questions/360178/what-does-make-install-do
      - often Makefile will install to created ./bin/ sub-directory 
    - https://stackoverflow.com/questions/10961439/why-always-configure-make-make-install-as-3-separate-steps
  - links
    - https://stackoverflow.com/questions/5767062/how-to-check-if-a-symlink-exists
  - linting
    - http://www.skybert.net/emacs/bash-linting-in-emacs/
    - https://github.com/koalaman/shellcheck#in-your-editor
    - https://stackoverflow.com/questions/171924/how-do-i-syntax-check-a-bash-script-without-running-it#171932
    - http://www.skybert.net/emacs/bash-linting-in-emacs/
    - http://www.skybert.net/emacs/bash-linting-in-emacs/
  - logging
    - https://stackoverflow.com/questions/18278223/method-to-write-in-log-files-in-a-shell-script
  - multi threading
    - https://duckduckgo.com/?q=multithread+grep&ia=qa
    - https://stackoverflow.com/questions/1455695/forking-multi-threaded-processes-bash
  - prompt for user input
    - https://www.google.com/search?q=bash+prompt+user+input
    - [[https://stackoverflow.com/questions/226703/how-do-i-prompt-for-yes-no-cancel-input-in-a-linux-shell-script][stack: How do I prompt for Yes/No/Cancel input in a Linux shell script?]]
  - variables
    - 1 & 2 https://stackoverflow.com/questions/10508843/what-is-dev-null-21
    - [[https://stackoverflow.com/questions/91368/checking-from-shell-script-if-a-directory-contains-files][use globbing in variables with shopt]]
    - [[https://www.cyberciti.biz/faq/linux-unix-formatting-dates-for-display/][formatting dates for display]]
    - [[https://data36.com/variables-if-statements-while-loops-bash-data-science/][variables for if statements and while loops]].
    - To make executable: chmod +x /path/to/yourscript.sh
    - https://stackoverflow.com/questions/19512550/what-does-mean-in-a-shell-if-statement
    - [[https://askubuntu.com/questions/892604/meaning-of-exit-0-exit-1-and-exit-2-in-a-bash-script][Meaning of exit 0, exit 1 and exit 2 in a bash script]]
    - https://stackoverflow.com/questions/2642585/read-a-variable-in-bash-with-a-default-value
  - function template- add run type
    - updating
    - overwrite
  - https://stackoverflow.com/questions/12522269/how-to-find-the-largest-file-in-a-directory-and-its-subdirectories
  - https://unix.stackexchange.com/questions/359832/converting-csv-to-tsv
- applications
  - https://www.reddit.com/r/programming/comments/aw0zko/bash_creating_tabcompletion_for_your_programs/
- ideas
  - check and set file permissions as best practice
  - ideas for function development protocol-
    - first I/O validation, make example, then optimization of a) process and b) outcomes, then error handling
  - size filter
    - #find $localdata/frag-filt-bams -name "*.bam" -type 'f' -size -4M -delete
       # small bam check
       ##
       #if [ -f /drive3/users/jszymanski/repos/mpnst/data/small_bams ]; then rm /drive3/users/jszymanski/repos/mpnst/data/small_bams; fi
       ##
       #minimum_bam_size=200000000
- reference
  - https://github.com/shellspec/shellspec
***** my bash functions -> [[file:~/repos/basecamp/src/bash/]]
:PROPERTIES:
:ID:       569d1afa-e991-47b7-be15-3dd6364f5258
:END:

#+name: git_pull_all
#+begin_src bash :tangle ./src/git_pull_all.sh :dir ~/repos/basecamp
#!/bin/bash
#########1#########2#########3#########4#########5#########6#########7#########8
#                                                                              #
#                       Script to automate git pulls                           #
#             from a set of repositories within the same root dir              #
#                                                                              #
#########1#########2#########3#########4#########5#########6#########7#########8
# 
# 1. Script Checks
#
## Check if git exist
command -v git >/dev/null 2>&1 # stop if git not found
if [ $? -eq 1 ]; then
    echo "Git not found"
    exit 1; fi
##
## Check if any repos exist
shopt -s nullglob
repo_dirs=(~/repos/*)
if [ ${#repo_dirs[@]} -eq 0 ]; then
    echo "No repos at ~/repos/"
    exit 1; fi
shopt -u nullglob
##
# 2. Pull Function 
#                      
for d in $HOME/repos/*
do 
    [[ ! -d "$d" ]] && continue
    echo "$d" &&
    cd "$d" &&
    git pull &&
    git submodule update --recursive &&
    git submodule update --remote && 
    cd "$OLDPWD"
done
#
#+end_src

#+name:symlink-by-csv-script 
#+begin_src sh :tangle ./src/bash/bash_functions.sh
#
######################
### symlink-by-csv ###
######################
#
# Purpose: generates symbolic links in bulk from a csv file 
#
# Input:
# A .csv file of two columns, 
#  Column 1 with source file paths
#  Column 2 with destination symbolic link paths 
#
# Function:
symlink_by_csv(){
    # Set internal field separator
    export IFS=","
    # Take csv and pass to while/read
    cat $1 | while read a b; do
        ln -s $a $b; done
}
#
# Example:
# cd /tmp
# mkdir -p csv-symlink-test
# cd csv-symlink-test
# touch csv-for-links.csv
# touch file-to-link-from.txt
# echo "file-to-link-from.txt,path-to-link-to.txt" >> csv-for-links.csv
# echo "test link" > file-to-link-from.txt
# export IFS=","
# cat csv-for-links.csv | while read a b; do
#     ln -s $a $b ; done
# cat path-to-link-to.txt
# cd ../
# rm -rf csv-symlink-test
#+end_src

#+name:copy-file-text-to-clipboard 
#+begin_src sh 
#
###################################
### copy-file-text-to-clipboard ###
###################################
#
# Purpose: for pandoc supported file, copies file text to system clipboard
#
# Dependencies:
dependencies=("pandoc" "xclip")
check_dependencies dependencies[@]
#
# Input: 
# Any pandoc supported file 
#
# Function:
text_to_clip() { pandoc -S $1 | xclip -selection clipboard}
#
# Example
cd /tmp/ && rm -rf ./example && mkdir -p ./example && cd ./example 
echo "Hello" | pandoc -o out.docx
chmod 777 ./out.docx
text_to_clip()
./out.docx
test=out.docx
pandoc -S $test | xclip -selection clipboard

#+end_src

#+name: check_local_software
#+begin_src bash :tangle ./src/bash/bash_functions.sh
check_local_software(){
    # Usage
    ##
    ## Message
    usage(){
                #########1#########2#########3#########4#########5#########6#########7#########8
        printf "\n check_local_software 
                \n Checks list of software in bash array and exits with error message if any
 software in the array is not found
                \n \$1 = Bash array of software, e.g. try software=(bash, git)
                \n "       
    }
    ##
    ## Check
    [[ $# -eq 0 ]] && usage
    #
    # Variables
    software=$1
    #
    # Run
    for i in "${software[@]}"; do
    if command -v $i >/dev/null 2>&1 ; then
        echo "$i installed"
    else
        echo "$i not found, exiting"
        exit 1
    fi
done
}
#+end_src


- bash functions
  - docker interactive
  #+name: 
  #+begin_src bash :tangle ./src/bash/bash_functions.sh

docker_interactive() {
    if [ -f /.dockerenv ]; then
        echo "shell already in docker, exiting"
        exit 1
    else
        repo="USER INPUT"
        read -p "image name: " image
        case $HOSTNAME in
            (radonc-cancerbio) docker run -it \
                                      -v /mnt/:/mnt/ \
                                      -v /home/:/home/ \
                                      -u $(id -u ${USER}) \
                                      -e "USER=jeszyman" \
                                      -e "HOME=/home/jeszyman" \
                                      jeszyman/$image \
                                      /bin/bash;;
            (jeff-*) docker run -it \
=======
:PROPERTIES:
:ID:       943a0e83-cb72-482c-b4eb-dc7e5303f2ce
:END:
:LOGBOOK:
CLOCK: [2020-10-29 Thu 11:50]--[2020-10-29 Thu 12:01] =>  0:11
:END:

#+begin_src emacs-lisp
(setq comint-scroll-to-bottom-on-output t)
#+end_src

#+name: 
#+begin_src bash :tangle no
sudo npm i -g bash-language-server
cd /home
#+end_src

#+begin_src emacs-lisp
(use-package lsp-mode
  :commands lsp
  :hook
  (sh-mode . lsp))

(setq lsp-bash-highlight-parsing-errors 1)
(setq lsp-bash-explanshell-endpoint 1)
(setq lsp-bash-glob-pattern 1)
#+end_src

****** [[file:~/repos/basecamp/src/shell/functions.sh][Common Process Functions]]
:PROPERTIES:
:CREATED:  [2020-04-14 Tue 09:05]
:ID:       15071151-f519-4c7f-b21f-997d6d7b6bc5
:END:
#+name: check_local_software
#+begin_src bash :tangle ./src/bash/functions.sh
check_local_software(){
    if [[ $# -eq 0 ]] ; then
        printf "\n check_local_software 
              \n Checks list of software in array, exits with error message if not found
              \n \$1 = Bash array of software, e.g. software=(bash, git)
              \n "
    else    
        software=$1
        for i in "${software[@]}"; do
            if command -v $i >/dev/null 2>&1 ; then
                echo "$i installed"
            else
                echo "$i not found, exiting"
                exit 1
            fi
        done
    fi
}
#
# check_local_software
# unit test
#softwarecheck=(bash git)
#check_local_software $softwarecheck
#+end_src

#+name: git_pull_all
#+begin_src bash :tangle ./src/git_pull_all.sh :dir ~/repos/basecamp
#!/bin/bash
#########1#########2#########3#########4#########5#########6#########7#########8
#                                                                              #
#                       Script to automate git pulls                           #
#             from a set of repositories within the same root dir              #
#                                                                              #
#########1#########2#########3#########4#########5#########6#########7#########8
# 
# 1. Script Checks
#
## Check if git exist
command -v git >/dev/null 2>&1 # stop if git not found
if [ $? -eq 1 ]; then
    echo "Git not found"
    exit 1; fi
##
## Check if any repos exist
shopt -s nullglob
repo_dirs=(~/repos/*)
if [ ${#repo_dirs[@]} -eq 0 ]; then
    echo "No repos at ~/repos/"
    exit 1; fi
shopt -u nullglob
##
# 2. Pull Function 
#                      
for d in $HOME/repos/*
do 
    [[ ! -d "$d" ]] && continue
    echo "$d" &&
    cd "$d" &&
    git pull &&
    git submodule update --recursive &&
    git submodule update --remote && 
    cd "$OLDPWD"
done
#
#+end_src

#+name: jpg_to_pdf
#+begin_src bash 
#########1#########2#########3#########4#########5#########6#########7#########8#########9#########0#########1
jpg_to_pdf() {
    printf "Function to convert jpeg images to pdf
    Accepts:
    Returns: "
}
#+end_src

#+name:symlink-by-csv-script 
#+begin_src sh :tangle ./src/shell/functions.sh
#
######################
### symlink-by-csv ###
######################
#
# Purpose: generates symbolic links in bulk from a csv file 
#
# Input:
# A .csv file of two columns, 
#  Column 1 with source file paths
#  Column 2 with destination symbolic link paths 
#
# Function:
symlink_by_csv(){
    # Set internal field separator
    export IFS=","
    # Take csv and pass to while/read
    cat $1 | while read a b; do
        ln -s $a $b; done
}
#
# Example:
# cd /tmp
# mkdir -p csv-symlink-test
# cd csv-symlink-test
# touch csv-for-links.csv
# touch file-to-link-from.txt
# echo "file-to-link-from.txt,path-to-link-to.txt" >> csv-for-links.csv
# echo "test link" > file-to-link-from.txt
# export IFS=","
# cat csv-for-links.csv | while read a b; do
#     ln -s $a $b ; done
# cat path-to-link-to.txt
# cd ../
# rm -rf csv-symlink-test
#+end_src

#+name:copy-file-text-to-clipboard 
#+begin_src sh 
#
###################################
### copy-file-text-to-clipboard ###
###################################
#
# Purpose: for pandoc supported file, copies file text to system clipboard
#
# Dependencies:
dependencies=("pandoc" "xclip")
check_dependencies dependencies[@]
#
# Input: 
# Any pandoc supported file 
#
# Function:
text_to_clip() { pandoc -S $1 | xclip -selection clipboard}
#
# Example
cd /tmp/ && rm -rf ./example && mkdir -p ./example && cd ./example 
echo "Hello" | pandoc -o out.docx
chmod 777 ./out.docx
text_to_clip()
./out.docx
test=out.docx
pandoc -S $test | xclip -selection clipboard

#+end_src


** ESS with R running through docker
- ess on docker
  - http://ess.r-project.org/Manual/ess.html#Activating-and-Loading-ESS
  - and get docker ip
  - and provision container for ssh 
- http://ess.r-project.org/Manual/ess.html#Activating-and-Loading-ESS
  - and get docker ip
  - and provision container for ssh 
- https://gtown-ds.netlify.app/2017/08/16/docker-emacs/
** Docker                                                          :software:
:PROPERTIES:
:ID:       D2FAA88D-70CC-4450-BBB3-8A446CB43AF3
:CREATED:  [2019-07-07 Sun 09:05]
:END:
:LOGBOOK:
CLOCK: [2020-10-29 Thu 12:01]--[2020-10-29 Thu 12:48] =>  0:47
CLOCK: [2019-11-30 Sat 18:42]--[2019-11-30 Sat 18:49] =>  0:07
CLOCK: [2019-06-27 Thu 08:31]--[2019-06-27 Thu 08:45] =>  0:14
CLOCK: [2019-05-29 Wed 15:34]--[2019-05-29 Wed 15:44] =>  0:10
CLOCK: [2019-03-22 Fri 17:34]--[2019-03-22 Fri 20:34] =>  3:00
CLOCK: [2017-08-29 Tue 09:38]--[2017-08-29 Tue 09:51] =>  0:13
CLOCK: [2017-08-29 Tue 09:19]--[2017-08-29 Tue 09:37] =>  0:18
CLOCK: [2019-11-30 Sat 18:42]--[2019-11-30 Sat 18:49] =>  0:07
CLOCK: [2019-06-27 Thu 08:31]--[2019-06-27 Thu 08:45] =>  0:14
CLOCK: [2019-05-29 Wed 15:34]--[2019-05-29 Wed 15:44] =>  0:10
CLOCK: [2019-03-22 Fri 17:34]--[2019-03-22 Fri 20:34] =>  3:00
CLOCK: [2017-08-29 Tue 09:38]--[2017-08-29 Tue 09:51] =>  0:13
CLOCK: [2017-08-29 Tue 09:19]--[2017-08-29 Tue 09:37] =>  0:18
:END:
- Interactive docker initialization
#+name: 
#+begin_src bash :session *shell2* :tangle no
echo test 
#+end_src
  #+name: interactive_docker_initalization
  #+begin_src bash :session *shell2* :tangle no
docker_interactive(){
    # Check for parameters, if empty then return usage
    if [ -z "$1" ] || [[ $1 == -h ]] || [[ $1 == --help ]]; then
        printf "\n docker_interactive
	\n Launches an interactive container with server-specific settings
	\n
        \n Last update December 17, 2020
              \n \$2 = VARIABLE 2
              \n "
    elif
    else
    fi
}
	

# Interactive docker initialization

docker_interactive() {
    repo="USER INPUT"
    read -p "repo name: " repo
    if [ -z "$repo" ] || [[ $repo == -h ]] || [[ $repo == --help ]]; then
    case $HOSTNAME in
        (radonc-cancerbio) docker run -it \
                                  -v /mnt/:/mnt/ \
                                  -v /home/:/home/ \
                            -u $(id -u ${USER}) \
                            jeszyman/$repo \
                            /bin/bash;;
        (jeszyman-*) docker run -it \
                            -v /home/:/home/ \
                            -u $(id -u ${USER}) \
                            jeszyman/$repo \
                            /bin/bash;;
        (acl*) docker run -it \
                      -v /drive3/:/drive3/ \
                      -v /duo4/:/duo4/ \
                      -v /home/:/home/ \
                      -u $(id -u ${USER}) \
                      jeszyman/$repo \
                      /bin/bash;;
        (ACL*) docker run -it \
                      -v /home/:/home/ \
                      -v /duo4/:/duo4/ \
                      -u $(id -u ${USER}):$(id -g ${USER}) \
                      -h=${HOSTNAME} \
                      jeszyman/$repo \
                      /bin/bash;;
        (virtual-workstation*.gsc.wustl.edu) bsub -Is -q docker-interactive -a 'docker(jeszyman/'"$repo"')' /bin/bash;;
    esac
}
#

#+end_src
#+name: 
#+begin_src bash :tangle no
cd ~/repos/basecamp
docker build . --file Dockerfile --tag jeszyman/basecamp
docker push jeszyman/basecamp
cd 
docker run jeszyman/test
#+end_src

- user repos (like mine are / not : for FROM build command!!!
- docker-related bash functions
  - build command examples
    #+name: docker_build
    #+begin_src bash :tangle no
cd ~/repos/biotools
docker build . --file Dockerfile --tag jeszyman/test
docker build . --file Dockerfile --tag jeszyman/biotools
#+end_src
    #+name: build-dockerfile
    #+begin_src bash 
#NOTE: Cannot build for local machine while connected to VPN- apt can't install software
cd ~/repos/basecamp
test=~/repos/basecamp

docker build . --file Dockerfile --tag jeszyman/test
#+end_src
  - interactive launch by docker image name and current server location 
    #+begin_src bash :tangle no

  docker_interactive() {
      if [ -f /.dockerenv ]; then
          echo "shell already in docker, exiting"
          exit 1
      else
          repo="USER INPUT"
          read -p "image name: " image
          case $HOSTNAME in
              (radonc-cancerbio) docker run -it \
                                        -v /media/:/media/ \
                                        -v /home/:/home/ \
                                        -u $(id -u ${USER}) \
                                        jeszyman/$image \
                                        /bin/bash;;
              (jeff-*) docker run -it \
                              -v /home/:/home/ \
                              -u $(id -u ${USER}) \
                              -e "USER=jeszyman" \
                              -e "HOME=/home/jeszyman" \
                              jeszyman/$image \
                              /bin/bash;;
              (jeszyman-*) docker run -it \
                                  -v /home/:/home/ \
                                  -u $(id -u ${USER}) \
                                  -e "USER=jeszyman" \
                                  -e "repo=/home/jeszyman/repos/mpnst" \
                                  -e "localdata=/home/jeszyman/data/career/washu/radonc/chaudhuri/mpnst" \
                                  jeszyman/$image \
                                  /bin/bash;;
              (acl*) docker run -it \
                            -v /drive3/:/drive3/ \
                            -v /duo4/:/duo4/ \
                            -v /mnt/:/mnt/ \
                            -v /home/:/home/ \
                            -u $(id -u ${USER}) \
                            -e "USER=jszymanski" \
                            -e "repo=/drive3/users/jszymanski/repos/mpnst" \
                            -e "localdata=/mnt/xt3/mpnst" \
                            jeszyman/$image \
                            /bin/bash;;
              (ACL*) docker run -it \
                            -v /home/:/home/ \
                            -v /duo4/:/duo4/ \
                            -u $(id -u ${USER}):$(id -g ${USER}) \
                            -e "USER=jszymanski" \
                            -e "repo=/drive3/users/jszymanski/repos/mpnst" \
                            -e "localdata=/mnt/xt3/mpnst" \
                            jeszyman/$image \
                            /bin/bash;;
<<<<<<< HEAD
            (jeszyman-*) docker run -it \
                                -v /home/:/home/ \
                                -u $(id -u ${USER}) \
                                -e "USER=jeszyman" \
                                -e "repo=$repo" \
                                -e "data=$data" \
                                jeszyman/$image \
                                /bin/bash;;
            (acl*) docker run -it \
                          -v /drive3/:/drive3/ \
                          -v /duo4/:/duo4/ \
                          -v /mnt/:/mnt/ \
                          -v /home/:/home/ \
                          -u $(id -u ${USER}) \
                          -e "USER=jszymanski" \
                          jeszyman/$image \
                          /bin/bash;;
            (ACL*) docker run -it \
                          -v /home/:/home/ \
                          -v /duo4/:/duo4/ \
                          -u $(id -u ${USER}):$(id -g ${USER}) \
                          -e "USER=jszymanski" \
                          jeszyman/$image \
                          /bin/bash;;
            (virtual-workstation*.gsc.wustl.edu) bsub -Is -q docker-interactive -a 'docker(jeszyman/'"$image"')' /bin/bash;;
        esac
    fi    
}

##

#+end_src
## identifies server in docker containers
server_ask() {
    echo -n "Choose your server: "
    read SERVER
    SERVER="${SERVER:=chaudhuri-roche}"
}
#+name: global_setup
#+begin_src bash :tangle no
repo=~/repos/basecamp

#+end_src


#+name: docker_build
#+begin_src bash :tangle no
cd $repo
docker build . --file Dockerfile --tag jeszyman/test

docker ps
docker exec -it b95de4b12b87 bash

docker inspect -f \
       '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' \
       b95de4b12b87

docker run -p 127.0.0.5:80:8080 jeszyman/test

docker run -it --expose 8080 -p 127.0.0.1:8080:8080 jeszyman/test

docker run --rm --name some-nginx jeszyman/test
docker run -it -d -p 180:180 --name test2 jeszyman/test

docker container ls
docker container inspect --format '{{ .NetworkSettings.IPAddress }}' test2
curl 172.17.0.5 -p 180
#+end_src



=======
              (virtual-workstation*.gsc.wustl.edu) bsub -Is -q docker-interactive -a 'docker(jeszyman/'"$image"')' /bin/bash;;
          esac
      fi    
  }
  #
  docker_interactive
  basecamp
  ##
  ## Interactive docker initialization
  docker_interactive() {
      image="USER INPUT"
      read -p "image name: " image
      case $HOSTNAME in
          (radonc-cancerbio) docker run -it \
                                    -v /media/:/media/ \
                                    -v /home/:/home/ \
                                    -u $(id -u ${USER}) \
                                    jeszyman/$image \
                                    /bin/bash;;
          (jeff-*) docker run -it \
                          -v /home/:/home/ \
                          -u $(id -u ${USER}) \
                          -e "USER=jeszyman" \
                          -e "repo=/home/jeszyman/repos/mpnst" \
                          -e "localdata=/home/jeszyman/data/career/washu/radonc/chaudhuri/mpnst" \
                          jeszyman/$image \
                          /bin/bash;;
          (jeszyman-*) docker run -it \
                              -v /home/:/home/ \
                              -u $(id -u ${USER}) \
                              -e "USER=jeszyman" \
                              -e "repo=/home/jeszyman/repos/mpnst" \
                              -e "localdata=/home/jeszyman/data/career/washu/radonc/chaudhuri/mpnst" \
                              jeszyman/$image \
                              /bin/bash;;
          (acl*) docker run -it \
                        -v /drive3/:/drive3/ \
                        -v /duo4/:/duo4/ \
                        -v /mnt/:/mnt/ \
                        -v /home/:/home/ \
                        -u $(id -u ${USER}) \
                        -e "USER=jszymanski" \
                        -e "repo=/drive3/users/jszymanski/repos/mpnst" \
                        -e "localdata=/mnt/xt3/mpnst" \
                        jeszyman/$image \
                        /bin/bash;;
          (ACL*) docker run -it \
                        -v /home/:/home/ \
                        -v /duo4/:/duo4/ \
                        -u $(id -u ${USER}):$(id -g ${USER}) \
                        -e "USER=jszymanski" \
                        -e "repo=/drive3/users/jszymanski/repos/mpnst" \
                        -e "localdata=/mnt/xt3/mpnst" \
                        jeszyman/$image \
                        /bin/bash;;
          (virtual-workstation*.gsc.wustl.edu) bsub -Is -q docker-interactive -a 'docker(jeszyman/'"$image"')' /bin/bash;;
      esac
  }
  #

  #+end_src
- run dockers w/ uname https://github.com/JAremko/docker-emacs
- emacs ess docker ssh
  - https://github.com/emacs-ess/ESS/issues/928
  - https://gtown-ds.netlify.app/2017/08/16/docker-emacs/
- [ ] setup chown https://stackoverflow.com/questions/26500270/understanding-user-file-ownership-in-docker-how-to-avoid-changing-permissions-o
- https://www.google.com/search?q=docker+cleanup
- documentation examples - https://docs.docker.com/engine/reference/run/#env-environment-variables
- [[id:14a1f321-73c7-4dbb-be33-f7377ae38cdd][Research Infrastructure Services (RIS)]]
- processes
  - install
    - [[https://docs.docker.com/install/linux/docker-ce/ubuntu/#prerequisites][install community edition through ubuntu]], https://docs.docker.com/install/linux/linux-postinstall/
  - build image
    - create Dockerfile
      - [[https://docs.docker.com/engine/reference/builder/#parser-directives][Dockerfile reference]]
      - [[https://docs.docker.com/develop/develop-images/dockerfile_best-practices/][Dockerfile best practices]]
        - [[https://hub.docker.com/search/?q=&type=image&image_filter=official][official images]]
      - [[file:~/data/Dockerfiles/]]
      - recommended dockerfiles
        - [[https://hub.docker.com/_/golang/]]
        - https://hub.docker.com/_/ruby/
        - https://hub.docker.com/_/perl/
        - https://hub.docker.com/_/hylang/
    - pull code into build from github https://stackoverflow.com/questions/52155128/how-write-dockerfile-to-properly-pull-code-from-my-github
    - https://stackoverflow.com/questions/39518377/docker-build-unable-to-fetch-archives
  - push built image to Docker Hub
    - docker login 
    - docker tag <IMAGE ID> jeszyman/<IMAGE NAME>
    - docker push jeszyman/<IMAGE NAME>
    - reference https://ropenscilabs.github.io/r-docker-tutorial/04-Dockerhub.html
    - connect to host 
      - https://dev.to/bufferings/access-host-from-a-docker-container-4099
      - https://medium.com/@mccode/understanding-how-uid-and-gid-work-in-docker-containers-c37a01d01cf
  - run
    - publish port to host- these are accessible with [[id:2e3a156d-3cdf-4995-9b61-b6a6a6f3a32c][tramp docker function]] 
      #+begin_src bash :tangle no
docker run --rm -p 6379:6379 <CONTAINER> 
#+end_src
      - p can also assign a local ip, e.g. docker run -p 127.0.0.2:42222:22 <CONTAINER> 
    - as current user
      - declare user q/ -u <USER NAME>
      - https://www.google.com/search?q=docker+run+set+home+directory
    - w/ symlinks - mount both locations
      - https://www.google.com/search?q=docker+run+volume+symbolic+links
    - https://www.google.com/search?q=docker+run+mount+home+directory
    - in timezone with a wget     tzdata command in the dockerfile, then docker run -e "TZ=America/Chicago" -it jeszyman/dev
    - https://confluence.ris.wustl.edu/display/RSUM/Docker+Wrapper+Environment+Variables
- commands
  |-----------------------------+-----------------------------------|
  | function                    | command                           |
  |-----------------------------+-----------------------------------|
  | <35>                        | <35>                              |
  | build image from Dockerfile | docker image build --file <> .    |
  | list images                 | docker images                     |
  | find from docker hub        | docker search <NAME>              |
  | remove image                | docker rmi <IMAGE>                |
  | push to Docker Hub          | docker push <USER>/<IMAGE NAME>   |
  | get man file                | docker <COMMAND> --help           |
  | list running containers     | docker ps                         |
  | list all containers         | docker ps -a                      |
  | bash shell for container    | exec -it <container-id> bash:     |
  | get dockerfile from image   | docker history --no-trunc <IMAGE> |
  |                             |                                   |
  - stop
    - kill
    - docker commit
      - https://docs.docker.com/engine/reference/commandline/commit/
      - generally don't use for things like adding a new R package- better handled at the dockerfile level
    - run commands
      - -it interactive, terminal CLI
      - -p <host port>:<container port>
        - note that port will be the docker VM port, not host, so won't work directly at a 192 url
          - https://docs.docker.com/docker-for-mac/networking/#use-cases-and-workarounds
          - - https://forums.docker.com/t/using-localhost-for-to-access-running-container/3148/8
      - -d detach- opposite of -it
      - -v mount host directory
      - -rm=true remove container when done
      - e.g. sudo docker run --name=my-r-base --rm -ti rocker/r-base /bin/bash
        - will grab docker image specified from web 
        - --name specifies image name
        - --rm removes container on exit
        - -ti: pseudodotty terminal
- interfaces
  - https://github.com/JAremko/docker-emacs
  - https://github.com/Silex/docker.el
- [[https://docs.docker.com/][documentation]]
  - https://docs.docker.com/engine/faq/
  - https://docs.docker.com/get-started/
    - https://docs.docker.com/get-started/#images-and-containers
  - https://docs.docker.com/develop/develop-images/dockerfile_best-practices/
  - [[https://docs.docker.com/docker-for-mac/][Get started with Docker for Mac]]
  - [[https://docs.docker.com/storage/][storage]]
    - probably best not to use persistant data in containers / images
    - https://www.google.com/search?q=how+to+save+data+in+docker+image
      - https://docs.docker.com/storage/
  - [[https://docs.docker.com/get-started/][Get started]]
  - https://www.reddit.com/r/docker/comments/8s8n3o/heres_a_bunch_of_docker_best_practices_that_i/
  - https://tecadmin.net/tutorial/docker/docker-tutorials/
- applications
  - Docker on [[file:~/Box%20Sync/org/career.org::*McDonnell%20Genome%20Institute%20(MGI)][MGI Cluster]] 
- reference
  - cite:boettiger2015 
  - [[https://stackoverflow.com/questions/23735149/what-is-the-difference-between-a-docker-image-and-a-container][stack: difference b/w image and container]]
  - [[https://hub.docker.com/?ref=login][Docker Hub]]
  - Components
    - docker- is a service daemon
    - Dockerfile: defines image. Docker builds Docker image from Dockerfile
    - image: executable package with everything to run a piece of software
      - runs on any machine with Docker installed
      - prebuilt environments that tell container what to do
    - container: instance of an image, i.e. what image becomes in memory when executed. actually running and doing stuff
    - [[https://hub.docker.com/][docker hub]]
    - dockstore: links docker images with descriptors in common workflow language and/or wdl
      - https://www.youtube.com/watch?v=sInP-ByF9xU
      - https://dockstore.org/
  - Docker does actually use a VM on windows and mac to generate a linux kernal https://benmarwick.github.io/UW-eScience-docker-for-reproducible-research/#7
  - Container projects
    - Rocker
      - http://dirk.eddelbuettel.com/blog/2014/10/23/
      - 
  - [[http://training.play-with-docker.com/alacart/][Docker classroom]]
    - [[http://training.play-with-docker.com/helloworld/][Hello World]]
  - https://github.com/LinuxAtDuke/Intro-To-Docker
  - https://www.google.com/search?q=where+are+docker+images+stored
  - [[https://dev.to/softchris/5-part-docker-series-beginner-to-master-3m1b][5 part Docker series, beginner to master]]
  - [[https://stackoverflow.com/questions/49503061/prompting-for-username-password-with-git-clone-from-dockerfile-run-step][Prompting for username/password with git clone from Dockerfile run step]]
  - https://medium.com/@tonistiigi/build-secrets-and-ssh-forwarding-in-docker-18-09-ae8161d066
  - https://linuxacademy.com/blog/docker/6-years-of-docker-hands-on-docker-training/
  - https://pyvideo.org/pycon-us-2013/the-future-of-linux-containers.html
  - my images
    - jeszyman/dev, local, push to secure docker hub 
  - [[file:~/data/Dockerfiles/][my Dockerfiles]]
  - docker compose
    - https://www.semanticscholar.org/paper/Using-Docker-Compose-for-the-Simple-Deployment-of-List/632c38a859b851b20c3988c773368991151fec33/figure/2
    - https://www.biorxiv.org/content/biorxiv/early/2017/12/26/239947.full.pdf
    - https://www.biostars.org/p/139326/
    - https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6042832/
  - https://www.balena.io/blog/our-dockerfile-tips-tricks/
  - compose
    - https://www.reddit.com/r/docker/comments/cwe2bt/a_handy_dockercompose_commands_and_examples/
- ideas
  - https://stackoverflow.com/questions/54412054/can-you-convert-build-a-docker-image-into-a-full-os-image
  - https://duckduckgo.com/?q=docker+container+daemon&t=canonical&ia=web
  - ideas
    - how to run over wusm vpn?
      - this d/n work https://medium.com/@faithfulanere/solved-docker-build-could-not-resolve-archive-ubuntu-com-apt-get-fails-to-install-anything-9ea4dfdcdcf2
    - auto builds and dockerfile in repo
      - https://docs.docker.com/docker-hub/builds/
      - https://stackoverflow.com/questions/27679740/how-to-add-dockerfile-to-a-docker-registry-page
    - https://www.google.com/search?q=docker+container+retain+command+history
  - consider docker add to add scripts
** Ideas
:PROPERTIES:
:ID:       58cecae5-0126-4608-b079-c0cb5c1835c8
:END:
- technical debt
  - universal unzip 
- dev
  - workflow
    - docker tool build
    - ?dir setup
    - ?tool validation
    - generate test data
    - dev
    - push to params
  - env
    - server
    - cloud
      - github repo
      - dockerhub repo
    - local
      - toolkit repo
        - dockerfile per-tool independent builds, tagged
      - project repo
        - nextflow nfs, parameterized
        - nextflow config
      - tmp- testing output files
** Local Variables                                                 :noexport:
:PROPERTIES:
:ID:       f20f9ff3-de38-4cf6-ae3a-b6abd131b450
:END:
#+property: header-args: results silent
#+property: header-args: cache yes
#+property: header-args: eval never-export
#+property: header-args: exports code
#+property: header-args: session *mpnst*
#+property: header-args: tangle no
#+property: header-args: var: project="mpnst" 
#+startup: overview
# Local Variables:
# truncate-lines: nil
# org-confirm-elsip-link-function: nil
# End:
