FROM ubuntu:bionic
#########1#########2#########3#########4#########5#########6#########7#########8
#########1#########2#########3#########4#########5#########6#########7#########8
###                                                                          ###
###               Dockerfile to build a basecamp docker image                ###
###                                                                          ###
#########1#########2#########3#########4#########5#########6#########7#########8
#########1#########2#########3#########4#########5#########6#########7#########8

#############
### Notes ###
#############
#
# After build, the image will be pushed to the dockerhub as
# jeszyman/basecamp
# (https://hub.docker.com/repository/docker/jeszyman/basecamp)

###########
### APT ###
###########

# Should block prompts for timezone or geographic area
ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update

RUN apt-get install -yq --no-install-recommends --allow-unauthenticated \
    build-essential \
    bzip2 \
    cifs.utils \
    cmake \
    dirmngr \
    emacs \
    gcc \
    git \
    gnupg \
    libcurl4-openssl-dev \
    libssl-dev \
    libfftw3-dev \
    libgsl-dev \
    libxmu-dev \
    libxml2-dev \
    locales \
    nano \
    parallel \
    screen \
    software-properties-common \
    wget

RUN apt-get autoremove -y && \
    apt-get autoclean -y && \
    apt-get clean

#################
### Miniconda ###
#################

RUN cd /tmp && wget --no-check-certificate https://repo.continuum.io/miniconda/Miniconda3-4.3.21-Linux-x86_64.sh
RUN bash /tmp/Miniconda3-4.3.21-Linux-x86_64.sh -b -p /opt/miniconda
ENV PATH="/opt/miniconda/bin:${PATH}"

#############################
### R 4 and CRAN Packages ###
#############################

# Import the signing key (by Michael Rutter) 
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9

# Add the R 4 repo from CRAN 
RUN add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"

#
RUN apt-get install -qq --no-install-recommends r-base r-base-dev

#
ENV PATH="/usr/bin:${PATH}"

#
RUN echo 'local({r <- getOption("repos"); r["CRAN"] <- "http://cran.r-project.org"; options(repos=r)})' > ~/.Rprofile

# R CRAN Installs
RUN R -e "install.packages(c('caret', \
                             'circularize', \
                             'cowplot', \
                             'cutpointr', \
                             'data.table', \
                             'devtools', \
                             'FSA', \
                             'ggplot2', \
                             'ggpval', \
                             'ggpubr', \
                             'ggsci', \
                             'ggvenn', \
                             'ggrepel', \
                             'git2r', \ 
                             'grid', \
                             'gridExtra', \
                             'Hmisc', \
                             'kableExtra', \
                             'naniar', \
                             'optparse', \
                             'pheatmap', \
                             'plyr', \
                             'RColorBrewer', \
                             'stringr', \
                             'tidyverse', \
                             'UpSetR', \
                             'viridis'), \
                             repos='http://cran.rstudio.com/')"