FROM ubuntu:bionic
<<<<<<< HEAD
=======

>>>>>>> e38920f37d20b14d9b45a1793c10396b5df74d07
#######################################################
#######################################################
###   Dockerfile to build a basecamp docker image   ###
#######################################################
#######################################################

<<<<<<< HEAD
#################
###   Notes   ###
#################
#
# After build, the image will be pushed to the dockerhub as
# jeszyman/basecamp
# (https://hub.docker.com/repository/docker/jeszyman/basecamp)
=======
###################
###    Notes    ###
###################

#  After build, the image will be pushed to the dockerhub as
#  jeszyman/basecamp
#  (https://hub.docker.com/repository/docker/jeszyman/basecamp)
#
#  The dockerfile is also available at
#  https://github.com/jeszyman/basecamp/blob/master/docker/basecamp_Dockerfile
>>>>>>> e38920f37d20b14d9b45a1793c10396b5df74d07

ARG DEBIAN_FRONTEND=noninteractive

<<<<<<< HEAD
###############
###   APT   ###
###############
=======
#################
###    APT    ###
#################
>>>>>>> e38920f37d20b14d9b45a1793c10396b5df74d07

RUN apt-get update

RUN apt-get install -yq --no-install-recommends --allow-unauthenticated --fix-missing \
    build-essential \
    bzip2 \
    cifs.utils \
    cmake \
    dirmngr \
    emacs \
    gcc \
    git \
    gnupg \
    libcurl4-openssl-dev \
    libfftw3-dev \
    libgsl-dev \
    libssl1.0.0 \
    libssl-dev \
    libtbb-dev \
    libtbb2 \
    libxmu-dev \
    libxml2-dev \
    locales \
    nano \
    parallel \
    screen \
    software-properties-common \
    wget


RUN apt-get autoremove -y && \
    apt-get autoclean -y && \
    apt-get clean

<<<<<<< HEAD
RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
    locale-gen
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
=======
RUN apt-get update
RUN apt-get install -y locales locales-all
RUN echo "en_US.UTF-8 UTF-8" | tee -a /etc/locale.gen
RUN locale-gen en_US.UTF-8

ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US.UTF-8

RUN echo "LC_ALL=en_US.UTF-8" >> /etc/environment
RUN echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
RUN echo "LANG=en_US.UTF-8" > /etc/locale.conf
>>>>>>> e38920f37d20b14d9b45a1793c10396b5df74d07

#####################
###   Miniconda   ###
#####################

RUN cd /tmp && wget --no-check-certificate https://repo.continuum.io/miniconda/Miniconda3-4.3.21-Linux-x86_64.sh
RUN bash /tmp/Miniconda3-4.3.21-Linux-x86_64.sh -b -p /opt/miniconda
ENV PATH="/opt/miniconda/bin:${PATH}"

#################################
###   R 4 and CRAN Packages   ###
#################################

RUN apt-get update -qq \
	&& apt-get install -qq --no-install-recommends \
        libcurl4-openssl-dev \
        libssl-dev


# import the signing key (by Michael Rutter) for these repo
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
# add the R 4.0 repo from CRAN -- adjust 'focal' to 'groovy' or 'bionic' as needed
RUN add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"
#
RUN apt-get install -qq --no-install-recommends r-base r-base-dev

ENV PATH="/usr/bin:${PATH}"
RUN echo 'local({r <- getOption("repos"); r["CRAN"] <- "http://cran.r-project.org"; options(repos=r)})' > ~/.Rprofile

# R CRAN Installs
RUN R -e "install.packages(c('caret', \
                             'circularize', \
                             'cowplot', \
                             'cutpointr', \
                             'data.table', \
                             'devtools', \
                             'FSA', \
                             'ggplot2', \
                             'ggpval', \
                             'ggpubr', \
                             'ggsci', \
                             'ggvenn', \
                             'ggrepel', \
                             'git2r', \
                             'grid', \
                             'gridExtra', \
                             'Hmisc', \
                             'kableExtra', \
                             'naniar', \
                             'optparse', \
                             'pheatmap', \
                             'plyr', \
                             'RColorBrewer', \
                             'stringr', \
                             'tidyverse', \
                             'UpSetR', \
                             'viridis'), \
                             repos='http://cran.rstudio.com/')"

RUN apt-get update -qq \
	&& apt-get install -qq --no-install-recommends \
        libxml2-dev

RUN R -e "install.packages('tidyverse',repos='http://cran.rstudio.com/')"