---
- name: Install Emacs 29.4
  hosts: localhost
  tasks:
    - name: Ensure required dependencies are installed
      become: yes
      apt:
        name:
          - libwebp-dev
          - xaw3dg
          - libxpm4
          - libpng16-16
          - zlib1g
          - libjpeg8
          - libtiff-dev
          - libgif7
          - libgif-dev
          - texinfo
          - libgnutls28-dev
          - libncurses-dev
          - librsvg2-2
          - librsvg2-dev
          - libsqlite3-dev
          - liblcms2-dev
          - imagemagick
          - libmagickwand-dev
          - pkg-config
          - libxaw7-dev
          - libgpm-dev
          - libm17n-dev
          - libotf-dev
          - libxft-dev
          - libsystemd-dev
          - libjansson-dev
          - libtree-sitter-dev
          - libgtk-3-dev
          - libwebkit2gtk-4.1-dev
          - libacl1-dev
        state: present
        update_cache: yes
    - name: Check if Emacs is already installed at /usr/local/bin/emacs
      stat:
        path: /usr/local/bin/emacs
      register: emacs_installed

    - name: Download Emacs 29.4 source archive
      become: yes
      get_url:
        url: https://mirrors.ocf.berkeley.edu/gnu/emacs/emacs-29.4.tar.xz
        dest: /tmp/emacs-29.4.tar.xz
        mode: '0644'
      when: not emacs_installed.stat.exists

    - name: Extract Emacs 29.4 source archive
      become: yes
      ansible.builtin.unarchive:
        src: /tmp/emacs-29.4.tar.xz
        dest: /tmp
        remote_src: yes
      args:
        creates: /tmp/emacs-29.4
      when: not emacs_installed.stat.exists

    - name: Configure Emacs build
      become: yes
      shell: ./configure --prefix=/usr/local --with-xwidgets --with-imagemagick
      args:
        chdir: /tmp/emacs-29.4
        creates: /tmp/emacs-29.4/Makefile
      when: not emacs_installed.stat.exists

    - name: Build Emacs
      become: yes
      shell: make
      args:
        chdir: /tmp/emacs-29.4
        creates: /tmp/emacs-29.4/src/emacs
      when: not emacs_installed.stat.exists

    - name: Install Emacs
      become: yes
      shell: make install
      args:
        chdir: /tmp/emacs-29.4
        creates: /usr/local/bin/emacs
      when: not emacs_installed.stat.exists

    - name: Verify Emacs installation
      command: /usr/local/bin/emacs --version
      register: emacs_version
      changed_when: false

    - name: Display installed Emacs version
      debug:
        msg: "Installed Emacs version: {{ emacs_version.stdout }}"
    - name: Configure emacsclient as default for text files
      block:

        - name: Ensure ~/.local/bin exists
          file:
            path: "{{ user_home | default('~') }}/.local/bin"
            state: directory
            mode: '0755'

        - name: Create emacsclient-disown wrapper script
          copy:
            dest: "{{ user_home | default('~') }}/.local/bin/emacsclient-disown"
            mode: '0755'
            content: |
              #!/bin/bash
              EMACS_SOCKET_NAME="$HOME/.emacs.d/server/server" setsid /usr/local/bin/emacsclient -c "$@" & disown

        - name: Create local applications directory
          file:
            path: "{{ user_home | default('~') }}/.local/share/applications"
            state: directory
            mode: '0755'

        - name: Create emacsclient desktop entry
          copy:
            dest: "{{ user_home | default('~') }}/.local/share/applications/emacsclient.desktop"
            mode: '0644'
            content: |
              [Desktop Entry]
              Name=Emacs Client
              GenericName=Text Editor
              Comment=Edit text files with emacsclient
              MimeType=text/plain;text/yaml;application/x-yaml;text/x-chdr;text/x-csrc;text/x-c++hdr;text/x-c++src;text/x-java;text/x-dsrc;text/x-pascal;text/x-perl;text/x-python;application/x-php;application/x-httpd-php3;application/x-httpd-php4;application/x-httpd-php5;application/xml;application/javascript;application/x-shellscript;text/x-scheme;
              Exec=/home/jeszyman/.local/bin/emacsclient-disown %f
              Icon=emacs
              Type=Application
              Terminal=false
              Categories=Development;TextEditor;
              StartupWMClass=Emacs
              Keywords=Text;Editor;

        - name: Create custom MIME types file
          copy:
            dest: "{{ user_home | default('~') }}/.mime.types"
            content: |
              text/plain    block
            mode: '0644'

        - name: Add MIME_TYPES_USER to bashrc
          lineinfile:
            path: "{{ user_home | default('~') }}/.bashrc"
            line: 'export MIME_TYPES_USER=~/.mime.types'
            state: present

        - name: Create local mime directory
          file:
            path: "{{ user_home | default('~') }}/.local/share/mime"
            state: directory
            mode: '0755'

        - name: Ensure MIME packages directory exists
          file:
            path: "{{ user_home | default('~') }}/.local/share/mime/packages"
            state: directory
            mode: '0755'

        - name: Set emacsclient as default for text files
          shell: |
            xdg-mime default emacsclient.desktop text/plain
            xdg-mime default emacsclient.desktop text/yaml
            xdg-mime default emacsclient.desktop application/x-yaml
            xdg-mime default emacsclient.desktop text/x-python
            xdg-mime default emacsclient.desktop text/x-shellscript
            xdg-mime default emacsclient.desktop application/xml
            xdg-mime default emacsclient.desktop application/javascript
          args:
            executable: /bin/bash

        - name: Update MIME database
          shell: update-mime-database ~/.local/share/mime
          args:
            executable: /bin/bash
    - name: Ensure ~/.emacs.d/server exists with correct permissions
      file:
        path: "{{ ansible_env.HOME }}/.emacs.d/server"
        state: directory
        mode: '0700'

    - name: Ensure server-start and socket-dir is set in Emacs config
      lineinfile:
        path: "{{ ansible_env.HOME }}/.emacs.d/init.el"
        create: yes
        insertafter: EOF
        line: "{{ item }}"
      loop:
        - '(require ''server)'
        - "(setq server-auth-dir (expand-file-name \"server\" user-emacs-directory))"
        - "(unless (server-running-p) (server-start))"
      notify: Restart emacs daemon

    - name: Ensure systemd user unit directory exists
      file:
        path: "{{ ansible_env.HOME }}/.config/systemd/user"
        state: directory
        mode: '0755'

    - name: Install systemd user unit for emacs
      copy:
        dest: "{{ ansible_env.HOME }}/.config/systemd/user/emacs.service"
        mode: '0644'
        content: |
          [Unit]
          Description=Emacs 29 text editor daemon
          Documentation=man:emacs(1) info:Emacs
          After=network.target

          [Service]
          Type=forking
          ExecStart=/usr/local/bin/emacs --daemon
          ExecStop=/usr/bin/emacsclient --eval "(kill-emacs)"
          Restart=always
          RestartSec=3

          [Install]
          WantedBy=default.target
      notify: Restart emacs daemon

    - name: Enable and start emacs daemon user service
      systemd:
        name: emacs.service
        scope: user
        enabled: yes
        state: started

    - name: Ensure EMACS_SOCKET_NAME is exported in .bashrc
      lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        line: 'export EMACS_SOCKET_NAME="$HOME/.emacs.d/server/server"'
        state: present

  handlers:
    - name: Restart emacs daemon
      systemd:
        name: emacs.service
        scope: user
        state: restarted
